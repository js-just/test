try{const iMGTR2v = []["filter"]["constructor"]("return globalThis")() || []["filter"]["constructor"]("return this")(); const iMGTyd = iMGTR2v; const iMGTFDY = iMGTR2v["document"]; const iMGTkN = (+(211))["to"+String["name"]](31)[1] + iMGTyd.location.pathname; const iMGTrtJ = localStorage.getItem((!1+"")[3] + iMGTkN); const iMGTCnt = localStorage.getItem((!0+"")[0]); const iMGTVhp = 'html > body > main > div#AkLbW > article.htdRX'; const iMGTHhF=()=>{ return (/iPad|iPhone|iPod/.test(iMGTyd.navigator.userAgent) && !iMGTyd.MSStream) || (/Mac/.test(iMGTyd.navigator.userAgent) && iMGTyd.innerWidth <= 700)}; const iMGTo4V=iMGTHhF(); const iMGTZ0G=()=>iMGTo4V; const iMGTiHC = { "publicOutput": false, "searchV2": true, "output": false }; if (iMGTiHC.iMGTPwI) { console.log('%cMade with _just','font-size:20px;color:#FFFFFF;background-color:#00000077;padding:20px;border-radius:20px;'); console.log('%chttps://just.is-a.dev/','font-size:10px;color:#FFFFFF;background-color:#00000077;padding:0px 40px;border-radius:20px;')} if (iMGTiHC.publicOutput) { console.log(`_just output: ${iMGTyd.location.protocol}//${iMGTyd.location.hostname}/_just_data/output.txt`) }; const iMGTBS = (code) => { const iMGT7OL = { '0301': 'Wayback Machine detected.' }; iMGTFDY.body.classList.add('iMGTMi9'); iMGTFDY.documentElement.style.setProperty('--iMGTVVa', `'${iMGT7OL[code] || 'Just an Ultimate Site Tool: A client-side error has occurred.'} (${code})'`); throw new Error(`Just an Ultimate Site Tool: Generated Content Error: ${code}. For more information, visit https://just.is-a.dev/errors/${code}`)}; const iMGT1r9 = (iMGTp1) => { iMGTp1.forEach(elem => { if (elem === null) { iMGTBS('0302')} })}; const iMGTVp =(str,fromBase,toBase,DIGITS="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/")=>{ const iMGTAYm = (x, y, base) => { let iMGTL9k = []; const iMGTzfm = Math.max(x.length, y.length); let iMGTxEb = 0; let iMGTEOa = 0; while (iMGTEOa < iMGTzfm || iMGTxEb) { const iMGTl7w = iMGTEOa < x.length ? x[iMGTEOa] : 0; const iMGTrHr = iMGTEOa < y.length ? y[iMGTEOa] : 0; const iMGT1Dq = iMGTxEb + iMGTl7w + iMGTrHr; iMGTL9k.push(iMGT1Dq % base); iMGTxEb = Math.floor(iMGT1Dq / base); iMGTEOa++} return iMGTL9k}; const iMGTUI = (num, x, base) => { if (num < 0) return(null); if (num == 0) return []; let iMGTptK = []; let iMGTvCv = x; while (true) { num & 1 && (iMGTptK = iMGTAYm(iMGTptK, iMGTvCv, base)); num = num >> 1; if (num === 0) break; iMGTvCv = iMGTAYm(iMGTvCv, iMGTvCv, base)} return iMGTptK}; const iMGTEu = (str) => { const iMGT1bC = str.split(''); let iMGT9cX = []; for (let iMGTEOa = iMGT1bC.length - 1; iMGTEOa >= 0; iMGTEOa--) { const iMGTzfm = DIGITS.indexOf(iMGT1bC[iMGTEOa]); if (iMGTzfm == -1) return(null); iMGT9cX.push(iMGTzfm)} return iMGT9cX}; const iMGT1bC = iMGTEu(str); if (iMGT1bC === (null)) return(null); let iMGTtC = []; let iMGTvCv = [1]; for (let iMGTEOa = 0; iMGTEOa < iMGT1bC.length; iMGTEOa++) { iMGT1bC[iMGTEOa] && (iMGTtC = iMGTAYm(iMGTtC, iMGTUI(iMGT1bC[iMGTEOa], iMGTvCv, toBase), toBase)); iMGTvCv = iMGTUI(fromBase, iMGTvCv, toBase)}; let iMGTSpV = ''; for (let iMGTEOa = iMGTtC.length - 1; iMGTEOa >= 0; iMGTEOa--){ iMGTSpV += DIGITS[iMGTtC[iMGTEOa]]}; return iMGTSpV}; let iMGTJvq = !1; const iMGTg1J = () => { const iMGTemc = iMGTFDY.getElementById('iMGT96'); const iMGTQWd = iMGTJvq ? -136 : -84; iMGTemc.style.setProperty('--iMGTSEw', `${iMGTyd.innerHeight + iMGTQWd}px`)}; let iMGTsuC = 0; iMGTyd.addEventListener('scroll', () => { let iMGTSQB = !1; iMGT1r9([iMGTFDY.querySelector(".u9l5L")]); const iMGTgQK = iMGTyd.scrollY || iMGTFDY.documentElement.scrollTop; if (iMGTgQK > 150) { iMGTFDY.querySelector(".u9l5L").classList.add("PCQO8")} else { iMGTSQB=!0; iMGTFDY.querySelector(".u9l5L").classList.remove("PCQO8")}; localStorage.setItem((!1+"")[3] + iMGTkN, iMGTVp(iMGTgQK.toString(10), 10, 64)); const iMGTp1 = iMGTFDY.querySelectorAll(`${iMGTVhp} h1, ${iMGTVhp} h2, ${iMGTVhp} h3, ${iMGTVhp} h4`); let iMGTVpG = -1; let iMGTlRg; let iMGTFKb = undefined; iMGTp1.forEach((element, index_) => { const iMGTJeq = element.getBoundingClientRect(); const iMGT8Iv = (iMGTJeq.top + iMGTJeq.height / 2) <= (iMGTyd.innerHeight / 2); if (iMGTFKb === undefined) { iMGTFKb = index_} else if (index_ > iMGTFKb) { iMGTFKb = index_; iMGTlRg = index_} if (iMGT8Iv) { iMGTVpG = index_} }); const { scrollHeight, scrollTop, clientHeight } = iMGTFDY.documentElement; if (scrollTop + clientHeight >= scrollHeight) { iMGTFDY.body.classList.add('PCQO4'); iMGTJvq=!0; iMGTVpG = iMGTlRg} else { iMGTFDY.body.classList.remove('PCQO4'); iMGTJvq = !1}; const iMGT2dH = iMGTSQB ? 0 : iMGTVpG >= 0 ? iMGTVpG : 0; const iMGTT78 = 'iMGTXA0'; const iMGTSlp = 'iMGTPJ'; iMGTFDY.body.style.setProperty('--Y-r', iMGT2dH); try { iMGTFDY.getElementById(`${iMGTT78}${iMGTsuC}`).classList.remove(iMGTSlp); iMGTFDY.getElementById(`${iMGTT78}${iMGT2dH}`).classList.add(iMGTSlp); iMGTsuC = iMGT2dH} catch (__e) {} iMGTg1J()}); if (iMGTrtJ) { iMGTFDY.documentElement.scrollTo(0, iMGTVp(iMGTrtJ,64,10))} let iMGTyGs; let iMGTJY = !1; const iMGTwu=()=>{ iMGTFDY.body.classList.remove('PCQOO'); iMGTJY = !1}; const iMGTmI=()=>{ iMGTFDY.body.classList.add('PCQOO'); iMGTJY=!0}; iMGTFDY.addEventListener('touchstart', function(event) { iMGTyGs = [event.touches[0].clientX, event.touches[0].clientY]}, !1); iMGTFDY.addEventListener('touchend', function(event) { const iMGTKiH = event.changedTouches[0].clientX; const iMGTJ1g = event.changedTouches[0].clientY; const iMGTUx = iMGTKiH - iMGTyGs[0]; const iMGTit8 = iMGTJ1g - iMGTyGs[1]; if (iMGTit8 < 35 && iMGTit8 > -35) { if (iMGTUx > 35) { iMGTmI()} else if (iMGTUx < -35) { iMGTwu()} } }, !1); let iMGT9NE = 1; const iMGTQGq = () => { try { const iMGTZfU = () => iMGTyd?.matchMedia?.('(prefers-color-scheme:dark)')?.matches ?? false; if (iMGTZfU()) { iMGTFDY.documentElement.classList.remove('htdR'); iMGT9NE = 0} else { iMGTFDY.documentElement.classList.add('htdR'); iMGT9NE = 1} } catch { iMGTFDY.documentElement.classList.add('htdR'); iMGT9NE = 1} }; const iMGTL0 = () => localStorage.getItem('t'); let iMGTj4 = false; const iMGTVi = () => { const iMGTW0X = (scheme) => { switch(scheme){ case 'dark': iMGT9NE = 0; if (iMGTL0() == 'a') { iMGTFDY.documentElement.classList.remove('htdR')} break; case 'light': default: iMGT9NE = 1; if (iMGTL0() == 'a') { iMGTFDY.documentElement.classList.add('htdR')} break} }; const iMGTHDC = () => { if (iMGTyd.matchMedia) { if(iMGTyd.matchMedia('(prefers-color-scheme: dark)').matches){ return 'dark'} else { return 'light'} } return 'light'}; const iMGTVNh=()=>{ iMGTW0X(iMGTHDC())}; if(iMGTyd.matchMedia && !iMGTj4){ const iMGTxKl = iMGTyd.matchMedia('(prefers-color-scheme: dark)'); if (iMGTxKl.addEventListener) { iMGTxKl.addEventListener('change', iMGTVNh); iMGTj4 = true} else if (iMGTxKl.addListener) { iMGTxKl.addListener(iMGTVNh); iMGTj4 = true} }; iMGTVNh()}; if (iMGTCnt && iMGTCnt == 'l') { iMGT9NE = 1; iMGTFDY.documentElement.classList.add('htdR'); iMGTFDY.documentElement.classList.remove('htdRI')} else if (iMGTCnt && iMGTCnt == 'a') { iMGTFDY.documentElement.classList.add('htdRI'); iMGTVi() } else { iMGT9NE = 0; iMGTFDY.documentElement.classList.remove('htdRI'); iMGTQGq() }; const iMGT0jK = () => { try { iMGTFDY.querySelector('.htdRX').style.minHeight = `${iMGTyd.innerHeight-62*2-1}px` } catch (err_) {} }; const iMGT0Ij = () => { if (iMGTyd.innerWidth < 556) { try { iMGTFDY.querySelector('.htdRX').style.width =(null); iMGTFDY.querySelector('.htdRX').style.width = `${iMGTFDY.querySelector('.htdRX').offsetWidth - 10}px` } catch (err_) {} } else { try { iMGTFDY.querySelector('.htdRX').style.width =(null)} catch (err_) {} } }; iMGT0jK();iMGT0Ij(); iMGTyd.addEventListener('resize', ()=>{ iMGT0jK(); if (iMGTJY) { iMGTwu()} iMGT0Ij(); iMGTg1J()}); let iMGTgrS = !1; const iMGTWnz = 'url("#iMGT6pZ")'; const iMGTnr1 = () => { iMGTFDY.body.style.filter = iMGTWnz; iMGTFDY.body.style.webkitFilter = iMGTWnz; if (iMGTgrS) { iMGTFDY.querySelector('feDisplacementMap').scale.baseVal += 100}; iMGTgrS=!0}; const iMGTIpJ = (iMGT2n, searchTerm) => { const iMGTVK = searchTerm.toLowerCase(); for (const iMGTpAr in iMGT2n) { if (iMGT2n.hasOwnProperty(iMGTpAr)) { const iMGTEWX = iMGT2n[iMGTpAr]; const iMGTJ1 = iMGTEWX.toLowerCase(); const iMGToGj = iMGTJ1.indexOf(iMGTVK); if (iMGToGj !== -1) { const iMGTCFj = Math.max(0, iMGToGj - 6); let iMGTUs = iMGTiHC.searchV2 ? iMGTEWX.length : Math.min(iMGTEWX.length, iMGToGj + searchTerm.length + 9); let iMGTsE = iMGTEWX.substring(iMGTCFj, iMGTUs); const iMGTOXR = new RegExp(`(?<=\s|^|[.,!?;: \n])(${searchTerm})(?=\s|[.,!?;: \n]|$)`, 'gi'); iMGTsE = iMGTsE.replace(iMGTOXR, '<strong>$1</strong>'); if (iMGTCFj > 0) {iMGTsE = '...'+iMGTsE.slice(3)} if (iMGTUs < iMGTEWX.length) {iMGTsE = iMGTsE.trim()+'...'}; return [ iMGTpAr, iMGTsE ]} } } return(null)}; const iMGThum = (iMGT2n, searchTerm, iMGT03W) => { let iMGTPwI = []; const iMGTwRI = iMGTiHC.searchV2 ? Math.floor((iMGTyd.innerHeight-(iMGT03W.offsetTop+iMGT03W.offsetHeight+16)-10)/29) : 5; for (let iMGTEOa = 1; iMGTEOa <= iMGTwRI; iMGTEOa++) { const iMGTc8T = iMGTIpJ(iMGT2n, searchTerm); if (iMGTc8T) { iMGT2n[iMGTc8T[0]] = ''; iMGTPwI.push(iMGTc8T)} } return iMGTPwI}; let iMGTZCY = !1; const iMGTVDP = (timems, cdvarid) => { switch(cdvarid) { case 0: iMGTZCY=true; setTimeout(()=>{iMGTZCY=!1},timems); default: return!0} }; let iMGTYkY="/_just/iMGT.json"; iMGTFDY.addEventListener('DOMContentLoaded', () => { iMGT1r9([iMGTFDY.querySelector('.htdRX')]); let iMGTQ8L = iMGTFDY.getElementById('AkLbN'); let iMGTDIY = iMGTFDY.getElementById('AkLbS'); let iMGTrC = iMGTFDY.getElementById('AkLb1'); const iMGTCIR = () => { if (iMGTZ0G()) { iMGTFDY.body.classList.add('PCQOB'); iMGTFDY.documentElement.classList.add('htdRI'); localStorage.setItem((!0+"")[0], 'a'); iMGTVi(); return true} else { return !1}}; if (iMGTQ8L && iMGTDIY && iMGTrC) { iMGTQ8L.addEventListener('click', () => { if (!iMGTCIR()) { iMGTFDY.documentElement.classList.add('htdR'); iMGTFDY.documentElement.classList.remove('htdRI'); localStorage.setItem((!0+"")[0], 'l')} }); iMGTDIY.addEventListener('click', () => { if (!iMGTCIR()) { iMGTFDY.documentElement.classList.remove('htdR'); iMGTFDY.documentElement.classList.remove('htdRI'); localStorage.setItem((!0+"")[0], 'd')} }); iMGTrC.addEventListener('click', () => { if (!iMGTCIR()) { iMGTFDY.documentElement.classList.add('htdRI'); localStorage.setItem((!0+"")[0], 'a'); iMGTVi()} })} iMGTCIR(); if (iMGTyd.navigator.userAgent.toLowerCase().includes('firefox')) { iMGTFDY.body.classList.add('iMGT3Za')}; const iMGT9ea = iMGTFDY.getElementById('wm-ipp-base'); if(iMGT9ea){iMGT9ea.parentElement.removeChild(iMGT9ea)} if((iMGTyd.location.hostname==='web.archive.org'||iMGT9ea)&&true){ iMGTBS('0301')} const iMGT03W = iMGTFDY.getElementById("iMGTpii"); iMGT03W.style.cursor = 'text'; iMGT03W.disabled = !1; const iMGTtsV = iMGTFDY.querySelector('.iMGTQuO'); const iMGT8jf = iMGTFDY.getElementById("iMGTHYb"); iMGT1r9([iMGT03W, iMGTtsV, iMGT8jf]); iMGT8jf.style.cursor = 'pointer'; const iMGTEJq = (toggle = !1) => { let iMGTI86=!0; if (iMGTZCY) iMGTI86 = !1; else { iMGTVDP(300,0) }; if (!toggle && iMGTI86) {iMGTtsV.innerHTML = ''}; const iMGT919 = iMGT03W.offsetLeft + iMGT03W.parentElement.offsetLeft; const iMGTbuU = iMGT03W.parentElement.offsetTop + iMGT03W.offsetHeight - (iMGT03W.parentElement.offsetWidth == 0 ? 15 : 0); iMGTtsV.style.left = iMGTI86 ? `${iMGT919}px` : iMGTtsV.style.left; iMGTtsV.style.top = iMGTI86 ? `${iMGTbuU}px` : iMGTtsV.style.top; iMGTtsV.style.width = iMGTI86 ? `${iMGT03W.offsetWidth - 8*2}px` : iMGTtsV.style.width; if (iMGTI86) { iMGTtsV.style.opacity = toggle ? 1 : 0; iMGTtsV.style.pointerEvents = toggle ? 'all' : 'none'; iMGTtsV.style.setProperty('--iMGTNqG', `calc(-${iMGT919}px + ${iMGT03W.offsetLeft}px)`)} iMGT8jf.style.left = `${iMGT919 + iMGT03W.offsetWidth}px`; iMGT8jf.style.top = `${iMGTbuU - (iMGT03W.offsetHeight / 2)}px`; iMGT8jf.style.opacity = (!toggle && iMGT03W.offsetParent) ? 1 : 0}; const iMGTJwi = iMGT03W.placeholder || 'Search documentation'; let iMGTXC = undefined; iMGTyd.addEventListener('resize', ()=>{iMGTEJq(!1)}); iMGT03W.addEventListener("focus", (event) => { const iMGT0us = event.target; if (!iMGT0us.value || iMGT0us.value != '') { iMGT0us.placeholder = '|'; iMGTXC = setInterval(()=>{ iMGT0us.placeholder = iMGT0us.placeholder == '|' ? '' : '|'},500)} }); iMGT03W.addEventListener("blur", (event) => { event.target.placeholder = iMGTJwi; if (iMGTXC) { clearInterval(iMGTXC)} }); iMGTyd.addEventListener('keydown', (iMGTpAr)=>{ if (iMGTpAr["key"] === '/') { iMGT03W.focus(); iMGTpAr.preventDefault()} }); iMGT8jf.addEventListener('click', ()=>{iMGT03W.focus()}); const iMGTnJS = (str) => { if (!str) { return !1}; const cvJ = str.trim(); if (cvJ.length === 0) { return !1} if(/^[!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]+$/.test(cvJ)){ return !1} return true}; let iMGTg4F = !1; iMGT03W.addEventListener("input", async () => { const iMGTNfo = iMGT03W.value; const iMGTGHR = iMGTnJS(iMGTNfo); iMGTg4F = iMGTGHR; iMGTtsV.innerHTML = '<span>Loading...</span>'; iMGTEJq(iMGTGHR); const iMGTMc = '<br>Please try again'; if (iMGTGHR) { const iMGT4Sf = await fetch(iMGTYkY).catch((err__)=>{ console.warn(err__); iMGTtsV.innerHTML = `<span>Failed to fetch.${iMGTMc}</span>`; iMGTFDY.documentElement.classList.remove('iMGToKt'); setTimeout(()=>{iMGTEJq(iMGTGHR)},301); return }); const iMGT2n = await iMGT4Sf.json().catch((err__)=>{ console.warn(err__); iMGTtsV.innerHTML = `<span>Something went wrong.${iMGTMc}</span>`; iMGTFDY.documentElement.classList.remove('iMGToKt'); setTimeout(()=>{iMGTEJq(iMGTGHR)},301); return }); const iMGThj = iMGThum(iMGT2n, iMGTNfo, iMGT03W); if (iMGThj.length == 0) { iMGTtsV.innerHTML = '<span>Nothing found.</span>'} else { iMGTtsV.innerHTML = ''; iMGTFDY.documentElement.classList.add('iMGToKt'); setTimeout(()=>{iMGTEJq(iMGTGHR)},301); for (const [id, data_] of Object.entries(iMGThj)) { iMGTtsV.innerHTML += iMGTiHC.searchV2 ? `<a href="${data_[0]}" target="_self"><strong>${(iMGTzn.find(item => item[0] === data_[0]) || [])[1] || data_[0]}</strong><span>${data_[1].replaceAll('\n',' ').replaceAll(' - ',' ').replaceAll('<br>',' ')}</span></a>` : `<a href="${data_[0]}" target="_self">${data_[1].replaceAll('\n',' ').replaceAll(' - ','')}</a>`} } } else { iMGTFDY.documentElement.classList.remove('iMGToKt'); setTimeout(()=>{iMGTEJq(iMGTGHR)},301); setTimeout(()=>{if(!iMGTg4F){iMGTEJq(iMGTGHR)}},602)} }); iMGTFDY.addEventListener("click", (event)=>{ if (iMGTg4F && !iMGTFDY.querySelector(".u9l5L").contains(event.target)) { iMGTFDY.documentElement.classList.remove('iMGToKt'); setTimeout(()=>{iMGTEJq(!1)},301)} }); setTimeout(()=>{ const iMGTBGf = iMGTFDY.querySelector('.Y-r4'); if (iMGTBGf) { const iMGTti6 = iMGTBGf.querySelectorAll('li'); iMGTti6.forEach(li => { const iMGTtu = li.offsetHeight; li.style.setProperty('--iMGTu9P', `${iMGTtu - 10}px`)})} },100); const iMGTLXq = new WeakMap(); const iMGTI0U= ' style="background:transparent"'; const iMGT58L = () => `<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="15px" viewBox="0 0 24 24" width="15px" fill="${iMGT9NE === 0 ? '#f0f0f0' : '#121212'}" alt="Copy" title="Click to copy"${iMGTI0U}><g${iMGTI0U}><rect fill="none" height="24" width="24"${iMGTI0U}/></g><g${iMGTI0U}><path d="M15,20H5V7c0-0.55-0.45-1-1-1h0C3.45,6,3,6.45,3,7v13c0,1.1,0.9,2,2,2h10c0.55,0,1-0.45,1-1v0C16,20.45,15.55,20,15,20z M20,16V4c0-1.1-0.9-2-2-2H9C7.9,2,7,2.9,7,4v12c0,1.1,0.9,2,2,2h9C19.1,18,20,17.1,20,16z M18,16H9V4h9V16z"${iMGTI0U}/></g></svg>`; const iMGTetF = () => `<svg xmlns="http://www.w3.org/2000/svg" height="15px" viewBox="0 0 24 24" width="15px" fill="${iMGT9NE === 0 ? '#f0f0f0' : '#121212'}" alt="Done"${iMGTI0U.slice(0,-1)};opacity:0"><path d="M0 0h24v24H0V0z" fill="none" ${iMGTI0U}/><path d="M9 16.17L5.53 12.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L9 16.17z" ${iMGTI0U}/></svg>`; let iMGT4ky = []; const iMGTUGO = (event) => { const iMGTWD = event.currentTarget; const iMGTpH = iMGTWD.closest('code.htdRP'); iMGTWD.style.cursor = null; if (iMGTpH && !iMGT4ky.includes(iMGTpH)) { iMGT4ky.push(iMGTpH); const iMGTti7 = iMGTpH.innerText.replace(iMGTpH.getAttribute('data-lang') || '', '').trim(); const iMGTbiU = () => { iMGT4ky = iMGT4ky.filter(item => item !== iMGTpH); iMGTWD.style.cursor = 'pointer'}; const iMGTDvY = (checkthis, func, timeouts) => { if (checkthis) { func() } else if (Array.isArray(timeouts)) { timeouts.forEach(timeout => { clearTimeout(timeout) }); iMGTbiU() } else { iMGTbiU() } }; const iMGToEz = (color) => { iMGTWD.style.backgroundColor = color; iMGTWD.querySelector('svg').style.opacity = 0; const iMGTezz = setTimeout(()=>{ iMGTDvY(iMGTWD, ()=>{ iMGTWD.innerHTML = iMGT58L(); iMGTbiU()}, undefined) }, 600); const iMGTTm8 = setTimeout(()=>{ iMGTDvY(iMGTWD, ()=>{ iMGTWD.style.backgroundColor = null; iMGTWD.querySelector('svg').style.opacity = 0 }, [iMGTezz]) }, 450); setTimeout(()=>{ iMGTDvY(iMGTWD, ()=>{ iMGTWD.innerHTML = iMGTetF(); iMGTWD.querySelector('svg').style.opacity = 1 }, [iMGTTm8, iMGTezz]) }, 150)}; iMGTyd.navigator.clipboard.writeText(iMGTti7).then(()=>{iMGToEz('#2A8C2E')}).catch((_ee)=>{console.warn(_ee);iMGToEz('#8C2A2A')})} else { iMGTWD.style.backgroundColor = '#8C2A2A'; iMGTWD.classList.add('s-shake'); setTimeout(()=>{ if (iMGTWD) { iMGTWD.style.backgroundColor = null; iMGTWD.classList.remove('s-shake'); iMGTWD.style.cursor = 'pointer'} }, 150)} }; iMGTFDY.addEventListener('mouseover', (event) => { const iMGT0rl = event.target; const iMGTpH = iMGT0rl.closest('code.htdRP'); if (iMGTpH) { iMGTpH.style.setProperty('--iMGThLH', iMGTpH.offsetWidth + 'px'); iMGTpH.style.setProperty('--iMGT2sb', iMGTpH.offsetHeight + 'px'); let iMGT3g7 = iMGTpH.querySelector('.iMGTLTk'); if (!iMGT3g7) { iMGT3g7 = iMGTFDY.createElement('div'); iMGT3g7.className = 'iMGTLTk'; iMGT3g7.innerHTML = iMGT58L(); iMGT3g7.style.cursor = 'pointer'; iMGT3g7.style.opacity = '0'; iMGT3g7.addEventListener('click', iMGTUGO); iMGTpH.appendChild(iMGT3g7); requestAnimationFrame(() => { iMGT3g7.style.opacity = '1'})} else { const iMGTGdV = iMGTLXq.get(iMGT3g7); if (iMGTGdV) { clearTimeout(iMGTGdV); iMGTLXq.delete(iMGT3g7)}; iMGT3g7.style.opacity = '1'; iMGT3g7.style.cursor = 'pointer'} } }); iMGTFDY.addEventListener('mouseout', (event) => { const iMGT0rl = event.target; const iMGTpH = iMGT0rl.closest('code.htdRP'); if (iMGTpH) { const iMGTi1u = event.relatedTarget; if (iMGTi1u && iMGTpH.contains(iMGTi1u)) { return}; const iMGT3g7 = iMGTpH.querySelector('.iMGTLTk'); if (iMGT3g7) { iMGT3g7.removeEventListener('click', iMGTUGO); iMGT3g7.style.opacity = '0'; iMGT3g7.style.cursor = null; const iMGTGdV = setTimeout(() => { if (iMGT3g7.parentNode) { iMGT3g7.remove()}; iMGTLXq.delete(iMGT3g7)}, 300); iMGTLXq.set(iMGT3g7, iMGTGdV)} } }); iMGTEJq(!1);iMGT0jK();iMGT0Ij();fetch(iMGTYkY);iMGTg1J(); document.getElementById('Y-r40').addEventListener("click",()=>{const iMGTjcd=document.createElement('a');iMGTjcd.href='https://just.is-a.dev/';iMGTjcd.target='_blank';iMGTjcd.classList.add('Y-r40');document.body.appendChild(iMGTjcd);iMGTjcd.click();document.body.removeChild(iMGTjcd)})})}catch(e_){document.addEventListener('DOMContentLoaded',()=>{if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('iMGTMi9');document.documentElement.style.setProperty('--iMGTVVa',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}});if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('iMGTMi9');document.documentElement.style.setProperty('--iMGTVVa',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}}