try{const GCLKKSb = []["filter"]["constructor"]("return globalThis")() || []["filter"]["constructor"]("return this")(); const GCLKKIG = GCLKKSb; const GCLKBZu = GCLKKSb["document"]; const GCLKMSW = (+(211))["to"+String["name"]](31)[1] + GCLKKIG.location.pathname; const GCLKNJy = localStorage.getItem((![]+"")[3] + GCLKMSW); const GCLKnrB = localStorage.getItem((!![]+"")[0]); const GCLKNsU = 'html > body > main > div#slXkV > article.ZMITH'; const GCLKYp0=()=>{ return (/iPad|iPhone|iPod/.test(navigator.userAgent) && !GCLKKIG.MSStream) || (/Mac/.test(navigator.userAgent) && GCLKKIG.innerWidth <= 700)}; const GCLKwEa=GCLKYp0(); const GCLKZdG=()=>GCLKwEa; const GCLKUVe = { "publicOutput": true, "searchV2": true }; console.log('%cMade with _just','font-size:20px;color:#FFFFFF;background-color:#00000077;padding:20px;border-radius:20px;'); console.log('%chttps://just.is-a.dev/','font-size:10px;color:#FFFFFF;background-color:#00000077;padding:0px 40px;border-radius:20px;'); if (GCLKUVe.publicOutput) { console.log(`_just output: ${GCLKKIG.location.protocol}//${GCLKKIG.location.hostname}/_just_data/output.txt`) }; const GCLKlG2 =(str,fromBase,toBase,DIGITS="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/")=>{ const GCLKOO = (x, y, base) => { let GCLKaBS = []; const GCLK6t = Math.max(x.length, y.length); let GCLKV1R = 0; let GCLK9oB = 0; while (GCLK9oB < GCLK6t || GCLKV1R) { const GCLK87D = GCLK9oB < x.length ? x[GCLK9oB] : 0; const GCLKkX8 = GCLK9oB < y.length ? y[GCLK9oB] : 0; const GCLKYsR = GCLKV1R + GCLK87D + GCLKkX8; GCLKaBS.push(GCLKYsR % base); GCLKV1R = Math.floor(GCLKYsR / base); GCLK9oB++} return GCLKaBS}; const GCLK1Im = (num, x, base) => { if (num < 0) return(null); if (num == 0) return []; let GCLKPi = []; let GCLKKEc = x; while (true) { num & 1 && (GCLKPi = GCLKOO(GCLKPi, GCLKKEc, base)); num = num >> 1; if (num === 0) break; GCLKKEc = GCLKOO(GCLKKEc, GCLKKEc, base)} return GCLKPi}; const GCLKRyQ = (str) => { const GCLKOml = str.split(''); let GCLKU1r = []; for (let GCLK9oB = GCLKOml.length - 1; GCLK9oB >= 0; GCLK9oB--) { const GCLK6t = DIGITS.indexOf(GCLKOml[GCLK9oB]); if (GCLK6t == -1) return(null); GCLKU1r.push(GCLK6t)} return GCLKU1r}; const GCLKOml = GCLKRyQ(str); if (GCLKOml === (null)) return(null); let GCLKa3n = []; let GCLKKEc = [1]; for (let GCLK9oB = 0; GCLK9oB < GCLKOml.length; GCLK9oB++) { GCLKOml[GCLK9oB] && (GCLKa3n = GCLKOO(GCLKa3n, GCLK1Im(GCLKOml[GCLK9oB], GCLKKEc, toBase), toBase)); GCLKKEc = GCLK1Im(fromBase, GCLKKEc, toBase)}; let GCLKKyy = ''; for (let GCLK9oB = GCLKa3n.length - 1; GCLK9oB >= 0; GCLK9oB--){ GCLKKyy += DIGITS[GCLKa3n[GCLK9oB]]}; return GCLKKyy}; GCLKKIG.addEventListener('scroll', () => { let GCLK51H=![]; if (GCLKBZu.body.scrollTop > 150 || GCLKBZu.documentElement.scrollTop > 150) { GCLKBZu.querySelector(".F6O3W").classList.add("QUApB")} else { GCLK51H=!![]; GCLKBZu.querySelector(".F6O3W").classList.remove("QUApB")}; localStorage.setItem((![]+"")[3] + GCLKMSW, GCLKlG2(GCLKBZu.documentElement.scrollTop.toString(10),10,64)); const GCLKDb2 = GCLKBZu.querySelectorAll(`${GCLKNsU} h1, ${GCLKNsU} h2, ${GCLKNsU} h3, ${GCLKNsU} h4`); let GCLKoeV = -1; let GCLK75F; let GCLKkia = undefined; GCLKDb2.forEach((element, GCLKug3) => { const GCLKYga = element.getBoundingClientRect(); const GCLKZSO = (GCLKYga.top + GCLKYga.height / 2) <= (GCLKKIG.innerHeight / 2); if (GCLKkia === undefined) { GCLKkia = GCLKug3} else if (GCLKug3 > GCLKkia) { GCLKkia = GCLKug3; GCLK75F = GCLKug3} if (GCLKZSO) { GCLKoeV = GCLKug3} }); const { scrollHeight, scrollTop, clientHeight } = GCLKBZu.documentElement; if (scrollTop + clientHeight >= scrollHeight) { GCLKBZu.body.classList.add('QUAp0'); GCLKoeV = GCLK75F} else { GCLKBZu.body.classList.remove('QUAp0')}; GCLKBZu.body.style.setProperty('--J1H', GCLK51H ? 0 : GCLKoeV >= 0 ? GCLKoeV : 0)}); if (GCLKNJy) { GCLKBZu.documentElement.scrollTo(0, GCLKlG2(GCLKNJy,64,10))} let GCLKWwA; let GCLK2Ly = ![]; const GCLK6j6=()=>{ GCLKBZu.body.classList.remove('QUApG'); GCLK2Ly = ![]}; const GCLKCqb=()=>{ GCLKBZu.body.classList.add('QUApG'); GCLK2Ly=!![]}; GCLKBZu.addEventListener('touchstart', function(event) { GCLKWwA = [event.touches[0].clientX, event.touches[0].clientY]}, ![]); GCLKBZu.addEventListener('touchend', function(event) { const GCLKL5I = event.changedTouches[0].clientX; const GCLKx1 = event.changedTouches[0].clientY; const GCLKkJ = GCLKL5I - GCLKWwA[0]; const GCLKOs = GCLKx1 - GCLKWwA[1]; if (GCLKOs < 35 && GCLKOs > -35) { if (GCLKkJ > 35) { GCLKCqb()} else if (GCLKkJ < -35) { GCLK6j6()} } }, ![]); const GCLKrOS = () => { try { const GCLKSW = () => GCLKKIG?.matchMedia?.('(prefers-color-scheme:dark)')?.matches ?? ![]; if (GCLKSW()) { GCLKBZu.documentElement.classList.remove('ZMIT')} else { GCLKBZu.documentElement.classList.add('ZMIT')} } catch { GCLKBZu.documentElement.classList.add('ZMIT')} }; const GCLKnnv = () => localStorage.getItem((!![]+"")[0]); let GCLKmZv = ![]; const GCLKDUF = () => { const GCLKaN4 = (scheme) => { switch(scheme){ case 'dark': if (GCLKnnv() == 'a') { GCLKBZu.documentElement.classList.remove('ZMIT')} break; case 'light': if (GCLKnnv() == 'a') { GCLKBZu.documentElement.classList.add('ZMIT')} break; default: if (GCLKnnv() == 'a') { GCLKBZu.documentElement.classList.add('ZMIT')} break} }; const GCLKvlV = () => { if (GCLKKIG.matchMedia) { if(GCLKKIG.matchMedia('(prefers-color-scheme: dark)').matches){ return 'dark'} else { return 'light'} } return 'light'}; const GCLKtEn=()=>{ GCLKaN4(GCLKvlV())}; if(GCLKKIG.matchMedia && !GCLKmZv){ const GCLKtee = GCLKKIG.matchMedia('(prefers-color-scheme: dark)'); if (GCLKtee.addEventListener) { GCLKtee.addEventListener('change', GCLKtEn); GCLKmZv=!![]} else if (GCLKtee.addListener) { GCLKtee.addListener(GCLKtEn); GCLKmZv=!![]} }; GCLKtEn()}; if (GCLKnrB && GCLKnrB == 'l') { GCLKBZu.documentElement.classList.add('ZMIT'); GCLKBZu.documentElement.classList.remove('ZMITD')} else if (GCLKnrB && GCLKnrB == 'a') { GCLKBZu.documentElement.classList.add('ZMITD'); GCLKDUF() } else { GCLKBZu.documentElement.classList.remove('ZMITD'); GCLKrOS() }; const GCLKsNN = () => { try { GCLKBZu.querySelector('.ZMITH').style.minHeight = `${GCLKKIG.innerHeight-62*2-1}px` } catch (err_) {} }; const GCLKigo = () => { if (GCLKKIG.innerWidth < 556) { try { GCLKBZu.querySelector('.ZMITH').style.width =(null); GCLKBZu.querySelector('.ZMITH').style.width = `${GCLKBZu.querySelector('.ZMITH').offsetWidth - 10}px` } catch (err_) {} } else { try { GCLKBZu.querySelector('.ZMITH').style.width =(null)} catch (err_) {} } }; GCLKsNN();GCLKigo(); GCLKKIG.addEventListener('resize', ()=>{ GCLKsNN(); if (GCLK2Ly) { GCLK6j6()} GCLKigo()}); let GCLKDKP = ![]; const GCLKGNw = 'url("#GCLKUV")'; const GCLKJ21 = () => { GCLKBZu.body.style.filter = GCLKGNw; GCLKBZu.body.style.webkitFilter = GCLKGNw; if (GCLKDKP) { GCLKBZu.querySelector('feDisplacementMap').scale.baseVal += 100}; GCLKDKP=!![]}; const GCLKoE8 = (GCLKzA4, searchTerm) => { const GCLKCsq = searchTerm.toLowerCase(); for (const GCLK0Cu in GCLKzA4) { if (GCLKzA4.hasOwnProperty(GCLK0Cu)) { const GCLK9EZ = GCLKzA4[GCLK0Cu]; const GCLKbv7 = GCLK9EZ.toLowerCase(); const GCLKug3 = GCLKbv7.indexOf(GCLKCsq); if (GCLKug3 !== -1) { const GCLKKYk = Math.max(0, GCLKug3 - 6); let GCLKyoV = GCLKUVe.searchV2 ? GCLK9EZ.length : Math.min(GCLK9EZ.length, GCLKug3 + searchTerm.length + 9); let GCLKF9k = GCLK9EZ.substring(GCLKKYk, GCLKyoV); const GCLK3AY = new RegExp(`(?<=\s|^|[.,!?;: \n])(${searchTerm})(?=\s|[.,!?;: \n]|$)`, 'gi'); GCLKF9k = GCLKF9k.replace(GCLK3AY, '<strong>$1</strong>'); if (GCLKKYk > 0) {GCLKF9k = '...'+GCLKF9k.slice(3)} if (GCLKyoV < GCLK9EZ.length) {GCLKF9k = GCLKF9k.trim()+'...'}; return [ GCLK0Cu, GCLKF9k ]} } } return(null)}; const GCLK7e1 = (GCLKzA4, searchTerm, GCLKL9q) => { let GCLKlaU = []; const GCLK1z = GCLKUVe.searchV2 ? Math.floor((GCLKKIG.innerHeight-(GCLKL9q.offsetTop+GCLKL9q.offsetHeight+16)-10)/29) : 5; for (let GCLK9oB = 1; GCLK9oB <= GCLK1z; GCLK9oB++) { const GCLKszS = GCLKoE8(GCLKzA4, searchTerm); if (GCLKszS) { GCLKzA4[GCLKszS[0]] = ''; GCLKlaU.push(GCLKszS)} } return GCLKlaU}; let GCLKM7 = ![]; const GCLKdU = (timems, cdvarid) => { switch(cdvarid) { case 0: GCLKM7=true; setTimeout(()=>{GCLKM7=![]},timems); default: return!![]} }; let GCLKiI="/_just/GCLK.json"; GCLKBZu.addEventListener('DOMContentLoaded', () => { let GCLKy1f = GCLKBZu.getElementById('slXkN'); let GCLKfEJ = GCLKBZu.getElementById('slXkM'); let GCLKD7T = GCLKBZu.getElementById('slXk8'); const GCLKQ2l = () => { if (GCLKZdG()) { GCLKBZu.body.classList.add('QUAp9'); GCLKBZu.documentElement.classList.add('ZMITD'); localStorage.setItem((!![]+"")[0], 'a'); GCLKDUF(); return true} else { return ![]}}; if (GCLKy1f && GCLKfEJ && GCLKD7T) { GCLKy1f.addEventListener('click', () => { if (!GCLKQ2l()) { GCLKBZu.documentElement.classList.add('ZMIT'); GCLKBZu.documentElement.classList.remove('ZMITD'); localStorage.setItem((!![]+"")[0], 'l')} }); GCLKfEJ.addEventListener('click', () => { if (!GCLKQ2l()) { GCLKBZu.documentElement.classList.remove('ZMIT'); GCLKBZu.documentElement.classList.remove('ZMITD'); localStorage.setItem((!![]+"")[0], 'd')} }); GCLKD7T.addEventListener('click', () => { if (!GCLKQ2l()) { GCLKBZu.documentElement.classList.add('ZMITD'); localStorage.setItem((!![]+"")[0], 'a'); GCLKDUF()} })} GCLKQ2l(); if (navigator.userAgent.toLowerCase().includes('firefox')) { GCLKBZu.body.classList.add('GCLKQhl')}; const GCLK41D = GCLKBZu.getElementById('wm-ipp-base'); if(GCLK41D){GCLK41D.parentElement.removeChild(GCLK41D)} if((GCLKKIG.location.hostname==='web.archive.org'||GCLK41D)&&true){ GCLKBZu.body.classList.add('GCLKQKE'); GCLKBZu.documentElement.style.setProperty('--GCLKWjf', `'Wayback Machine detected.'`) } const GCLKL9q = GCLKBZu.getElementById("GCLKq9j"); GCLKL9q.style.cursor = 'text'; GCLKL9q.disabled = ![]; const GCLKF8c = GCLKBZu.querySelector('.GCLKZVd'); const GCLKxRk = GCLKBZu.getElementById("GCLK8kd"); GCLKxRk.style.cursor = 'pointer'; const GCLKck = (toggle = ![]) => { let GCLKgN4=!![]; if (GCLKM7) GCLKgN4 = ![]; else { GCLKdU(300,0) }; if (!toggle && GCLKgN4) {GCLKF8c.innerHTML = ''}; const GCLKX9 = GCLKL9q.offsetLeft + GCLKL9q.parentElement.offsetLeft; const GCLKlo3 = GCLKL9q.parentElement.offsetTop + GCLKL9q.offsetHeight - (GCLKL9q.parentElement.offsetWidth == 0 ? 15 : 0); GCLKF8c.style.left = GCLKgN4 ? `${GCLKX9}px` : GCLKF8c.style.left; GCLKF8c.style.top = GCLKgN4 ? `${GCLKlo3}px` : GCLKF8c.style.top; GCLKF8c.style.width = GCLKgN4 ? `${GCLKL9q.offsetWidth - 8*2}px` : GCLKF8c.style.width; if (GCLKgN4) { GCLKF8c.style.opacity = toggle ? 1 : 0; GCLKF8c.style.pointerEvents = toggle ? 'all' : 'none'; GCLKF8c.style.setProperty('--GCLKAiy', `calc(-${GCLKX9}px + ${GCLKL9q.offsetLeft}px)`)} GCLKxRk.style.left = `${GCLKX9 + GCLKL9q.offsetWidth}px`; GCLKxRk.style.top = `${GCLKlo3 - (GCLKL9q.offsetHeight / 2)}px`; GCLKxRk.style.opacity = (!toggle && GCLKL9q.offsetParent) ? 1 : 0}; const GCLKgW9 = GCLKL9q.placeholder || 'Search documentation'; let GCLKbDC = undefined; GCLKKIG.addEventListener('resize', ()=>{GCLKck(![])}); GCLKL9q.addEventListener("focus", (event) => { const GCLKTfg = event.target; if (!GCLKTfg.value || GCLKTfg.value != '') { GCLKTfg.placeholder = '|'; GCLKbDC = setInterval(()=>{ GCLKTfg.placeholder = GCLKTfg.placeholder == '|' ? '' : '|'},500)} }); GCLKL9q.addEventListener("blur", (event) => { event.target.placeholder = GCLKgW9; if (GCLKbDC) { clearInterval(GCLKbDC)} }); GCLKKIG.addEventListener('keydown', (GCLK0Cu)=>{ if (GCLK0Cu["key"] === '/') { GCLKL9q.focus(); GCLK0Cu.preventDefault()} }); GCLKxRk.addEventListener('click', ()=>{GCLKL9q.focus()}); const GCLKTol = (str) => { if (!str) { return ![]}; const cxF = str.trim(); if (cxF.length === 0) { return ![]} if(/^[!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]+$/.test(cxF)){ return ![]} return true}; let GCLK1G7 = ![]; GCLKL9q.addEventListener("input", async () => { const GCLKlAO = GCLKL9q.value; const GCLKEHZ = GCLKTol(GCLKlAO); GCLK1G7 = GCLKEHZ; GCLKF8c.innerHTML = '<span>Loading...</span>'; GCLKck(GCLKEHZ); const GCLKbym = '<br>Please try again'; if (GCLKEHZ) { const GCLKPK = await fetch(GCLKiI).catch((err__)=>{ console.warn(err__); GCLKF8c.innerHTML = `<span>Failed to fetch.${GCLKbym}</span>`; GCLKBZu.documentElement.classList.remove('GCLK8u9'); setTimeout(()=>{GCLKck(GCLKEHZ)},301); return }); const GCLKzA4 = await GCLKPK.json().catch((err__)=>{ console.warn(err__); GCLKF8c.innerHTML = `<span>Something went wrong.${GCLKbym}</span>`; GCLKBZu.documentElement.classList.remove('GCLK8u9'); setTimeout(()=>{GCLKck(GCLKEHZ)},301); return }); const GCLK0Q0 = GCLK7e1(GCLKzA4, GCLKlAO, GCLKL9q); if (GCLK0Q0.length == 0) { GCLKF8c.innerHTML = '<span>Nothing found.</span>'} else { GCLKF8c.innerHTML = ''; GCLKBZu.documentElement.classList.add('GCLK8u9'); setTimeout(()=>{GCLKck(GCLKEHZ)},301); for (const [id, data_] of Object.entries(GCLK0Q0)) { GCLKF8c.innerHTML += GCLKUVe.searchV2 ? `<a href="${data_[0]}" target="_self"><strong>${(GCLKdN7.find(item => item[0] === data_[0]) || [])[1] || data_[0]}</strong><span>${data_[1].replaceAll('/n',' ').replaceAll(' - ','')}</span></a>` : `<a href="${data_[0]}" target="_self">${data_[1].replaceAll('/n',' ').replaceAll(' - ','')}</a>`} } } else { GCLKBZu.documentElement.classList.remove('GCLK8u9'); setTimeout(()=>{GCLKck(GCLKEHZ)},301); setTimeout(()=>{if(!GCLK1G7){GCLKck(GCLKEHZ)}},602)} }); GCLKBZu.addEventListener("click", (event)=>{ if (GCLK1G7 && !GCLKBZu.querySelector(".F6O3W").contains(event.target)) { GCLKBZu.documentElement.classList.remove('GCLK8u9'); setTimeout(()=>{GCLKck(![])},301)} }); GCLKck(![]);GCLKsNN();GCLKigo();fetch(GCLKiI); document.getElementById('J1H_0').addEventListener("click",()=>{const GCLK6RX=document.createElement('a');GCLK6RX.href='https://just.is-a.dev/';GCLK6RX.target='_blank';GCLK6RX.classList.add('J1H_0');document.body.appendChild(GCLK6RX);GCLK6RX.click();document.body.removeChild(GCLK6RX)})})}catch(e_){document.addEventListener('DOMContentLoaded',()=>{document.body.classList.add('GCLKQKE');document.documentElement.style.setProperty('--GCLKWjf', `'${e_}'`)});document.body.classList.add('GCLKQKE');document.documentElement.style.setProperty('--GCLKWjf', `'${e_}'`)}