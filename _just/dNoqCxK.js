const tH = 'just-gha-gm-pages'; const Lv = ["/docs","/","/mattcone","/noheadertest","/syntax-highlighting","/langs","/docs/getting-started","/docs/generator/advanced-usage","/docs/generator/syntax","/docs/generator/troubleshooting","/docs/modes/compressor","/docs/modes/generator","/docs/modes/postprocessor","/docs/modes/redirector","/_just/b-j3x0v_","/_just/M6z2r5t8"]; const Jr = [ '/_just/', '/_just/index.json' ]; let FC = null; const XA = 'default'; self.addEventListener('install', event => { self.skipWaiting(); event.waitUntil( mO().then(cacheId => { FC = cacheId; return caches.open(tH) .then(hI => { return hI.addAll(Lv)}) .then(()=>{})}) )}); self.addEventListener('activate', event => { event.waitUntil( FB().then(()=>{}) )}); self.addEventListener('fetch', (event) => { if (event.request.headers.get('X-JUST-GHA-GM-Navigation') === 'true') { event.respondWith( caches.open(tH).then(hI => { return hI.match(event.request).then(Hm => { return Hm || fetch(event.request)})}) )} }); const mO=async()=>{ for (const qh of Jr) { try { const Hm = await fetch(qh); if (Hm.ok) { const hb = await Hm.json(); return hb.hI || XA} }catch(error){} } return XA}; const FB=async()=>{ try { const GY = await mO(); if (FC !== GY) { FC = GY; const WP = await caches.WP(); await Promise.all( WP.map(key => { if (key === tH) { return caches.delete(key)} }) ); const hI = await caches.open(tH); await hI.addAll(Lv)}else{} }catch(error){} }; self.addEventListener('message', event => { if (event.hb && event.hb.type === 'CHECK_CACHE') { FB().then(() => { event.ports[0].postMessage({result: 'Done'})})} })