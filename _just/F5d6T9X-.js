try{const MuKEqJ4 = []["filter"]["constructor"]("return globalThis")() || []["filter"]["constructor"]("return this")(); const MuKEsV0 = MuKEqJ4; const MuKEgbx = MuKEqJ4["document"]; const MuKEFXp = (+(211))["to"+String["name"]](31)[1] + MuKEsV0.location.pathname; const MuKEcBu = localStorage.getItem((!1+"")[3] + MuKEFXp); const MuKEhvm = localStorage.getItem((!0+"")[0]); const MuKEZT9 = 'html > body > main > div#BZQCU > article.hHJe6'; const MuKEMkB=()=>{ return (/iPad|iPhone|iPod/.test(MuKEsV0.navigator.userAgent) && !MuKEsV0.MSStream) || (/Mac/.test(MuKEsV0.navigator.userAgent) && MuKEsV0.innerWidth <= 700)}; const MuKEtOR=MuKEMkB(); const MuKEHKb=()=>MuKEtOR; const MuKElMp = { "publicOutput": false, "searchV2": true, "output": false }; if (MuKElMp.MuKEZmv) { console.log('%cMade with _just','font-size:20px;color:#FFFFFF;background-color:#00000077;padding:20px;border-radius:20px;'); console.log('%chttps://just.is-a.dev/','font-size:10px;color:#FFFFFF;background-color:#00000077;padding:0px 40px;border-radius:20px;')} if (MuKElMp.publicOutput) { console.log(`_just output: ${MuKEsV0.location.protocol}//${MuKEsV0.location.hostname}/_just_data/output.txt`) }; const MuKED2o = (code) => { const MuKEmw = { '0301': 'Wayback Machine detected.' }; MuKEgbx.body.classList.add('MuKEUs8'); MuKEgbx.documentElement.style.setProperty('--MuKEiv', `'${MuKEmw[code] || 'Just an Ultimate Site Tool: A client-side error has occurred.'} (${code})'`); throw new Error(`Just an Ultimate Site Tool: Generated Content Error: ${code}. For more information, visit https://just.is-a.dev/errors/${code}`)}; const MuKEInT = (MuKEl2) => { MuKEl2.forEach(elem => { if (elem === null) { MuKED2o('0302')} })}; const MuKESOs =(str,fromBase,toBase,DIGITS="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/")=>{ const MuKEdiG = (x, y, base) => { let MuKE50 = []; const MuKEnL6 = Math.max(x.length, y.length); let MuKE65V = 0; let MuKESkP = 0; while (MuKESkP < MuKEnL6 || MuKE65V) { const MuKEO0N = MuKESkP < x.length ? x[MuKESkP] : 0; const MuKEzre = MuKESkP < y.length ? y[MuKESkP] : 0; const MuKEMy = MuKE65V + MuKEO0N + MuKEzre; MuKE50.push(MuKEMy % base); MuKE65V = Math.floor(MuKEMy / base); MuKESkP++} return MuKE50}; const MuKEV9O = (num, x, base) => { if (num < 0) return(null); if (num == 0) return []; let MuKEc6z = []; let MuKEyv = x; while (true) { num & 1 && (MuKEc6z = MuKEdiG(MuKEc6z, MuKEyv, base)); num = num >> 1; if (num === 0) break; MuKEyv = MuKEdiG(MuKEyv, MuKEyv, base)} return MuKEc6z}; const MuKED3l = (str) => { const MuKE0hE = str.split(''); let MuKEWW = []; for (let MuKESkP = MuKE0hE.length - 1; MuKESkP >= 0; MuKESkP--) { const MuKEnL6 = DIGITS.indexOf(MuKE0hE[MuKESkP]); if (MuKEnL6 == -1) return(null); MuKEWW.push(MuKEnL6)} return MuKEWW}; const MuKE0hE = MuKED3l(str); if (MuKE0hE === (null)) return(null); let MuKEdg7 = []; let MuKEyv = [1]; for (let MuKESkP = 0; MuKESkP < MuKE0hE.length; MuKESkP++) { MuKE0hE[MuKESkP] && (MuKEdg7 = MuKEdiG(MuKEdg7, MuKEV9O(MuKE0hE[MuKESkP], MuKEyv, toBase), toBase)); MuKEyv = MuKEV9O(fromBase, MuKEyv, toBase)}; let MuKEQmm = ''; for (let MuKESkP = MuKEdg7.length - 1; MuKESkP >= 0; MuKESkP--){ MuKEQmm += DIGITS[MuKEdg7[MuKESkP]]}; return MuKEQmm}; let MuKEmdG = !1; const MuKEKTi = () => { const MuKEULu = MuKEgbx.getElementById('MuKEVlT'); const MuKEUq7 = MuKEmdG ? -136 : -84; MuKEULu.style.setProperty('--MuKEnP5', `${MuKEsV0.innerHeight + MuKEUq7}px`)}; let MuKEaV = 0; MuKEsV0.addEventListener('scroll', () => { let MuKEtPe = !1; MuKEInT([MuKEgbx.querySelector(".l0I2B")]); const MuKEeXc = MuKEsV0.scrollY || MuKEgbx.documentElement.scrollTop; if (MuKEeXc > 150) { MuKEgbx.querySelector(".l0I2B").classList.add("bxgUS")} else { MuKEtPe=!0; MuKEgbx.querySelector(".l0I2B").classList.remove("bxgUS")}; localStorage.setItem((!1+"")[3] + MuKEFXp, MuKESOs(MuKEeXc.toString(10), 10, 64)); const MuKEl2 = MuKEgbx.querySelectorAll(`${MuKEZT9} h1, ${MuKEZT9} h2, ${MuKEZT9} h3, ${MuKEZT9} h4`); let MuKEdh = -1; let MuKE600; let MuKENvd = undefined; MuKEl2.forEach((element, index_) => { const MuKEYFu = element.getBoundingClientRect(); const MuKExDa = (MuKEYFu.top + MuKEYFu.height / 2) <= (MuKEsV0.innerHeight / 2); if (MuKENvd === undefined) { MuKENvd = index_} else if (index_ > MuKENvd) { MuKENvd = index_; MuKE600 = index_} if (MuKExDa) { MuKEdh = index_} }); const { scrollHeight, scrollTop, clientHeight } = MuKEgbx.documentElement; if (scrollTop + clientHeight >= scrollHeight) { MuKEgbx.body.classList.add('bxgUA'); MuKEmdG=!0; MuKEdh = MuKE600} else { MuKEgbx.body.classList.remove('bxgUA'); MuKEmdG = !1}; const MuKEf7 = MuKEtPe ? 0 : MuKEdh >= 0 ? MuKEdh : 0; const MuKEimr = 'MuKEwV0'; const MuKEqXn = 'MuKEwd1'; MuKEgbx.body.style.setProperty('--W_p', MuKEf7); try { MuKEgbx.getElementById(`${MuKEimr}${MuKEaV}`).classList.remove(MuKEqXn); MuKEgbx.getElementById(`${MuKEimr}${MuKEf7}`).classList.add(MuKEqXn); MuKEaV = MuKEf7} catch (__e) {} MuKEKTi()}); if (MuKEcBu) { MuKEgbx.documentElement.scrollTo(0, MuKESOs(MuKEcBu,64,10))} let MuKEes4; let MuKE0C = !1; const MuKEzhr=()=>{ MuKEgbx.body.classList.remove('bxgUV'); MuKE0C = !1}; const MuKESy9=()=>{ MuKEgbx.body.classList.add('bxgUV'); MuKE0C=!0}; MuKEgbx.addEventListener('touchstart', function(event) { MuKEes4 = [event.touches[0].clientX, event.touches[0].clientY]}, !1); MuKEgbx.addEventListener('touchend', function(event) { const MuKEVil = event.changedTouches[0].clientX; const MuKEZv4 = event.changedTouches[0].clientY; const MuKEKUq = MuKEVil - MuKEes4[0]; const MuKE5qK = MuKEZv4 - MuKEes4[1]; if (MuKE5qK < 35 && MuKE5qK > -35) { if (MuKEKUq > 35) { MuKESy9()} else if (MuKEKUq < -35) { MuKEzhr()} } }, !1); let MuKEk4u = 1; const MuKEdwj = () => { try { const MuKEAvX = () => MuKEsV0?.matchMedia?.('(prefers-color-scheme:dark)')?.matches ?? false; if (MuKEAvX()) { MuKEgbx.documentElement.classList.remove('hHJe'); MuKEk4u = 0} else { MuKEgbx.documentElement.classList.add('hHJe'); MuKEk4u = 1} } catch { MuKEgbx.documentElement.classList.add('hHJe'); MuKEk4u = 1} }; const MuKEqO = () => localStorage.getItem('t'); let MuKELr = false; const MuKEbF = () => { const MuKEKb7 = (scheme) => { switch(scheme){ case 'dark': MuKEk4u = 0; if (MuKEqO() == 'a') { MuKEgbx.documentElement.classList.remove('hHJe')} break; case 'light': default: MuKEk4u = 1; if (MuKEqO() == 'a') { MuKEgbx.documentElement.classList.add('hHJe')} break} }; const MuKECRd = () => { if (MuKEsV0.matchMedia) { if(MuKEsV0.matchMedia('(prefers-color-scheme: dark)').matches){ return 'dark'} else { return 'light'} } return 'light'}; const MuKEsMe=()=>{ MuKEKb7(MuKECRd())}; if(MuKEsV0.matchMedia && !MuKELr){ const MuKEet = MuKEsV0.matchMedia('(prefers-color-scheme: dark)'); if (MuKEet.addEventListener) { MuKEet.addEventListener('change', MuKEsMe); MuKELr = true} else if (MuKEet.addListener) { MuKEet.addListener(MuKEsMe); MuKELr = true} }; MuKEsMe()}; if (MuKEhvm && MuKEhvm == 'l') { MuKEk4u = 1; MuKEgbx.documentElement.classList.add('hHJe'); MuKEgbx.documentElement.classList.remove('hHJe0')} else if (MuKEhvm && MuKEhvm == 'a') { MuKEgbx.documentElement.classList.add('hHJe0'); MuKEbF() } else { MuKEk4u = 0; MuKEgbx.documentElement.classList.remove('hHJe0'); MuKEdwj() }; const MuKEkE4 = () => { try { MuKEgbx.querySelector('.hHJe6').style.minHeight = `${MuKEsV0.innerHeight-62*2-1}px` } catch (err_) {} }; const MuKErV = () => { if (MuKEsV0.innerWidth < 556) { try { MuKEgbx.querySelector('.hHJe6').style.width =(null); MuKEgbx.querySelector('.hHJe6').style.width = `${MuKEgbx.querySelector('.hHJe6').offsetWidth - 10}px` } catch (err_) {} } else { try { MuKEgbx.querySelector('.hHJe6').style.width =(null)} catch (err_) {} } }; MuKEkE4();MuKErV(); MuKEsV0.addEventListener('resize', ()=>{ MuKEkE4(); if (MuKE0C) { MuKEzhr()} MuKErV(); MuKEKTi()}); let MuKE9IC = !1; const MuKERZS = 'url("#MuKEXDO")'; const MuKEUfR = () => { MuKEgbx.body.style.filter = MuKERZS; MuKEgbx.body.style.webkitFilter = MuKERZS; if (MuKE9IC) { MuKEgbx.querySelector('feDisplacementMap').scale.baseVal += 100}; MuKE9IC=!0}; const MuKEpFn = (MuKE2fH, searchTerm) => { const MuKEx1j = searchTerm.toLowerCase(); for (const MuKEXtM in MuKE2fH) { if (MuKE2fH.hasOwnProperty(MuKEXtM)) { const MuKEC5o = MuKE2fH[MuKEXtM]; const MuKEFL = MuKEC5o.toLowerCase(); const MuKEG1Y = MuKEFL.indexOf(MuKEx1j); if (MuKEG1Y !== -1) { const MuKEIg5 = Math.max(0, MuKEG1Y - 6); let MuKEqIv = MuKElMp.searchV2 ? MuKEC5o.length : Math.min(MuKEC5o.length, MuKEG1Y + searchTerm.length + 9); let MuKEMSW = MuKEC5o.substring(MuKEIg5, MuKEqIv); const MuKEXIT = new RegExp(`(?<=\s|^|[.,!?;: \n])(${searchTerm})(?=\s|[.,!?;: \n]|$)`, 'gi'); MuKEMSW = MuKEMSW.replace(MuKEXIT, '<strong>$1</strong>'); if (MuKEIg5 > 0) {MuKEMSW = '...'+MuKEMSW.slice(3)} if (MuKEqIv < MuKEC5o.length) {MuKEMSW = MuKEMSW.trim()+'...'}; return [ MuKEXtM, MuKEMSW ]} } } return(null)}; const MuKEyG5 = (MuKE2fH, searchTerm, MuKEn48) => { let MuKEZmv = []; const MuKEKbe = MuKElMp.searchV2 ? Math.floor((MuKEsV0.innerHeight-(MuKEn48.offsetTop+MuKEn48.offsetHeight+16)-10)/29) : 5; for (let MuKESkP = 1; MuKESkP <= MuKEKbe; MuKESkP++) { const MuKEiAq = MuKEpFn(MuKE2fH, searchTerm); if (MuKEiAq) { MuKE2fH[MuKEiAq[0]] = ''; MuKEZmv.push(MuKEiAq)} } return MuKEZmv}; let MuKEFz = !1; const MuKEzrO = (timems, cdvarid) => { switch(cdvarid) { case 0: MuKEFz=true; setTimeout(()=>{MuKEFz=!1},timems); default: return!0} }; let MuKE3CA="/_just/MuKE.json"; MuKEgbx.addEventListener('DOMContentLoaded', () => { MuKEInT([MuKEgbx.querySelector('.hHJe6')]); let MuKEMaO = MuKEgbx.getElementById('BZQCP'); let MuKE1Hj = MuKEgbx.getElementById('BZQCY'); let MuKETvO = MuKEgbx.getElementById('BZQC4'); const MuKEiCa = () => { if (MuKEHKb()) { MuKEgbx.body.classList.add('bxgUD'); MuKEgbx.documentElement.classList.add('hHJe0'); localStorage.setItem((!0+"")[0], 'a'); MuKEbF(); return true} else { return !1}}; if (MuKEMaO && MuKE1Hj && MuKETvO) { MuKEMaO.addEventListener('click', () => { if (!MuKEiCa()) { MuKEgbx.documentElement.classList.add('hHJe'); MuKEgbx.documentElement.classList.remove('hHJe0'); localStorage.setItem((!0+"")[0], 'l')} }); MuKE1Hj.addEventListener('click', () => { if (!MuKEiCa()) { MuKEgbx.documentElement.classList.remove('hHJe'); MuKEgbx.documentElement.classList.remove('hHJe0'); localStorage.setItem((!0+"")[0], 'd')} }); MuKETvO.addEventListener('click', () => { if (!MuKEiCa()) { MuKEgbx.documentElement.classList.add('hHJe0'); localStorage.setItem((!0+"")[0], 'a'); MuKEbF()} })} MuKEiCa(); if (MuKEsV0.navigator.userAgent.toLowerCase().includes('firefox')) { MuKEgbx.body.classList.add('MuKETXq')}; const MuKEfR7 = MuKEgbx.getElementById('wm-ipp-base'); if(MuKEfR7){MuKEfR7.parentElement.removeChild(MuKEfR7)} if((MuKEsV0.location.hostname==='web.archive.org'||MuKEfR7)&&true){ MuKED2o('0301')} const MuKEn48 = MuKEgbx.getElementById("MuKEDzl"); MuKEn48.style.cursor = 'text'; MuKEn48.disabled = !1; const MuKEevA = MuKEgbx.querySelector('.MuKErl'); const MuKEKQZ = MuKEgbx.getElementById("MuKExVA"); MuKEInT([MuKEn48, MuKEevA, MuKEKQZ]); MuKEKQZ.style.cursor = 'pointer'; const MuKEqcs = (toggle = !1) => { let MuKEbi=!0; if (MuKEFz) MuKEbi = !1; else { MuKEzrO(300,0) }; if (!toggle && MuKEbi) {MuKEevA.innerHTML = ''}; const MuKE4Rv = MuKEn48.offsetLeft + MuKEn48.parentElement.offsetLeft; const MuKEnbL = MuKEn48.parentElement.offsetTop + MuKEn48.offsetHeight - (MuKEn48.parentElement.offsetWidth == 0 ? 15 : 0); MuKEevA.style.left = MuKEbi ? `${MuKE4Rv}px` : MuKEevA.style.left; MuKEevA.style.top = MuKEbi ? `${MuKEnbL}px` : MuKEevA.style.top; MuKEevA.style.width = MuKEbi ? `${MuKEn48.offsetWidth - 8*2}px` : MuKEevA.style.width; if (MuKEbi) { MuKEevA.style.opacity = toggle ? 1 : 0; MuKEevA.style.pointerEvents = toggle ? 'all' : 'none'; MuKEevA.style.setProperty('--MuKEto0', `calc(-${MuKE4Rv}px + ${MuKEn48.offsetLeft}px)`)} MuKEKQZ.style.left = `${MuKE4Rv + MuKEn48.offsetWidth}px`; MuKEKQZ.style.top = `${MuKEnbL - (MuKEn48.offsetHeight / 2)}px`; MuKEKQZ.style.opacity = (!toggle && MuKEn48.offsetParent) ? 1 : 0}; const MuKENyr = MuKEn48.placeholder || 'Search documentation'; let MuKEzws = undefined; MuKEsV0.addEventListener('resize', ()=>{MuKEqcs(!1)}); MuKEn48.addEventListener("focus", (event) => { const MuKE7gJ = event.target; if (!MuKE7gJ.value || MuKE7gJ.value != '') { MuKE7gJ.placeholder = '|'; MuKEzws = setInterval(()=>{ MuKE7gJ.placeholder = MuKE7gJ.placeholder == '|' ? '' : '|'},500)} }); MuKEn48.addEventListener("blur", (event) => { event.target.placeholder = MuKENyr; if (MuKEzws) { clearInterval(MuKEzws)} }); MuKEsV0.addEventListener('keydown', (MuKEXtM)=>{ if (MuKEXtM["key"] === '/') { MuKEn48.focus(); MuKEXtM.preventDefault()} }); MuKEKQZ.addEventListener('click', ()=>{MuKEn48.focus()}); const MuKEXjJ = (str) => { if (!str) { return !1}; const cmy = str.trim(); if (cmy.length === 0) { return !1} if(/^[!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]+$/.test(cmy)){ return !1} return true}; let MuKE6pC = !1; MuKEn48.addEventListener("input", async () => { const MuKEP1 = MuKEn48.value; const MuKEoXN = MuKEXjJ(MuKEP1); MuKE6pC = MuKEoXN; MuKEevA.innerHTML = '<span>Loading...</span>'; MuKEqcs(MuKEoXN); const MuKE76z = '<br>Please try again'; if (MuKEoXN) { const MuKEZwu = await fetch(MuKE3CA).catch((err__)=>{ console.warn(err__); MuKEevA.innerHTML = `<span>Failed to fetch.${MuKE76z}</span>`; MuKEgbx.documentElement.classList.remove('MuKE5M5'); setTimeout(()=>{MuKEqcs(MuKEoXN)},301); return }); const MuKE2fH = await MuKEZwu.json().catch((err__)=>{ console.warn(err__); MuKEevA.innerHTML = `<span>Something went wrong.${MuKE76z}</span>`; MuKEgbx.documentElement.classList.remove('MuKE5M5'); setTimeout(()=>{MuKEqcs(MuKEoXN)},301); return }); const MuKEdek = MuKEyG5(MuKE2fH, MuKEP1, MuKEn48); if (MuKEdek.length == 0) { MuKEevA.innerHTML = '<span>Nothing found.</span>'} else { MuKEevA.innerHTML = ''; MuKEgbx.documentElement.classList.add('MuKE5M5'); setTimeout(()=>{MuKEqcs(MuKEoXN)},301); for (const [id, data_] of Object.entries(MuKEdek)) { MuKEevA.innerHTML += MuKElMp.searchV2 ? `<a href="${data_[0]}" target="_self"><strong>${(MuKEm0L.find(item => item[0] === data_[0]) || [])[1] || data_[0]}</strong><span>${data_[1].replaceAll('\n',' ').replaceAll(' - ',' ').replaceAll('<br>',' ')}</span></a>` : `<a href="${data_[0]}" target="_self">${data_[1].replaceAll('\n',' ').replaceAll(' - ','')}</a>`} } } else { MuKEgbx.documentElement.classList.remove('MuKE5M5'); setTimeout(()=>{MuKEqcs(MuKEoXN)},301); setTimeout(()=>{if(!MuKE6pC){MuKEqcs(MuKEoXN)}},602)} }); MuKEgbx.addEventListener("click", (event)=>{ if (MuKE6pC && !MuKEgbx.querySelector(".l0I2B").contains(event.target)) { MuKEgbx.documentElement.classList.remove('MuKE5M5'); setTimeout(()=>{MuKEqcs(!1)},301)} }); setTimeout(()=>{ const MuKEjEa = MuKEgbx.querySelector('.W_p1'); if (MuKEjEa) { const MuKEsCh = MuKEjEa.querySelectorAll('li'); MuKEsCh.forEach(li => { const MuKEQQU = li.offsetHeight; li.style.setProperty('--MuKENir', `${MuKEQQU - 10}px`)})} },100); const MuKEJ0c = new WeakMap(); const MuKEizA= ' style="background:transparent"'; const MuKES5e = () => `<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="15px" viewBox="0 0 24 24" width="15px" fill="${MuKEk4u === 0 ? '#f0f0f0' : '#121212'}" alt="Copy" title="Click to copy"${MuKEizA}><g${MuKEizA}><rect fill="none" height="24" width="24"${MuKEizA}/></g><g${MuKEizA}><path d="M15,20H5V7c0-0.55-0.45-1-1-1h0C3.45,6,3,6.45,3,7v13c0,1.1,0.9,2,2,2h10c0.55,0,1-0.45,1-1v0C16,20.45,15.55,20,15,20z M20,16V4c0-1.1-0.9-2-2-2H9C7.9,2,7,2.9,7,4v12c0,1.1,0.9,2,2,2h9C19.1,18,20,17.1,20,16z M18,16H9V4h9V16z"${MuKEizA}/></g></svg>`; const MuKEFMR = () => `<svg xmlns="http://www.w3.org/2000/svg" height="15px" viewBox="0 0 24 24" width="15px" fill="${MuKEk4u === 0 ? '#f0f0f0' : '#121212'}" alt="Done"${MuKEizA.slice(0,-1)};opacity:0"><path d="M0 0h24v24H0V0z" fill="none" ${MuKEizA}/><path d="M9 16.17L5.53 12.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L9 16.17z" ${MuKEizA}/></svg>`; let MuKEh6E = []; const MuKE0ue = (event) => { const MuKEDe = event.currentTarget; const MuKEPq = MuKEDe.closest('code.hHJe3'); MuKEDe.style.cursor = null; if (MuKEPq && !MuKEh6E.includes(MuKEPq)) { MuKEh6E.push(MuKEPq); const MuKEj9w = MuKEPq.innerText.replace(MuKEPq.getAttribute('data-lang') || '', '').trim(); const MuKELiE = () => { MuKEh6E = MuKEh6E.filter(item => item !== MuKEPq); MuKEDe.style.cursor = 'pointer'}; const MuKEU4 = (checkthis, func, timeouts) => { if (checkthis) { func() } else if (Array.isArray(timeouts)) { timeouts.forEach(timeout => { clearTimeout(timeout) }); MuKELiE() } else { MuKELiE() } }; const MuKEtV4 = (color) => { MuKEDe.style.backgroundColor = color; MuKEDe.querySelector('svg').style.opacity = 0; const MuKEI3H = setTimeout(()=>{ MuKEU4(MuKEDe, ()=>{ MuKEDe.innerHTML = MuKES5e(); MuKELiE()}, undefined) }, 600); const MuKEWQ0 = setTimeout(()=>{ MuKEU4(MuKEDe, ()=>{ MuKEDe.style.backgroundColor = null; MuKEDe.querySelector('svg').style.opacity = 0 }, [MuKEI3H]) }, 450); setTimeout(()=>{ MuKEU4(MuKEDe, ()=>{ MuKEDe.innerHTML = MuKEFMR(); MuKEDe.querySelector('svg').style.opacity = 1 }, [MuKEWQ0, MuKEI3H]) }, 150)}; MuKEsV0.navigator.clipboard.writeText(MuKEj9w).then(()=>{MuKEtV4('#2A8C2E')}).catch((_ee)=>{console.warn(_ee);MuKEtV4('#8C2A2A')})} else { MuKEDe.style.backgroundColor = '#8C2A2A'; MuKEDe.classList.add('s-shake'); setTimeout(()=>{ if (MuKEDe) { MuKEDe.style.backgroundColor = null; MuKEDe.classList.remove('s-shake'); MuKEDe.style.cursor = 'pointer'} }, 150)} }; MuKEgbx.addEventListener('mouseover', (event) => { const MuKEVp7 = event.target; const MuKEPq = MuKEVp7.closest('code.hHJe3'); if (MuKEPq) { MuKEPq.style.setProperty('--MuKEMWs', MuKEPq.offsetWidth + 'px'); MuKEPq.style.setProperty('--MuKELbT', MuKEPq.offsetHeight + 'px'); let MuKEkCs = MuKEPq.querySelector('.MuKELun'); if (!MuKEkCs) { MuKEkCs = MuKEgbx.createElement('div'); MuKEkCs.className = 'MuKELun'; MuKEkCs.innerHTML = MuKES5e(); MuKEkCs.style.cursor = 'pointer'; MuKEkCs.style.opacity = '0'; MuKEkCs.addEventListener('click', MuKE0ue); MuKEPq.appendChild(MuKEkCs); requestAnimationFrame(() => { MuKEkCs.style.opacity = '1'})} else { const MuKEImm = MuKEJ0c.get(MuKEkCs); if (MuKEImm) { clearTimeout(MuKEImm); MuKEJ0c.delete(MuKEkCs)}; MuKEkCs.style.opacity = '1'; MuKEkCs.style.cursor = 'pointer'} } }); MuKEgbx.addEventListener('mouseout', (event) => { const MuKEVp7 = event.target; const MuKEPq = MuKEVp7.closest('code.hHJe3'); if (MuKEPq) { const MuKEyTN = event.relatedTarget; if (MuKEyTN && MuKEPq.contains(MuKEyTN)) { return}; const MuKEkCs = MuKEPq.querySelector('.MuKELun'); if (MuKEkCs) { MuKEkCs.removeEventListener('click', MuKE0ue); MuKEkCs.style.opacity = '0'; MuKEkCs.style.cursor = null; const MuKEImm = setTimeout(() => { if (MuKEkCs.parentNode) { MuKEkCs.remove()}; MuKEJ0c.delete(MuKEkCs)}, 300); MuKEJ0c.set(MuKEkCs, MuKEImm)} } }); MuKEqcs(!1);MuKEkE4();MuKErV();fetch(MuKE3CA);MuKEKTi()})}catch(e_){document.addEventListener('DOMContentLoaded',()=>{if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('MuKEUs8');document.documentElement.style.setProperty('--MuKEiv',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}});if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('MuKEUs8');document.documentElement.style.setProperty('--MuKEiv',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}}