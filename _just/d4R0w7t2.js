try{const GBCoVBe = []["filter"]["constructor"]("return globalThis")() || []["filter"]["constructor"]("return this")(); const GBCoT0B = GBCoVBe; const GBCo76S = GBCoVBe["document"]; const GBCoy2 = (+(211))["to"+String["name"]](31)[1] + GBCoT0B.location.pathname; const GBCoU9 = localStorage.getItem((!1+"")[3] + GBCoy2); const GBCofjr = localStorage.getItem((!0+"")[0]); const GBCozeL = 'html > body > main > div#OHDTK > article.iKXJB'; const GBCo9XD=()=>{ return (/iPad|iPhone|iPod/.test(GBCoT0B.navigator.userAgent) && !GBCoT0B.MSStream) || (/Mac/.test(GBCoT0B.navigator.userAgent) && GBCoT0B.innerWidth <= 700)}; const GBCoDF8=GBCo9XD(); const GBCoZj2=()=>GBCoDF8; const GBCoDd = { "publicOutput": false, "searchV2": true, "output": false }; if (GBCoDd.GBCo0ug) { console.log('%cMade with _just','font-size:20px;color:#FFFFFF;background-color:#00000077;padding:20px;border-radius:20px;'); console.log('%chttps://just.is-a.dev/','font-size:10px;color:#FFFFFF;background-color:#00000077;padding:0px 40px;border-radius:20px;')} if (GBCoDd.publicOutput) { console.log(`_just output: ${GBCoT0B.location.protocol}//${GBCoT0B.location.hostname}/_just_data/output.txt`) }; const GBCoCl1 = (code) => { const GBCoN98 = { '0301': 'Wayback Machine detected.' }; GBCo76S.body.classList.add('GBCo4Af'); GBCo76S.documentElement.style.setProperty('--GBCo5tI', `'${GBCoN98[code] || 'Just an Ultimate Site Tool: A client-side error has occurred.'} (${code})'`); throw new Error(`Just an Ultimate Site Tool: Generated Content Error: ${code}. For more information, visit https://just.is-a.dev/errors/${code}`)}; const GBCo0qO = (GBCo3H) => { GBCo3H.forEach(elem => { if (elem === null) { GBCoCl1('0302')} })}; const GBCoLgo =(str,fromBase,toBase,DIGITS="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/")=>{ const GBCoUI = (x, y, base) => { let GBCoeVM = []; const GBCovW = Math.max(x.length, y.length); let GBCopj = 0; let GBCo3Fm = 0; while (GBCo3Fm < GBCovW || GBCopj) { const GBCoBvd = GBCo3Fm < x.length ? x[GBCo3Fm] : 0; const GBCorDM = GBCo3Fm < y.length ? y[GBCo3Fm] : 0; const GBCoUa = GBCopj + GBCoBvd + GBCorDM; GBCoeVM.push(GBCoUa % base); GBCopj = Math.floor(GBCoUa / base); GBCo3Fm++} return GBCoeVM}; const GBCoNb = (num, x, base) => { if (num < 0) return(null); if (num == 0) return []; let GBCos1 = []; let GBCoXVK = x; while (true) { num & 1 && (GBCos1 = GBCoUI(GBCos1, GBCoXVK, base)); num = num >> 1; if (num === 0) break; GBCoXVK = GBCoUI(GBCoXVK, GBCoXVK, base)} return GBCos1}; const GBCoYt = (str) => { const GBCo99S = str.split(''); let GBCoGvl = []; for (let GBCo3Fm = GBCo99S.length - 1; GBCo3Fm >= 0; GBCo3Fm--) { const GBCovW = DIGITS.indexOf(GBCo99S[GBCo3Fm]); if (GBCovW == -1) return(null); GBCoGvl.push(GBCovW)} return GBCoGvl}; const GBCo99S = GBCoYt(str); if (GBCo99S === (null)) return(null); let GBCoH6 = []; let GBCoXVK = [1]; for (let GBCo3Fm = 0; GBCo3Fm < GBCo99S.length; GBCo3Fm++) { GBCo99S[GBCo3Fm] && (GBCoH6 = GBCoUI(GBCoH6, GBCoNb(GBCo99S[GBCo3Fm], GBCoXVK, toBase), toBase)); GBCoXVK = GBCoNb(fromBase, GBCoXVK, toBase)}; let GBCoRne = ''; for (let GBCo3Fm = GBCoH6.length - 1; GBCo3Fm >= 0; GBCo3Fm--){ GBCoRne += DIGITS[GBCoH6[GBCo3Fm]]}; return GBCoRne}; let GBCo8ME = !1; const GBCoG6 = () => { const GBCotfy = GBCo76S.getElementById('GBCo5So'); const GBCoICl = GBCo8ME ? -136 : -84; GBCotfy.style.setProperty('--GBCoDdW', `${GBCoT0B.innerHeight + GBCoICl}px`)}; let GBCovis = 0; GBCoT0B.addEventListener('scroll', () => { let GBCozV2 = !1; GBCo0qO([GBCo76S.querySelector(".p8m9V")]); const GBCoCtu = GBCoT0B.scrollY || GBCo76S.documentElement.scrollTop; if (GBCoCtu > 150) { GBCo76S.querySelector(".p8m9V").classList.add("ZIvY1")} else { GBCozV2=!0; GBCo76S.querySelector(".p8m9V").classList.remove("ZIvY1")}; localStorage.setItem((!1+"")[3] + GBCoy2, GBCoLgo(GBCoCtu.toString(10), 10, 64)); const GBCo3H = GBCo76S.querySelectorAll(`${GBCozeL} h1, ${GBCozeL} h2, ${GBCozeL} h3, ${GBCozeL} h4`); let GBCoTXQ = -1; let GBCoIAE; let GBCo6d = undefined; GBCo3H.forEach((element, index_) => { const GBCocg = element.getBoundingClientRect(); const GBCo00j = (GBCocg.top + GBCocg.height / 2) <= (GBCoT0B.innerHeight / 2); if (GBCo6d === undefined) { GBCo6d = index_} else if (index_ > GBCo6d) { GBCo6d = index_; GBCoIAE = index_} if (GBCo00j) { GBCoTXQ = index_} }); const { scrollHeight, scrollTop, clientHeight } = GBCo76S.documentElement; if (scrollTop + clientHeight >= scrollHeight) { GBCo76S.body.classList.add('ZIvYY'); GBCo8ME=!0; GBCoTXQ = GBCoIAE} else { GBCo76S.body.classList.remove('ZIvYY'); GBCo8ME = !1}; const GBCo2BV = GBCozV2 ? 0 : GBCoTXQ >= 0 ? GBCoTXQ : 0; const GBConRN = 'GBCoyS9'; const GBCokn = 'GBCoui3'; GBCo76S.body.style.setProperty('--y5s', GBCo2BV); try { GBCo76S.getElementById(`${GBConRN}${GBCovis}`).classList.remove(GBCokn); GBCo76S.getElementById(`${GBConRN}${GBCo2BV}`).classList.add(GBCokn); GBCovis = GBCo2BV} catch (__e) {} GBCoG6()}); if (GBCoU9) { GBCo76S.documentElement.scrollTo(0, GBCoLgo(GBCoU9,64,10))} let GBCo2Od; let GBCoEO1 = !1; const GBCoFrl=()=>{ GBCo76S.body.classList.remove('ZIvYT'); GBCoEO1 = !1}; const GBCoiP=()=>{ GBCo76S.body.classList.add('ZIvYT'); GBCoEO1=!0}; GBCo76S.addEventListener('touchstart', function(event) { GBCo2Od = [event.touches[0].clientX, event.touches[0].clientY]}, !1); GBCo76S.addEventListener('touchend', function(event) { const GBCoOUe = event.changedTouches[0].clientX; const GBCo9nn = event.changedTouches[0].clientY; const GBCoS0I = GBCoOUe - GBCo2Od[0]; const GBCodAi = GBCo9nn - GBCo2Od[1]; if (GBCodAi < 35 && GBCodAi > -35) { if (GBCoS0I > 35) { GBCoiP()} else if (GBCoS0I < -35) { GBCoFrl()} } }, !1); let GBCoynI = 1; const GBCofuK = () => { try { const GBCoLpi = () => GBCoT0B?.matchMedia?.('(prefers-color-scheme:dark)')?.matches ?? false; if (GBCoLpi()) { GBCo76S.documentElement.classList.remove('iKXJ'); GBCoynI = 0} else { GBCo76S.documentElement.classList.add('iKXJ'); GBCoynI = 1} } catch { GBCo76S.documentElement.classList.add('iKXJ'); GBCoynI = 1} }; const GBCoWEu = () => localStorage.getItem('t'); let GBCou5P = false; const GBCo6s = () => { const GBCooU = (scheme) => { switch(scheme){ case 'dark': GBCoynI = 0; if (GBCoWEu() == 'a') { GBCo76S.documentElement.classList.remove('iKXJ')} break; case 'light': default: GBCoynI = 1; if (GBCoWEu() == 'a') { GBCo76S.documentElement.classList.add('iKXJ')} break} }; const GBComy = () => { if (GBCoT0B.matchMedia) { if(GBCoT0B.matchMedia('(prefers-color-scheme: dark)').matches){ return 'dark'} else { return 'light'} } return 'light'}; const GBCodci=()=>{ GBCooU(GBComy())}; if(GBCoT0B.matchMedia && !GBCou5P){ const GBCobHJ = GBCoT0B.matchMedia('(prefers-color-scheme: dark)'); if (GBCobHJ.addEventListener) { GBCobHJ.addEventListener('change', GBCodci); GBCou5P = true} else if (GBCobHJ.addListener) { GBCobHJ.addListener(GBCodci); GBCou5P = true} }; GBCodci()}; if (GBCofjr && GBCofjr == 'l') { GBCoynI = 1; GBCo76S.documentElement.classList.add('iKXJ'); GBCo76S.documentElement.classList.remove('iKXJA')} else if (GBCofjr && GBCofjr == 'a') { GBCo76S.documentElement.classList.add('iKXJA'); GBCo6s() } else { GBCoynI = 0; GBCo76S.documentElement.classList.remove('iKXJA'); GBCofuK() }; const GBCohPQ = () => { try { GBCo76S.querySelector('.iKXJB').style.minHeight = `${GBCoT0B.innerHeight-62*2-1}px` } catch (err_) {} }; const GBCoYDF = () => { if (GBCoT0B.innerWidth < 556) { try { GBCo76S.querySelector('.iKXJB').style.width =(null); GBCo76S.querySelector('.iKXJB').style.width = `${GBCo76S.querySelector('.iKXJB').offsetWidth - 10}px` } catch (err_) {} } else { try { GBCo76S.querySelector('.iKXJB').style.width =(null)} catch (err_) {} } }; GBCohPQ();GBCoYDF(); GBCoT0B.addEventListener('resize', ()=>{ GBCohPQ(); if (GBCoEO1) { GBCoFrl()} GBCoYDF(); GBCoG6()}); let GBCoTHq = !1; const GBCo4T = 'url("#GBCoNLQ")'; const GBCoRUr = () => { GBCo76S.body.style.filter = GBCo4T; GBCo76S.body.style.webkitFilter = GBCo4T; if (GBCoTHq) { GBCo76S.querySelector('feDisplacementMap').scale.baseVal += 100}; GBCoTHq=!0}; const GBCojMJ = (GBCoXVc, searchTerm) => { const GBCotGj = searchTerm.toLowerCase(); for (const GBCoeVZ in GBCoXVc) { if (GBCoXVc.hasOwnProperty(GBCoeVZ)) { const GBCoDX = GBCoXVc[GBCoeVZ]; const GBCowIH = GBCoDX.toLowerCase(); const GBCo2CD = GBCowIH.indexOf(GBCotGj); if (GBCo2CD !== -1) { const GBCo5le = Math.max(0, GBCo2CD - 6); let GBCos9i = GBCoDd.searchV2 ? GBCoDX.length : Math.min(GBCoDX.length, GBCo2CD + searchTerm.length + 9); let GBCo1Mb = GBCoDX.substring(GBCo5le, GBCos9i); const GBCoPdj = new RegExp(`(?<=\s|^|[.,!?;: \n])(${searchTerm})(?=\s|[.,!?;: \n]|$)`, 'gi'); GBCo1Mb = GBCo1Mb.replace(GBCoPdj, '<strong>$1</strong>'); if (GBCo5le > 0) {GBCo1Mb = '...'+GBCo1Mb.slice(3)} if (GBCos9i < GBCoDX.length) {GBCo1Mb = GBCo1Mb.trim()+'...'}; return [ GBCoeVZ, GBCo1Mb ]} } } return(null)}; const GBCopG9 = (GBCoXVc, searchTerm, GBCo4lo) => { let GBCo0ug = []; const GBCoVsE = GBCoDd.searchV2 ? Math.floor((GBCoT0B.innerHeight-(GBCo4lo.offsetTop+GBCo4lo.offsetHeight+16)-10)/29) : 5; for (let GBCo3Fm = 1; GBCo3Fm <= GBCoVsE; GBCo3Fm++) { const GBCoEEH = GBCojMJ(GBCoXVc, searchTerm); if (GBCoEEH) { GBCoXVc[GBCoEEH[0]] = ''; GBCo0ug.push(GBCoEEH)} } return GBCo0ug}; let GBCos2A = !1; const GBCoO6 = (timems, cdvarid) => { switch(cdvarid) { case 0: GBCos2A=true; setTimeout(()=>{GBCos2A=!1},timems); default: return!0} }; let GBCoNZs = !1; (async()=>{ if ('serviceWorker' in navigator) { navigator.serviceWorker.register('/_just/GBCognV.js').then(()=>{ GBCoNZs=!0}) } })(); let GBCoDgE="/_just/GBCo.json"; GBCo76S.addEventListener('DOMContentLoaded', () => { GBCo0qO([GBCo76S.querySelector('.iKXJB')]); let GBCoCRC = GBCo76S.getElementById('OHDTP'); let GBCoLxB = GBCo76S.getElementById('OHDTI'); let GBCoiM = GBCo76S.getElementById('OHDT3'); const GBCoR5 = () => { if (GBCoZj2()) { GBCo76S.body.classList.add('ZIvYN'); GBCo76S.documentElement.classList.add('iKXJA'); localStorage.setItem((!0+"")[0], 'a'); GBCo6s(); return true} else { return !1}}; if (GBCoCRC && GBCoLxB && GBCoiM) { GBCoCRC.addEventListener('click', () => { if (!GBCoR5()) { GBCo76S.documentElement.classList.add('iKXJ'); GBCo76S.documentElement.classList.remove('iKXJA'); localStorage.setItem((!0+"")[0], 'l')} }); GBCoLxB.addEventListener('click', () => { if (!GBCoR5()) { GBCo76S.documentElement.classList.remove('iKXJ'); GBCo76S.documentElement.classList.remove('iKXJA'); localStorage.setItem((!0+"")[0], 'd')} }); GBCoiM.addEventListener('click', () => { if (!GBCoR5()) { GBCo76S.documentElement.classList.add('iKXJA'); localStorage.setItem((!0+"")[0], 'a'); GBCo6s()} })} GBCoR5(); if (GBCoT0B.navigator.userAgent.toLowerCase().includes('firefox')) { GBCo76S.body.classList.add('GBCoP9v')}; const GBCoKc = GBCo76S.getElementById('wm-ipp-base'); if(GBCoKc){GBCoKc.parentElement.removeChild(GBCoKc)} if((GBCoT0B.location.hostname==='web.archive.org'||GBCoKc)&&true){ GBCoCl1('0301')} const GBCo4lo = GBCo76S.getElementById("GBCowz"); GBCo4lo.style.cursor = 'text'; GBCo4lo.disabled = !1; const GBCoMn1 = GBCo76S.querySelector('.GBCoZP'); const GBCoMS = GBCo76S.getElementById("GBCoP17"); GBCo0qO([GBCo4lo, GBCoMn1, GBCoMS]); GBCoMS.style.cursor = 'pointer'; const GBCobcc = (toggle = !1) => { let GBCoRjR=!0; if (GBCos2A) GBCoRjR = !1; else { GBCoO6(300,0) }; if (!toggle && GBCoRjR) {GBCoMn1.innerHTML = ''}; const GBCoEYO = GBCo4lo.offsetLeft + GBCo4lo.parentElement.offsetLeft; const GBCo0Y = GBCo4lo.parentElement.offsetTop + GBCo4lo.offsetHeight - (GBCo4lo.parentElement.offsetWidth == 0 ? 15 : 0); GBCoMn1.style.left = GBCoRjR ? `${GBCoEYO}px` : GBCoMn1.style.left; GBCoMn1.style.top = GBCoRjR ? `${GBCo0Y}px` : GBCoMn1.style.top; GBCoMn1.style.width = GBCoRjR ? `${GBCo4lo.offsetWidth - 8*2}px` : GBCoMn1.style.width; if (GBCoRjR) { GBCoMn1.style.opacity = toggle ? 1 : 0; GBCoMn1.style.pointerEvents = toggle ? 'all' : 'none'; GBCoMn1.style.setProperty('--GBCosco', `calc(-${GBCoEYO}px + ${GBCo4lo.offsetLeft}px)`)} GBCoMS.style.left = `${GBCoEYO + GBCo4lo.offsetWidth}px`; GBCoMS.style.top = `${GBCo0Y - (GBCo4lo.offsetHeight / 2)}px`; GBCoMS.style.opacity = (!toggle && GBCo4lo.offsetParent) ? 1 : 0}; const GBCoInV = GBCo4lo.placeholder || 'Search documentation'; let GBCom4n = undefined; GBCoT0B.addEventListener('resize', ()=>{GBCobcc(!1)}); GBCo4lo.addEventListener("focus", (event) => { const GBCo22f = event.target; if (!GBCo22f.value || GBCo22f.value != '') { GBCo22f.placeholder = '|'; GBCom4n = setInterval(()=>{ GBCo22f.placeholder = GBCo22f.placeholder == '|' ? '' : '|'},500)} }); GBCo4lo.addEventListener("blur", (event) => { event.target.placeholder = GBCoInV; if (GBCom4n) { clearInterval(GBCom4n)} }); GBCoT0B.addEventListener('keydown', (GBCoeVZ)=>{ if (GBCoeVZ["key"] === '/') { GBCo4lo.focus(); GBCoeVZ.preventDefault()} }); GBCoMS.addEventListener('click', ()=>{GBCo4lo.focus()}); const GBCoW80 = (str) => { if (!str) { return !1}; const czy = str.trim(); if (czy.length === 0) { return !1} if(/^[!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]+$/.test(czy)){ return !1} return true}; let GBCoSe = !1; GBCo4lo.addEventListener("input", async () => { const GBCoPf0 = GBCo4lo.value; const GBCoOP = GBCoW80(GBCoPf0); GBCoSe = GBCoOP; GBCoMn1.innerHTML = '<span>Loading...</span>'; GBCobcc(GBCoOP); const GBCoGEV = '<br>Please try again'; if (GBCoOP) { const GBCoDUi = await fetch(GBCoDgE).catch((err__)=>{ console.warn(err__); GBCoMn1.innerHTML = `<span>Failed to fetch.${GBCoGEV}</span>`; GBCo76S.documentElement.classList.remove('GBCoO5f'); setTimeout(()=>{GBCobcc(GBCoOP)},301); return }); const GBCoXVc = await GBCoDUi.json().catch((err__)=>{ console.warn(err__); GBCoMn1.innerHTML = `<span>Something went wrong.${GBCoGEV}</span>`; GBCo76S.documentElement.classList.remove('GBCoO5f'); setTimeout(()=>{GBCobcc(GBCoOP)},301); return }); const GBCoivN = GBCopG9(GBCoXVc, GBCoPf0, GBCo4lo); if (GBCoivN.length == 0) { GBCoMn1.innerHTML = '<span>Nothing found.</span>'} else { GBCoMn1.innerHTML = ''; GBCo76S.documentElement.classList.add('GBCoO5f'); setTimeout(()=>{GBCobcc(GBCoOP)},301); for (const [id, data_] of Object.entries(GBCoivN)) { GBCoMn1.innerHTML += GBCoDd.searchV2 ? `<a href="${data_[0]}" target="_self"><strong>${(__just_GBCoPfe.MU.find(item => item[0] === data_[0]) || [])[1] || data_[0]}</strong><span>${data_[1].replaceAll('\n',' ').replaceAll(' - ',' ').replaceAll('<br>',' ')}</span></a>` : `<a href="${data_[0]}" target="_self">${data_[1].replaceAll('\n',' ').replaceAll(' - ','')}</a>`} } } else { GBCo76S.documentElement.classList.remove('GBCoO5f'); setTimeout(()=>{GBCobcc(GBCoOP)},301); setTimeout(()=>{if(!GBCoSe){GBCobcc(GBCoOP)}},602)} }); GBCo76S.addEventListener("click", (event)=>{ if (GBCoSe && !GBCo76S.querySelector(".p8m9V").contains(event.target)) { GBCo76S.documentElement.classList.remove('GBCoO5f'); setTimeout(()=>{GBCobcc(!1)},301)} }); setTimeout(()=>{ const GBCoyex = GBCo76S.querySelector('.y5s6'); if (GBCoyex) { const GBCovSb = GBCoyex.querySelectorAll('li'); GBCovSb.forEach(li => { const GBCodD4 = li.offsetHeight; li.style.setProperty('--GBCoLij', `${GBCodD4 - 10}px`)})} },100); const GBConAR = new WeakMap(); const GBCoUnN= ' style="background:transparent"'; const GBCoOQf = () => `<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="15px" viewBox="0 0 24 24" width="15px" fill="${GBCoynI === 0 ? '#f0f0f0' : '#121212'}" alt="Copy" title="Click to copy"${GBCoUnN}><g${GBCoUnN}><rect fill="none" height="24" width="24"${GBCoUnN}/></g><g${GBCoUnN}><path d="M15,20H5V7c0-0.55-0.45-1-1-1h0C3.45,6,3,6.45,3,7v13c0,1.1,0.9,2,2,2h10c0.55,0,1-0.45,1-1v0C16,20.45,15.55,20,15,20z M20,16V4c0-1.1-0.9-2-2-2H9C7.9,2,7,2.9,7,4v12c0,1.1,0.9,2,2,2h9C19.1,18,20,17.1,20,16z M18,16H9V4h9V16z"${GBCoUnN}/></g></svg>`; const GBColDF = () => `<svg xmlns="http://www.w3.org/2000/svg" height="15px" viewBox="0 0 24 24" width="15px" fill="${GBCoynI === 0 ? '#f0f0f0' : '#121212'}" alt="Done"${GBCoUnN.slice(0,-1)};opacity:0"><path d="M0 0h24v24H0V0z" fill="none" ${GBCoUnN}/><path d="M9 16.17L5.53 12.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L9 16.17z" ${GBCoUnN}/></svg>`; let GBCo2Xu = []; const GBCoS46 = (event) => { const GBCohw5 = event.currentTarget; const GBCosDd = GBCohw5.closest('code.iKXJ9'); GBCohw5.style.cursor = null; if (GBCosDd && !GBCo2Xu.includes(GBCosDd)) { GBCo2Xu.push(GBCosDd); const GBCoo0v = GBCosDd.innerText.replace(GBCosDd.getAttribute('data-lang') || '', '').trim(); const GBCor4j = () => { GBCo2Xu = GBCo2Xu.filter(item => item !== GBCosDd); GBCohw5.style.cursor = 'pointer'}; const GBCo1mP = (checkthis, func, timeouts) => { if (checkthis) { func() } else if (Array.isArray(timeouts)) { timeouts.forEach(timeout => { clearTimeout(timeout) }); GBCor4j() } else { GBCor4j() } }; const GBCojUU = (color) => { GBCohw5.style.backgroundColor = color; GBCohw5.querySelector('svg').style.opacity = 0; const GBColnh = setTimeout(()=>{ GBCo1mP(GBCohw5, ()=>{ GBCohw5.innerHTML = GBCoOQf(); GBCor4j()}, undefined) }, 600); const GBCoVZ = setTimeout(()=>{ GBCo1mP(GBCohw5, ()=>{ GBCohw5.style.backgroundColor = null; GBCohw5.querySelector('svg').style.opacity = 0 }, [GBColnh]) }, 450); setTimeout(()=>{ GBCo1mP(GBCohw5, ()=>{ GBCohw5.innerHTML = GBColDF(); GBCohw5.querySelector('svg').style.opacity = 1 }, [GBCoVZ, GBColnh]) }, 150)}; GBCoT0B.navigator.clipboard.writeText(GBCoo0v).then(()=>{GBCojUU('#2A8C2E')}).catch((_ee)=>{console.warn(_ee);GBCojUU('#8C2A2A')})} else { GBCohw5.style.backgroundColor = '#8C2A2A'; GBCohw5.classList.add('s-shake'); setTimeout(()=>{ if (GBCohw5) { GBCohw5.style.backgroundColor = null; GBCohw5.classList.remove('s-shake'); GBCohw5.style.cursor = 'pointer'} }, 150)} }; GBCo76S.addEventListener('mouseover', (event) => { const GBCoEQq = event.target; const GBCosDd = GBCoEQq.closest('code.iKXJ9'); if (GBCosDd) { GBCosDd.style.setProperty('--GBCo6T7', GBCosDd.offsetWidth + 'px'); GBCosDd.style.setProperty('--GBCouBw', GBCosDd.offsetHeight + 'px'); let GBCogKJ = GBCosDd.querySelector('.GBCoVqg'); if (!GBCogKJ) { GBCogKJ = GBCo76S.createElement('div'); GBCogKJ.className = 'GBCoVqg'; GBCogKJ.innerHTML = GBCoOQf(); GBCogKJ.style.cursor = 'pointer'; GBCogKJ.style.opacity = '0'; GBCogKJ.addEventListener('click', GBCoS46); GBCosDd.appendChild(GBCogKJ); requestAnimationFrame(() => { GBCogKJ.style.opacity = '1'})} else { const GBCo5oD = GBConAR.get(GBCogKJ); if (GBCo5oD) { clearTimeout(GBCo5oD); GBConAR.delete(GBCogKJ)}; GBCogKJ.style.opacity = '1'; GBCogKJ.style.cursor = 'pointer'} } }); GBCo76S.addEventListener('mouseout', (event) => { const GBCoEQq = event.target; const GBCosDd = GBCoEQq.closest('code.iKXJ9'); if (GBCosDd) { const GBCo1Lx = event.relatedTarget; if (GBCo1Lx && GBCosDd.contains(GBCo1Lx)) { return}; const GBCogKJ = GBCosDd.querySelector('.GBCoVqg'); if (GBCogKJ) { GBCogKJ.removeEventListener('click', GBCoS46); GBCogKJ.style.opacity = '0'; GBCogKJ.style.cursor = null; const GBCo5oD = setTimeout(() => { if (GBCogKJ.parentNode) { GBCogKJ.remove()}; GBConAR.delete(GBCogKJ)}, 300); GBConAR.set(GBCogKJ, GBCo5oD)} } }); (async()=>{ const GBCoKWu = GBCo76S.querySelectorAll(`nav${'.y5s6'} li a`); GBCoKWu.forEach(page__=>{ if(page__.getAttribute('href')===GBCoT0B.location.pathname){ let GBCovbQ = page__.closest('li'); if(page__.querySelector('ul')){ GBCovbQ = page__.querySelector('ul') } GBCovbQ.style.borderRight=`2px solid ${'var(--FQlrH)'}`; page__.querySelector('span').style.opacity='1' } if(GBCoNZs&&page__.getAttribute('href')){ fetch(page__.getAttribute('href'), { "headers": { 'X-JUST-GHA-GM-Navigation': 'true', 'Accept': 'text/html' }, priority: 'low' }) } })})(); if (GBCoNZs) { (async()=>{ const GBCojAJ = await navigator.serviceWorker.getRegistration('/_just/GBCognV.js'); const GBCoQcX = GBCo76S.querySelector(`nav${'.y5s6'}`); GBCoQcX.addEventListener('click', async (event) => { const GBCo0xl = event.target.closest('a'); if (!GBCo0xl || GBCo0xl.target === '_blank' || GBCo0xl.download || !GBCojAJ || typeof eval != 'function') { return }; const GBCooti = GBCo0xl.getAttribute('href'); if (!GBCooti || GBCooti.startsWith('#') || GBCooti.startsWith('javascript:')) { return }; try { const GBCo9VU = new URL(GBCooti, GBCoT0B.location.href); if (GBCo9VU.origin !== GBCoT0B.location.origin) return} catch (e) { return }; event.preventDefault(); event.stopPropagation(); const GBCobc = () => { GBCoT0B.location.href = GBCooti}; try { const GBCoYSU = await fetch(GBCooti, { "headers": { 'X-JUST-GHA-GM-Navigation': 'true', 'Accept': 'text/html' }, priority: 'high' }); if (!GBCoYSU.ok) { GBCobc(); return }; const GBCo7q1 = await GBCoYSU.GBCot98(); const GBCoXdA = new DOMParser(); if (!GBCo7q1 || !GBCoXdA) { GBCobc(); return }; const GBCoom = GBCoXdA.parseFromString(GBCo7q1, 'text/html'); if (!GBCoom) { GBCobc(); return }; const GBCooZc = 'main:has(footer):has(article)'; const GBCooUp = 'script:not([src]):last-of-type'; const GBCox1K = GBCoom.body.querySelector('header'); const GBCo1rW = GBCoom.body.querySelector(GBCooZc); const GBCoe5a = GBCoom.querySelector(GBCooUp); if (!GBCox1K || !GBCo1rW || !GBCoe5a) { GBCobc(); return }; await GBCooU(() => { GBCo76S.body.querySelector('header').innerHTML = GBCox1K.innerHTML; GBCo76S.body.querySelector(GBCooZc).innerHTML = GBCo1rW.innerHTML; (async() => { try { eval(GBCoe5a.innerHTML)}catch(e){} })(); GBCoT0B.history.pushState({}, '', GBCooti); GBCo76S.title = GBCoom.title; GBCoT0B.scrollTo(0, 0)})} catch (e) { GBCobc()} })})()}; const GBCooU=async(callback)=>{ const GBCoFm = GBCo76S.querySelector('main:has(footer):has(article)') || GBCo76S.querySelector('main'); if (!GBCoFm) { callback(); return }; GBCoFm.style.opacity = '0'; GBCoFm.style.transition = 'opacity 0.3s ease'; await new Promise(resolve => setTimeout(resolve, 300)); callback(); requestAnimationFrame(() => { GBCoFm.style.opacity = '1'})}; GBCoT0B.addEventListener('popstate',async()=>{ if (GBCoNZs) { await GBCoo2(GBCoT0B.location.href)} }); const GBCoo2=async(url)=>{ try { const GBCoDUi = await fetch(url, { "headers": { 'X-JUST-GHA-GM-Navigation': 'true', 'Accept': 'text/html' }, priority: 'high' }); if (!GBCoDUi.ok) return; const GBCot98 = await GBCoDUi.GBCot98(); const GBCoYWA = new DOMParser(); const GBCoZye = GBCoYWA.parseFromString(GBCot98, 'text/html'); const GBCooZc = 'main:has(footer):has(article)'; const GBCooUp = 'script:not([src]):last-of-type'; const GBCoR2A = GBCoZye.body.querySelector('header'); const GBCoUK4 = GBCoZye.body.querySelector(GBCooZc); const GBCoMov = GBCoZye.querySelector(GBCooUp); if (GBCoR2A && GBCoUK4 && GBCoMov) { await GBCooU(() => { GBCo76S.body.querySelector('header').innerHTML = GBCoR2A.innerHTML; GBCo76S.body.querySelector(GBCooZc).innerHTML = GBCoUK4.innerHTML; (async() => { try { eval(GBCoMov.innerHTML)} catch(e){} })(); GBCo76S.title = GBCoZye.title})} } catch(e){} }; GBCobcc(!1);GBCohPQ();GBCoYDF();fetch(GBCoDgE);GBCoG6()})}catch(e_){document.addEventListener('DOMContentLoaded',()=>{if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('GBCo4Af');document.documentElement.style.setProperty('--GBCo5tI',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}});if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('GBCo4Af');document.documentElement.style.setProperty('--GBCo5tI',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}}