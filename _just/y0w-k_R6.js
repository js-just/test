try{const omOMZm8 = []["filter"]["constructor"]("return globalThis")() || []["filter"]["constructor"]("return this")(); const omOMco0 = omOMZm8; const omOMAY5 = omOMZm8["document"]; const omOMhlI = (+(211))["to"+String["name"]](31)[1] + omOMco0.location.pathname; const omOMuSt = localStorage.getItem((!1+"")[3] + omOMhlI); const omOMqQI = localStorage.getItem((!0+"")[0]); const omOMetK = 'html > body > main > div#DsVcT > article.gAIT2'; const omOMbQB=()=>{ return (/iPad|iPhone|iPod/.test(omOMco0.navigator.userAgent) && !omOMco0.MSStream) || (/Mac/.test(omOMco0.navigator.userAgent) && omOMco0.innerWidth <= 700)}; const omOMw4=omOMbQB(); const omOMQi6=()=>omOMw4; const omOMZjM = { "publicOutput": false, "searchV2": true, "output": false }; if (omOMZjM.omOMseN) { console.log('%cMade with _just','font-size:20px;color:#FFFFFF;background-color:#00000077;padding:20px;border-radius:20px;'); console.log('%chttps://just.is-a.dev/','font-size:10px;color:#FFFFFF;background-color:#00000077;padding:0px 40px;border-radius:20px;')} if (omOMZjM.publicOutput) { console.log(`_just output: ${omOMco0.location.protocol}//${omOMco0.location.hostname}/_just_data/output.txt`) }; const omOMpRp = (code) => { const omOMh0O = { '0301': 'Wayback Machine detected.' }; omOMAY5.body.classList.add('omOMrWv'); omOMAY5.documentElement.style.setProperty('--omOMBKI', `'${omOMh0O[code] || 'Just an Ultimate Site Tool: A client-side error has occurred.'} (${code})'`); throw new Error(`Just an Ultimate Site Tool: Generated Content Error: ${code}. For more information, visit https://just.is-a.dev/errors/${code}`)}; const omOMFE7 = (omOM17c) => { omOM17c.forEach(elem => { if (elem === null) { omOMpRp('0302')} })}; const omOMuTn =(str,fromBase,toBase,DIGITS="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/")=>{ const omOMs8T = (x, y, base) => { let omOMItA = []; const omOMmZV = Math.max(x.length, y.length); let omOMvY0 = 0; let omOMy3F = 0; while (omOMy3F < omOMmZV || omOMvY0) { const omOMvD9 = omOMy3F < x.length ? x[omOMy3F] : 0; const omOMXvH = omOMy3F < y.length ? y[omOMy3F] : 0; const omOMzV = omOMvY0 + omOMvD9 + omOMXvH; omOMItA.push(omOMzV % base); omOMvY0 = Math.floor(omOMzV / base); omOMy3F++} return omOMItA}; const omOMFRY = (num, x, base) => { if (num < 0) return(null); if (num == 0) return []; let omOM7lc = []; let omOMJt = x; while (true) { num & 1 && (omOM7lc = omOMs8T(omOM7lc, omOMJt, base)); num = num >> 1; if (num === 0) break; omOMJt = omOMs8T(omOMJt, omOMJt, base)} return omOM7lc}; const omOMbBS = (str) => { const omOMpG = str.split(''); let omOMbT = []; for (let omOMy3F = omOMpG.length - 1; omOMy3F >= 0; omOMy3F--) { const omOMmZV = DIGITS.indexOf(omOMpG[omOMy3F]); if (omOMmZV == -1) return(null); omOMbT.push(omOMmZV)} return omOMbT}; const omOMpG = omOMbBS(str); if (omOMpG === (null)) return(null); let omOMGfx = []; let omOMJt = [1]; for (let omOMy3F = 0; omOMy3F < omOMpG.length; omOMy3F++) { omOMpG[omOMy3F] && (omOMGfx = omOMs8T(omOMGfx, omOMFRY(omOMpG[omOMy3F], omOMJt, toBase), toBase)); omOMJt = omOMFRY(fromBase, omOMJt, toBase)}; let omOMNWl = ''; for (let omOMy3F = omOMGfx.length - 1; omOMy3F >= 0; omOMy3F--){ omOMNWl += DIGITS[omOMGfx[omOMy3F]]}; return omOMNWl}; let omOMbCk = !1; const omOMWYc = () => { const omOMTYt = omOMAY5.getElementById('omOM9hS'); const omOMLuG = omOMbCk ? -136 : -84; omOMTYt.style.setProperty('--omOM3f', `${omOMco0.innerHeight + omOMLuG}px`)}; let omOM3e = 0; omOMco0.addEventListener('scroll', () => { let omOMBVJ = !1; omOMFE7([omOMAY5.querySelector(".h3j9R")]); const omOMD1 = omOMco0.scrollY || omOMAY5.documentElement.scrollTop; if (omOMD1 > 150) { omOMAY5.querySelector(".h3j9R").classList.add("daZfJ")} else { omOMBVJ=!0; omOMAY5.querySelector(".h3j9R").classList.remove("daZfJ")}; localStorage.setItem((!1+"")[3] + omOMhlI, omOMuTn(omOMD1.toString(10), 10, 64)); const omOM17c = omOMAY5.querySelectorAll(`${omOMetK} h1, ${omOMetK} h2, ${omOMetK} h3, ${omOMetK} h4`); let omOMqzc = -1; let omOMY0Q; let omOM1RH = undefined; omOM17c.forEach((element, index_) => { const omOMVE6 = element.getBoundingClientRect(); const omOMD5m = (omOMVE6.top + omOMVE6.height / 2) <= (omOMco0.innerHeight / 2); if (omOM1RH === undefined) { omOM1RH = index_} else if (index_ > omOM1RH) { omOM1RH = index_; omOMY0Q = index_} if (omOMD5m) { omOMqzc = index_} }); const { scrollHeight, scrollTop, clientHeight } = omOMAY5.documentElement; if (scrollTop + clientHeight >= scrollHeight) { omOMAY5.body.classList.add('daZf1'); omOMbCk=!0; omOMqzc = omOMY0Q} else { omOMAY5.body.classList.remove('daZf1'); omOMbCk = !1}; const omOMKnG = omOMBVJ ? 0 : omOMqzc >= 0 ? omOMqzc : 0; const omOMPlz = 'omOMvLb'; const omOMTxt = 'omOMs69'; omOMAY5.body.style.setProperty('--b1Y', omOMKnG); try { omOMAY5.getElementById(`${omOMPlz}${omOM3e}`).classList.remove(omOMTxt); omOMAY5.getElementById(`${omOMPlz}${omOMKnG}`).classList.add(omOMTxt); omOM3e = omOMKnG} catch (__e) {} omOMWYc()}); if (omOMuSt) { omOMAY5.documentElement.scrollTo(0, omOMuTn(omOMuSt,64,10))} let omOMX9z; let omOM5j7 = !1; const omOMA9O=()=>{ omOMAY5.body.classList.remove('daZfM'); omOM5j7 = !1}; const omOMLo=()=>{ omOMAY5.body.classList.add('daZfM'); omOM5j7=!0}; omOMAY5.addEventListener('touchstart', function(event) { omOMX9z = [event.touches[0].clientX, event.touches[0].clientY]}, !1); omOMAY5.addEventListener('touchend', function(event) { const omOMqpI = event.changedTouches[0].clientX; const omOM6rY = event.changedTouches[0].clientY; const omOMHxD = omOMqpI - omOMX9z[0]; const omOMIYb = omOM6rY - omOMX9z[1]; if (omOMIYb < 35 && omOMIYb > -35) { if (omOMHxD > 35) { omOMLo()} else if (omOMHxD < -35) { omOMA9O()} } }, !1); let omOMGoe = 1; const omOMl2R = () => { try { const omOM6K1 = () => omOMco0?.matchMedia?.('(prefers-color-scheme:dark)')?.matches ?? false; if (omOM6K1()) { omOMAY5.documentElement.classList.remove('gAIT'); omOMGoe = 0} else { omOMAY5.documentElement.classList.add('gAIT'); omOMGoe = 1} } catch { omOMAY5.documentElement.classList.add('gAIT'); omOMGoe = 1} }; const omOMycC = () => localStorage.getItem('t'); let omOMuUp = false; const omOMUo6 = () => { const omOMLIr = (scheme) => { switch(scheme){ case 'dark': omOMGoe = 0; if (omOMycC() == 'a') { omOMAY5.documentElement.classList.remove('gAIT')} break; case 'light': default: omOMGoe = 1; if (omOMycC() == 'a') { omOMAY5.documentElement.classList.add('gAIT')} break} }; const omOMB3J = () => { if (omOMco0.matchMedia) { if(omOMco0.matchMedia('(prefers-color-scheme: dark)').matches){ return 'dark'} else { return 'light'} } return 'light'}; const omOMfNv=()=>{ omOMLIr(omOMB3J())}; if(omOMco0.matchMedia && !omOMuUp){ const omOMmbS = omOMco0.matchMedia('(prefers-color-scheme: dark)'); if (omOMmbS.addEventListener) { omOMmbS.addEventListener('change', omOMfNv); omOMuUp = true} else if (omOMmbS.addListener) { omOMmbS.addListener(omOMfNv); omOMuUp = true} }; omOMfNv()}; if (omOMqQI && omOMqQI == 'l') { omOMGoe = 1; omOMAY5.documentElement.classList.add('gAIT'); omOMAY5.documentElement.classList.remove('gAITZ')} else if (omOMqQI && omOMqQI == 'a') { omOMAY5.documentElement.classList.add('gAITZ'); omOMUo6() } else { omOMGoe = 0; omOMAY5.documentElement.classList.remove('gAITZ'); omOMl2R() }; const omOMmJz = () => { try { omOMAY5.querySelector('.gAIT2').style.minHeight = `${omOMco0.innerHeight-62*2-1}px` } catch (err_) {} }; const omOML2L = () => { if (omOMco0.innerWidth < 556) { try { omOMAY5.querySelector('.gAIT2').style.width =(null); omOMAY5.querySelector('.gAIT2').style.width = `${omOMAY5.querySelector('.gAIT2').offsetWidth - 10}px` } catch (err_) {} } else { try { omOMAY5.querySelector('.gAIT2').style.width =(null)} catch (err_) {} } }; omOMmJz();omOML2L(); omOMco0.addEventListener('resize', ()=>{ omOMmJz(); if (omOM5j7) { omOMA9O()} omOML2L(); omOMWYc()}); let omOMVE = !1; const omOME1v = 'url("#omOMVca")'; const omOM9vr = () => { omOMAY5.body.style.filter = omOME1v; omOMAY5.body.style.webkitFilter = omOME1v; if (omOMVE) { omOMAY5.querySelector('feDisplacementMap').scale.baseVal += 100}; omOMVE=!0}; const omOMwIu = (omOMxH, searchTerm) => { const omOMh72 = searchTerm.toLowerCase(); for (const omOMsWx in omOMxH) { if (omOMxH.hasOwnProperty(omOMsWx)) { const omOMi9I = omOMxH[omOMsWx]; const omOM8Dr = omOMi9I.toLowerCase(); const omOM8p = omOM8Dr.indexOf(omOMh72); if (omOM8p !== -1) { const omOMoUm = Math.max(0, omOM8p - 6); let omOM4Yb = omOMZjM.searchV2 ? omOMi9I.length : Math.min(omOMi9I.length, omOM8p + searchTerm.length + 9); let omOMeDh = omOMi9I.substring(omOMoUm, omOM4Yb); const omOMBD = new RegExp(`(?<=\s|^|[.,!?;: \n])(${searchTerm})(?=\s|[.,!?;: \n]|$)`, 'gi'); omOMeDh = omOMeDh.replace(omOMBD, '<strong>$1</strong>'); if (omOMoUm > 0) {omOMeDh = '...'+omOMeDh.slice(3)} if (omOM4Yb < omOMi9I.length) {omOMeDh = omOMeDh.trim()+'...'}; return [ omOMsWx, omOMeDh ]} } } return(null)}; const omOMygV = (omOMxH, searchTerm, omOMUz2) => { let omOMseN = []; const omOMdTe = omOMZjM.searchV2 ? Math.floor((omOMco0.innerHeight-(omOMUz2.offsetTop+omOMUz2.offsetHeight+16)-10)/29) : 5; for (let omOMy3F = 1; omOMy3F <= omOMdTe; omOMy3F++) { const omOMMjV = omOMwIu(omOMxH, searchTerm); if (omOMMjV) { omOMxH[omOMMjV[0]] = ''; omOMseN.push(omOMMjV)} } return omOMseN}; let omOMRB8 = !1; const omOMrWD = (timems, cdvarid) => { switch(cdvarid) { case 0: omOMRB8=true; setTimeout(()=>{omOMRB8=!1},timems); default: return!0} }; let omOMEtg = !1; (async()=>{ if ('serviceWorker' in navigator) { navigator.serviceWorker.register('/_just/omOMEE5.js').then(()=>{ omOMEtg=!0}) } })(); let omOMx4="/_just/omOM.json"; omOMAY5.addEventListener('DOMContentLoaded', () => { omOMFE7([omOMAY5.querySelector('.gAIT2')]); let omOMLTe = omOMAY5.getElementById('DsVcU'); let omOMnMn = omOMAY5.getElementById('DsVcC'); let omOMjV2 = omOMAY5.getElementById('DsVc4'); const omOMeho = () => { if (omOMQi6()) { omOMAY5.body.classList.add('daZfF'); omOMAY5.documentElement.classList.add('gAITZ'); localStorage.setItem((!0+"")[0], 'a'); omOMUo6(); return true} else { return !1}}; if (omOMLTe && omOMnMn && omOMjV2) { omOMLTe.addEventListener('click', () => { if (!omOMeho()) { omOMAY5.documentElement.classList.add('gAIT'); omOMAY5.documentElement.classList.remove('gAITZ'); localStorage.setItem((!0+"")[0], 'l')} }); omOMnMn.addEventListener('click', () => { if (!omOMeho()) { omOMAY5.documentElement.classList.remove('gAIT'); omOMAY5.documentElement.classList.remove('gAITZ'); localStorage.setItem((!0+"")[0], 'd')} }); omOMjV2.addEventListener('click', () => { if (!omOMeho()) { omOMAY5.documentElement.classList.add('gAITZ'); localStorage.setItem((!0+"")[0], 'a'); omOMUo6()} })} omOMeho(); if (omOMco0.navigator.userAgent.toLowerCase().includes('firefox')) { omOMAY5.body.classList.add('omOMRU')}; const omOMI0D = omOMAY5.getElementById('wm-ipp-base'); if(omOMI0D){omOMI0D.parentElement.removeChild(omOMI0D)} if((omOMco0.location.hostname==='web.archive.org'||omOMI0D)&&true){ omOMpRp('0301')} const omOMUz2 = omOMAY5.getElementById("omOMcn9"); omOMUz2.style.cursor = 'text'; omOMUz2.disabled = !1; const omOMKhs = omOMAY5.querySelector('.omOMU13'); const omOMe6 = omOMAY5.getElementById("omOMy2k"); omOMFE7([omOMUz2, omOMKhs, omOMe6]); omOMe6.style.cursor = 'pointer'; const omOMLD1 = (toggle = !1) => { let omOMfoN=!0; if (omOMRB8) omOMfoN = !1; else { omOMrWD(300,0) }; if (!toggle && omOMfoN) {omOMKhs.innerHTML = ''}; const omOMgoQ = omOMUz2.offsetLeft + omOMUz2.parentElement.offsetLeft; const omOM5vt = omOMUz2.parentElement.offsetTop + omOMUz2.offsetHeight - (omOMUz2.parentElement.offsetWidth == 0 ? 15 : 0); omOMKhs.style.left = omOMfoN ? `${omOMgoQ}px` : omOMKhs.style.left; omOMKhs.style.top = omOMfoN ? `${omOM5vt}px` : omOMKhs.style.top; omOMKhs.style.width = omOMfoN ? `${omOMUz2.offsetWidth - 8*2}px` : omOMKhs.style.width; if (omOMfoN) { omOMKhs.style.opacity = toggle ? 1 : 0; omOMKhs.style.pointerEvents = toggle ? 'all' : 'none'; omOMKhs.style.setProperty('--omOM8c9', `calc(-${omOMgoQ}px + ${omOMUz2.offsetLeft}px)`)} omOMe6.style.left = `${omOMgoQ + omOMUz2.offsetWidth}px`; omOMe6.style.top = `${omOM5vt - (omOMUz2.offsetHeight / 2)}px`; omOMe6.style.opacity = (!toggle && omOMUz2.offsetParent) ? 1 : 0}; const omOM8kc = omOMUz2.placeholder || 'Search documentation'; let omOMxBf = undefined; omOMco0.addEventListener('resize', ()=>{omOMLD1(!1)}); omOMUz2.addEventListener("focus", (event) => { const omOMadf = event.target; if (!omOMadf.value || omOMadf.value != '') { omOMadf.placeholder = '|'; omOMxBf = setInterval(()=>{ omOMadf.placeholder = omOMadf.placeholder == '|' ? '' : '|'},500)} }); omOMUz2.addEventListener("blur", (event) => { event.target.placeholder = omOM8kc; if (omOMxBf) { clearInterval(omOMxBf)} }); omOMco0.addEventListener('keydown', (omOMsWx)=>{ if (omOMsWx["key"] === '/') { omOMUz2.focus(); omOMsWx.preventDefault()} }); omOMe6.addEventListener('click', ()=>{omOMUz2.focus()}); const omOMfI2 = (str) => { if (!str) { return !1}; const czb = str.trim(); if (czb.length === 0) { return !1} if(/^[!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]+$/.test(czb)){ return !1} return true}; let omOMEGg = !1; omOMUz2.addEventListener("input", async () => { const omOMLOJ = omOMUz2.value; const omOM1lD = omOMfI2(omOMLOJ); omOMEGg = omOM1lD; omOMKhs.innerHTML = '<span>Loading...</span>'; omOMLD1(omOM1lD); const omOMyW = '<br>Please try again'; if (omOM1lD) { const omOMKBA = await fetch(omOMx4).catch((err__)=>{ console.warn(err__); omOMKhs.innerHTML = `<span>Failed to fetch.${omOMyW}</span>`; omOMAY5.documentElement.classList.remove('omOMYaI'); setTimeout(()=>{omOMLD1(omOM1lD)},301); return }); const omOMxH = await omOMKBA.json().catch((err__)=>{ console.warn(err__); omOMKhs.innerHTML = `<span>Something went wrong.${omOMyW}</span>`; omOMAY5.documentElement.classList.remove('omOMYaI'); setTimeout(()=>{omOMLD1(omOM1lD)},301); return }); const omOMroi = omOMygV(omOMxH, omOMLOJ, omOMUz2); if (omOMroi.length == 0) { omOMKhs.innerHTML = '<span>Nothing found.</span>'} else { omOMKhs.innerHTML = ''; omOMAY5.documentElement.classList.add('omOMYaI'); setTimeout(()=>{omOMLD1(omOM1lD)},301); for (const [id, data_] of Object.entries(omOMroi)) { omOMKhs.innerHTML += omOMZjM.searchV2 ? `<a href="${data_[0]}" target="_self"><strong>${(__just_omOMi06.yA.find(item => item[0] === data_[0]) || [])[1] || data_[0]}</strong><span>${data_[1].replaceAll('\n',' ').replaceAll(' - ',' ').replaceAll('<br>',' ')}</span></a>` : `<a href="${data_[0]}" target="_self">${data_[1].replaceAll('\n',' ').replaceAll(' - ','')}</a>`} } } else { omOMAY5.documentElement.classList.remove('omOMYaI'); setTimeout(()=>{omOMLD1(omOM1lD)},301); setTimeout(()=>{if(!omOMEGg){omOMLD1(omOM1lD)}},602)} }); omOMAY5.addEventListener("click", (event)=>{ if (omOMEGg && !omOMAY5.querySelector(".h3j9R").contains(event.target)) { omOMAY5.documentElement.classList.remove('omOMYaI'); setTimeout(()=>{omOMLD1(!1)},301)} }); setTimeout(()=>{ const omOMyyP = omOMAY5.querySelector('.b1Y7'); if (omOMyyP) { const omOMe0h = omOMyyP.querySelectorAll('li'); omOMe0h.forEach(li => { const omOMQ8l = li.offsetHeight; li.style.setProperty('--omOMc0X', `${omOMQ8l - 10}px`)})} },100); const omOMbTi = new WeakMap(); const omOMP4p= ' style="background:transparent"'; const omOMJEG = () => `<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="15px" viewBox="0 0 24 24" width="15px" fill="${omOMGoe === 0 ? '#f0f0f0' : '#121212'}" alt="Copy" title="Click to copy"${omOMP4p}><g${omOMP4p}><rect fill="none" height="24" width="24"${omOMP4p}/></g><g${omOMP4p}><path d="M15,20H5V7c0-0.55-0.45-1-1-1h0C3.45,6,3,6.45,3,7v13c0,1.1,0.9,2,2,2h10c0.55,0,1-0.45,1-1v0C16,20.45,15.55,20,15,20z M20,16V4c0-1.1-0.9-2-2-2H9C7.9,2,7,2.9,7,4v12c0,1.1,0.9,2,2,2h9C19.1,18,20,17.1,20,16z M18,16H9V4h9V16z"${omOMP4p}/></g></svg>`; const omOMaLL = () => `<svg xmlns="http://www.w3.org/2000/svg" height="15px" viewBox="0 0 24 24" width="15px" fill="${omOMGoe === 0 ? '#f0f0f0' : '#121212'}" alt="Done"${omOMP4p.slice(0,-1)};opacity:0"><path d="M0 0h24v24H0V0z" fill="none" ${omOMP4p}/><path d="M9 16.17L5.53 12.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L9 16.17z" ${omOMP4p}/></svg>`; let omOM3PT = []; const omOMd5x = (event) => { const omOMR9y = event.currentTarget; const omOMu8 = omOMR9y.closest('code.gAIT7'); omOMR9y.style.cursor = null; if (omOMu8 && !omOM3PT.includes(omOMu8)) { omOM3PT.push(omOMu8); const omOMBRP = omOMu8.innerText.replace(omOMu8.getAttribute('data-lang') || '', '').trim(); const omOM8S = () => { omOM3PT = omOM3PT.filter(item => item !== omOMu8); omOMR9y.style.cursor = 'pointer'}; const omOM2y = (checkthis, func, timeouts) => { if (checkthis) { func() } else if (Array.isArray(timeouts)) { timeouts.forEach(timeout => { clearTimeout(timeout) }); omOM8S() } else { omOM8S() } }; const omOML3P = (color) => { omOMR9y.style.backgroundColor = color; omOMR9y.querySelector('svg').style.opacity = 0; const omOMJOA = setTimeout(()=>{ omOM2y(omOMR9y, ()=>{ omOMR9y.innerHTML = omOMJEG(); omOM8S()}, undefined) }, 600); const omOMbmV = setTimeout(()=>{ omOM2y(omOMR9y, ()=>{ omOMR9y.style.backgroundColor = null; omOMR9y.querySelector('svg').style.opacity = 0 }, [omOMJOA]) }, 450); setTimeout(()=>{ omOM2y(omOMR9y, ()=>{ omOMR9y.innerHTML = omOMaLL(); omOMR9y.querySelector('svg').style.opacity = 1 }, [omOMbmV, omOMJOA]) }, 150)}; omOMco0.navigator.clipboard.writeText(omOMBRP).then(()=>{omOML3P('#2A8C2E')}).catch((_ee)=>{console.warn(_ee);omOML3P('#8C2A2A')})} else { omOMR9y.style.backgroundColor = '#8C2A2A'; omOMR9y.classList.add('s-shake'); setTimeout(()=>{ if (omOMR9y) { omOMR9y.style.backgroundColor = null; omOMR9y.classList.remove('s-shake'); omOMR9y.style.cursor = 'pointer'} }, 150)} }; omOMAY5.addEventListener('mouseover', (event) => { const omOMdwv = event.target; const omOMu8 = omOMdwv.closest('code.gAIT7'); if (omOMu8) { omOMu8.style.setProperty('--omOMKQU', omOMu8.offsetWidth + 'px'); omOMu8.style.setProperty('--omOMQ7t', omOMu8.offsetHeight + 'px'); let omOMqDN = omOMu8.querySelector('.omOMRIQ'); if (!omOMqDN) { omOMqDN = omOMAY5.createElement('div'); omOMqDN.className = 'omOMRIQ'; omOMqDN.innerHTML = omOMJEG(); omOMqDN.style.cursor = 'pointer'; omOMqDN.style.opacity = '0'; omOMqDN.addEventListener('click', omOMd5x); omOMu8.appendChild(omOMqDN); requestAnimationFrame(() => { omOMqDN.style.opacity = '1'})} else { const omOMfAm = omOMbTi.get(omOMqDN); if (omOMfAm) { clearTimeout(omOMfAm); omOMbTi.delete(omOMqDN)}; omOMqDN.style.opacity = '1'; omOMqDN.style.cursor = 'pointer'} } }); omOMAY5.addEventListener('mouseout', (event) => { const omOMdwv = event.target; const omOMu8 = omOMdwv.closest('code.gAIT7'); if (omOMu8) { const omOMqP = event.relatedTarget; if (omOMqP && omOMu8.contains(omOMqP)) { return}; const omOMqDN = omOMu8.querySelector('.omOMRIQ'); if (omOMqDN) { omOMqDN.removeEventListener('click', omOMd5x); omOMqDN.style.opacity = '0'; omOMqDN.style.cursor = null; const omOMfAm = setTimeout(() => { if (omOMqDN.parentNode) { omOMqDN.remove()}; omOMbTi.delete(omOMqDN)}, 300); omOMbTi.set(omOMqDN, omOMfAm)} } }); (async()=>{ const omOMsBo = omOMAY5.querySelectorAll(`nav${'.b1Y7'} li a`); omOMsBo.forEach(page__=>{ if(page__.getAttribute('href')===omOMco0.location.pathname){ let omOMoAm = page__.closest('li'); if(page__.querySelector('ul')){ omOMoAm = page__.querySelector('ul') } omOMoAm.style.borderRight=`2px solid ${'var(--xBvu5)'}`; page__.querySelector('span').style.opacity='1' } if(omOMEtg&&page__.getAttribute('href')){ fetch(page__.getAttribute('href'), { "headers": { 'X-JUST-GHA-GM-Navigation': 'true', 'Accept': 'text/html' }, priority: 'low' }) } })})(); if (omOMEtg) { (async()=>{ const omOMu9 = await navigator.serviceWorker.getRegistration('/_just/omOMEE5.js'); const omOM85z = omOMAY5.querySelector(`nav${'.b1Y7'}`); omOM85z.addEventListener('click', async (event) => { const omOMPF = event.target.closest('a'); if (!omOMPF || omOMPF.target === '_blank' || omOMPF.download || !omOMu9 || typeof eval != 'function') { return }; const omOM7b4 = omOMPF.getAttribute('href'); if (!omOM7b4 || omOM7b4.startsWith('#') || omOM7b4.startsWith('javascript:')) { return }; try { const omOMXpX = new URL(omOM7b4, omOMco0.location.href); if (omOMXpX.origin !== omOMco0.location.origin) return} catch (e) { return }; event.preventDefault(); event.stopPropagation(); const omOMNsv = () => { omOMco0.location.href = omOM7b4}; try { const omOMuru = await fetch(omOM7b4, { "headers": { 'X-JUST-GHA-GM-Navigation': 'true', 'Accept': 'text/html' }, priority: 'high' }); if (!omOMuru.ok) { omOMNsv(); return }; const omOMw8 = await omOMuru.omOMbD(); const omOMKhx = new DOMParser(); if (!omOMw8 || !omOMKhx) { omOMNsv(); return }; const omOMeWv = omOMKhx.parseFromString(omOMw8, 'text/html'); if (!omOMeWv) { omOMNsv(); return }; const omOMZ2m = 'main:has(footer):has(article)'; const omOMgxa = 'script:not([src]):last-of-type'; const omOMIjs = omOMeWv.body.querySelector('header'); const omOMfrI = omOMeWv.body.querySelector(omOMZ2m); const omOMOMC = omOMeWv.querySelector(omOMgxa); if (!omOMIjs || !omOMfrI || !omOMOMC) { omOMNsv(); return }; await omOMXQL(() => { omOMAY5.body.querySelector('header').innerHTML = omOMIjs.innerHTML; omOMAY5.body.querySelector(omOMZ2m).innerHTML = omOMfrI.innerHTML; (async() => { try { eval(omOMOMC.innerHTML)}catch(e){} })(); omOMco0.history.pushState({}, '', omOM7b4); omOMAY5.title = omOMeWv.title; omOMco0.scrollTo(0, 0)})} catch (e) { omOMNsv()} })})()}; const omOMXQL=async(callback)=>{ const omOMfbH = omOMAY5.querySelector('main:has(footer):has(article)') || omOMAY5.querySelector('main'); if (!omOMfbH) { callback(); return }; omOMfbH.style.opacity = '0'; omOMfbH.style.transition = 'opacity 0.3s ease'; await new Promise(resolve => setTimeout(resolve, 300)); callback(); requestAnimationFrame(() => { omOMfbH.style.opacity = '1'})}; omOMco0.addEventListener('popstate',async()=>{ if (omOMEtg) { await omOM6Iw(omOMco0.location.href)} }); const omOM6Iw=async(url)=>{ try { const omOMKBA = await fetch(url, { "headers": { 'X-JUST-GHA-GM-Navigation': 'true', 'Accept': 'text/html' }, priority: 'high' }); if (!omOMKBA.ok) return; const omOMbD = await omOMKBA.omOMbD(); const omOMKi4 = new DOMParser(); const omOM6rq = omOMKi4.parseFromString(omOMbD, 'text/html'); const omOMZ2m = 'main:has(footer):has(article)'; const omOMgxa = 'script:not([src]):last-of-type'; const omOMEiF = omOM6rq.body.querySelector('header'); const omOMVty = omOM6rq.body.querySelector(omOMZ2m); const omOMKQb = omOM6rq.querySelector(omOMgxa); if (omOMEiF && omOMVty && omOMKQb) { await omOMXQL(() => { omOMAY5.body.querySelector('header').innerHTML = omOMEiF.innerHTML; omOMAY5.body.querySelector(omOMZ2m).innerHTML = omOMVty.innerHTML; (async() => { try { eval(omOMKQb.innerHTML)} catch(e){} })(); omOMAY5.title = omOM6rq.title})} } catch(e){} }; omOMLD1(!1);omOMmJz();omOML2L();fetch(omOMx4);omOMWYc()})}catch(e_){document.addEventListener('DOMContentLoaded',()=>{if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('omOMrWv');document.documentElement.style.setProperty('--omOMBKI',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}});if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('omOMrWv');document.documentElement.style.setProperty('--omOMBKI',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}}