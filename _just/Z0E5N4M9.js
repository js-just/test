try{const lOmraZ = []["filter"]["constructor"]("return globalThis")() || []["filter"]["constructor"]("return this")(); const lOmrAZR = lOmraZ; const lOmrMsL = lOmraZ["document"]; const lOmrlsp = (+(211))["to"+String["name"]](31)[1] + lOmrAZR.location.pathname; const lOmrvl = localStorage.getItem((!1+"")[3] + lOmrlsp); const lOmrlQ = localStorage.getItem((!0+"")[0]); const lOmrKcr = 'html > body > main > div#LWyzW > article.SckHX'; const lOmrpU6=()=>{ return (/iPad|iPhone|iPod/.test(lOmrAZR.navigator.userAgent) && !lOmrAZR.MSStream) || (/Mac/.test(lOmrAZR.navigator.userAgent) && lOmrAZR.innerWidth <= 700)}; const lOmr0si=lOmrpU6(); const lOmr9ZV=()=>lOmr0si; const lOmr4z = { "publicOutput": false, "searchV2": true, "output": false }; if (lOmr4z.lOmrfpk) { console.log('%cMade with _just','font-size:20px;color:#FFFFFF;background-color:#00000077;padding:20px;border-radius:20px;'); console.log('%chttps://just.is-a.dev/','font-size:10px;color:#FFFFFF;background-color:#00000077;padding:0px 40px;border-radius:20px;')} if (lOmr4z.publicOutput) { console.log(`_just output: ${lOmrAZR.location.protocol}//${lOmrAZR.location.hostname}/_just_data/output.txt`) }; const lOmrWZW = (code) => { const lOmr2C = { '0301': 'Wayback Machine detected.' }; lOmrMsL.body.classList.add('lOmrsP9'); lOmrMsL.documentElement.style.setProperty('--lOmroPV', `'${lOmr2C[code] || 'Just an Ultimate Site Tool: A client-side error has occurred.'} (${code})'`); throw new Error(`Just an Ultimate Site Tool: Generated Content Error: ${code}. For more information, visit https://just.is-a.dev/errors/${code}`)}; const lOmrtII = (lOmrJA) => { lOmrJA.forEach(elem => { if (elem === null) { lOmrWZW('0302')} })}; const lOmrYhs =(str,fromBase,toBase,DIGITS="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/")=>{ const lOmr6H3 = (x, y, base) => { let lOmr9z = []; const lOmryi = Math.max(x.length, y.length); let lOmrnYX = 0; let lOmrBNp = 0; while (lOmrBNp < lOmryi || lOmrnYX) { const lOmrQhF = lOmrBNp < x.length ? x[lOmrBNp] : 0; const lOmr697 = lOmrBNp < y.length ? y[lOmrBNp] : 0; const lOmrt7 = lOmrnYX + lOmrQhF + lOmr697; lOmr9z.push(lOmrt7 % base); lOmrnYX = Math.floor(lOmrt7 / base); lOmrBNp++} return lOmr9z}; const lOmrR5P = (num, x, base) => { if (num < 0) return(null); if (num == 0) return []; let lOmrtaJ = []; let lOmrbxQ = x; while (true) { num & 1 && (lOmrtaJ = lOmr6H3(lOmrtaJ, lOmrbxQ, base)); num = num >> 1; if (num === 0) break; lOmrbxQ = lOmr6H3(lOmrbxQ, lOmrbxQ, base)} return lOmrtaJ}; const lOmrf48 = (str) => { const lOmri = str.split(''); let lOmrq47 = []; for (let lOmrBNp = lOmri.length - 1; lOmrBNp >= 0; lOmrBNp--) { const lOmryi = DIGITS.indexOf(lOmri[lOmrBNp]); if (lOmryi == -1) return(null); lOmrq47.push(lOmryi)} return lOmrq47}; const lOmri = lOmrf48(str); if (lOmri === (null)) return(null); let lOmr836 = []; let lOmrbxQ = [1]; for (let lOmrBNp = 0; lOmrBNp < lOmri.length; lOmrBNp++) { lOmri[lOmrBNp] && (lOmr836 = lOmr6H3(lOmr836, lOmrR5P(lOmri[lOmrBNp], lOmrbxQ, toBase), toBase)); lOmrbxQ = lOmrR5P(fromBase, lOmrbxQ, toBase)}; let lOmrdMe = ''; for (let lOmrBNp = lOmr836.length - 1; lOmrBNp >= 0; lOmrBNp--){ lOmrdMe += DIGITS[lOmr836[lOmrBNp]]}; return lOmrdMe}; let lOmr0Xp = !1; const lOmrDFg = () => { const lOmrz1k = lOmrMsL.getElementById('lOmrfq'); const lOmrvPG = lOmr0Xp ? -136 : -84; lOmrz1k.style.setProperty('--lOmrlT4', `${lOmrAZR.innerHeight + lOmrvPG}px`)}; let lOmr4q = 0; lOmrAZR.addEventListener('scroll', () => { let lOmrGdA = !1; lOmrtII([lOmrMsL.querySelector(".U1v6O")]); const lOmrbqt = lOmrAZR.scrollY || lOmrMsL.documentElement.scrollTop; if (lOmrbqt > 150) { lOmrMsL.querySelector(".U1v6O").classList.add("besDQ")} else { lOmrGdA=!0; lOmrMsL.querySelector(".U1v6O").classList.remove("besDQ")}; localStorage.setItem((!1+"")[3] + lOmrlsp, lOmrYhs(lOmrbqt.toString(10), 10, 64)); const lOmrJA = lOmrMsL.querySelectorAll(`${lOmrKcr} h1, ${lOmrKcr} h2, ${lOmrKcr} h3, ${lOmrKcr} h4`); let lOmr4vL = -1; let lOmrju4; let lOmr9OS = undefined; lOmrJA.forEach((element, index_) => { const lOmreNH = element.getBoundingClientRect(); const lOmrsZw = (lOmreNH.top + lOmreNH.height / 2) <= (lOmrAZR.innerHeight / 2); if (lOmr9OS === undefined) { lOmr9OS = index_} else if (index_ > lOmr9OS) { lOmr9OS = index_; lOmrju4 = index_} if (lOmrsZw) { lOmr4vL = index_} }); const { scrollHeight, scrollTop, clientHeight } = lOmrMsL.documentElement; if (scrollTop + clientHeight >= scrollHeight) { lOmrMsL.body.classList.add('besDB'); lOmr0Xp=!0; lOmr4vL = lOmrju4} else { lOmrMsL.body.classList.remove('besDB'); lOmr0Xp = !1}; const lOmri7 = lOmrGdA ? 0 : lOmr4vL >= 0 ? lOmr4vL : 0; const lOmrJkQ = 'lOmrfZp'; const lOmrVl = 'lOmrpwF'; lOmrMsL.body.style.setProperty('--h3J', lOmri7); try { lOmrMsL.getElementById(`${lOmrJkQ}${lOmr4q}`).classList.remove(lOmrVl); lOmrMsL.getElementById(`${lOmrJkQ}${lOmri7}`).classList.add(lOmrVl); lOmr4q = lOmri7} catch (__e) {} lOmrDFg()}); if (lOmrvl) { lOmrMsL.documentElement.scrollTo(0, lOmrYhs(lOmrvl,64,10))} let lOmrhKK; let lOmrxY1 = !1; const lOmrAG=()=>{ lOmrMsL.body.classList.remove('besDF'); lOmrxY1 = !1}; const lOmr5C=()=>{ lOmrMsL.body.classList.add('besDF'); lOmrxY1=!0}; lOmrMsL.addEventListener('touchstart', function(event) { lOmrhKK = [event.touches[0].clientX, event.touches[0].clientY]}, !1); lOmrMsL.addEventListener('touchend', function(event) { const lOmrFx = event.changedTouches[0].clientX; const lOmrTt = event.changedTouches[0].clientY; const lOmruut = lOmrFx - lOmrhKK[0]; const lOmrK2q = lOmrTt - lOmrhKK[1]; if (lOmrK2q < 35 && lOmrK2q > -35) { if (lOmruut > 35) { lOmr5C()} else if (lOmruut < -35) { lOmrAG()} } }, !1); let lOmrlPN = 1; const lOmr60H = () => { try { const lOmrlUE = () => lOmrAZR?.matchMedia?.('(prefers-color-scheme:dark)')?.matches ?? false; if (lOmrlUE()) { lOmrMsL.documentElement.classList.remove('SckH'); lOmrlPN = 0} else { lOmrMsL.documentElement.classList.add('SckH'); lOmrlPN = 1} } catch { lOmrMsL.documentElement.classList.add('SckH'); lOmrlPN = 1} }; const lOmr041 = () => localStorage.getItem('t'); let lOmr2G = false; const lOmrLzi = () => { const lOmr5FW = (scheme) => { switch(scheme){ case 'dark': lOmrlPN = 0; if (lOmr041() == 'a') { lOmrMsL.documentElement.classList.remove('SckH')} break; case 'light': default: lOmrlPN = 1; if (lOmr041() == 'a') { lOmrMsL.documentElement.classList.add('SckH')} break} }; const lOmrinP = () => { if (lOmrAZR.matchMedia) { if(lOmrAZR.matchMedia('(prefers-color-scheme: dark)').matches){ return 'dark'} else { return 'light'} } return 'light'}; const lOmrCQ=()=>{ lOmr5FW(lOmrinP())}; if(lOmrAZR.matchMedia && !lOmr2G){ const lOmr3X9 = lOmrAZR.matchMedia('(prefers-color-scheme: dark)'); if (lOmr3X9.addEventListener) { lOmr3X9.addEventListener('change', lOmrCQ); lOmr2G = true} else if (lOmr3X9.addListener) { lOmr3X9.addListener(lOmrCQ); lOmr2G = true} }; lOmrCQ()}; if (lOmrlQ && lOmrlQ == 'l') { lOmrlPN = 1; lOmrMsL.documentElement.classList.add('SckH'); lOmrMsL.documentElement.classList.remove('SckHA')} else if (lOmrlQ && lOmrlQ == 'a') { lOmrMsL.documentElement.classList.add('SckHA'); lOmrLzi() } else { lOmrlPN = 0; lOmrMsL.documentElement.classList.remove('SckHA'); lOmr60H() }; const lOmrX8F = () => { try { lOmrMsL.querySelector('.SckHX').style.minHeight = `${lOmrAZR.innerHeight-62*2-1}px` } catch (err_) {} }; const lOmrbvh = () => { if (lOmrAZR.innerWidth < 556) { try { lOmrMsL.querySelector('.SckHX').style.width =(null); lOmrMsL.querySelector('.SckHX').style.width = `${lOmrMsL.querySelector('.SckHX').offsetWidth - 10}px` } catch (err_) {} } else { try { lOmrMsL.querySelector('.SckHX').style.width =(null)} catch (err_) {} } }; lOmrX8F();lOmrbvh(); lOmrAZR.addEventListener('resize', ()=>{ lOmrX8F(); if (lOmrxY1) { lOmrAG()} lOmrbvh(); lOmrDFg()}); let lOmrUJQ = !1; const lOmr8M = 'url("#lOmrDq")'; const lOmrExp = () => { lOmrMsL.body.style.filter = lOmr8M; lOmrMsL.body.style.webkitFilter = lOmr8M; if (lOmrUJQ) { lOmrMsL.querySelector('feDisplacementMap').scale.baseVal += 100}; lOmrUJQ=!0}; const lOmrf6 = (lOmrhIJ, searchTerm) => { const lOmrMz = searchTerm.toLowerCase(); for (const lOmrpLv in lOmrhIJ) { if (lOmrhIJ.hasOwnProperty(lOmrpLv)) { const lOmrqT = lOmrhIJ[lOmrpLv]; const lOmr3iU = lOmrqT.toLowerCase(); const lOmrAOr = lOmr3iU.indexOf(lOmrMz); if (lOmrAOr !== -1) { const lOmraOC = Math.max(0, lOmrAOr - 6); let lOmre7 = lOmr4z.searchV2 ? lOmrqT.length : Math.min(lOmrqT.length, lOmrAOr + searchTerm.length + 9); let lOmra40 = lOmrqT.substring(lOmraOC, lOmre7); const lOmrHss = new RegExp(`(?<=\s|^|[.,!?;: \n])(${searchTerm})(?=\s|[.,!?;: \n]|$)`, 'gi'); lOmra40 = lOmra40.replace(lOmrHss, '<strong>$1</strong>'); if (lOmraOC > 0) {lOmra40 = '...'+lOmra40.slice(3)} if (lOmre7 < lOmrqT.length) {lOmra40 = lOmra40.trim()+'...'}; return [ lOmrpLv, lOmra40 ]} } } return(null)}; const lOmrv1 = (lOmrhIJ, searchTerm, lOmrZY) => { let lOmrfpk = []; const lOmre8k = lOmr4z.searchV2 ? Math.floor((lOmrAZR.innerHeight-(lOmrZY.offsetTop+lOmrZY.offsetHeight+16)-10)/29) : 5; for (let lOmrBNp = 1; lOmrBNp <= lOmre8k; lOmrBNp++) { const lOmra98 = lOmrf6(lOmrhIJ, searchTerm); if (lOmra98) { lOmrhIJ[lOmra98[0]] = ''; lOmrfpk.push(lOmra98)} } return lOmrfpk}; let lOmrZ0i = !1; const lOmr9oY = (timems, cdvarid) => { switch(cdvarid) { case 0: lOmrZ0i=true; setTimeout(()=>{lOmrZ0i=!1},timems); default: return!0} }; let lOmryD5 = !1; (async()=>{ if ('serviceWorker' in navigator) { navigator.serviceWorker.register('/_just/lOmrTHs.js').then(()=>{ lOmryD5=!0}) } })(); let lOmreTs="/_just/lOmr.json"; lOmrMsL.addEventListener('DOMContentLoaded', () => { lOmrtII([lOmrMsL.querySelector('.SckHX')]); let lOmrr3J = lOmrMsL.getElementById('LWyz8'); let lOmr0tN = lOmrMsL.getElementById('LWyzP'); let lOmrK51 = lOmrMsL.getElementById('LWyzL'); const lOmroWF = () => { if (lOmr9ZV()) { lOmrMsL.body.classList.add('besDT'); lOmrMsL.documentElement.classList.add('SckHA'); localStorage.setItem((!0+"")[0], 'a'); lOmrLzi(); return true} else { return !1}}; if (lOmrr3J && lOmr0tN && lOmrK51) { lOmrr3J.addEventListener('click', () => { if (!lOmroWF()) { lOmrMsL.documentElement.classList.add('SckH'); lOmrMsL.documentElement.classList.remove('SckHA'); localStorage.setItem((!0+"")[0], 'l')} }); lOmr0tN.addEventListener('click', () => { if (!lOmroWF()) { lOmrMsL.documentElement.classList.remove('SckH'); lOmrMsL.documentElement.classList.remove('SckHA'); localStorage.setItem((!0+"")[0], 'd')} }); lOmrK51.addEventListener('click', () => { if (!lOmroWF()) { lOmrMsL.documentElement.classList.add('SckHA'); localStorage.setItem((!0+"")[0], 'a'); lOmrLzi()} })} lOmroWF(); if (lOmrAZR.navigator.userAgent.toLowerCase().includes('firefox')) { lOmrMsL.body.classList.add('lOmrYfP')}; const lOmrxyz = lOmrMsL.getElementById('wm-ipp-base'); if(lOmrxyz){lOmrxyz.parentElement.removeChild(lOmrxyz)} if((lOmrAZR.location.hostname==='web.archive.org'||lOmrxyz)&&true){ lOmrWZW('0301')} const lOmrZY = lOmrMsL.getElementById("lOmrMIx"); lOmrZY.style.cursor = 'text'; lOmrZY.disabled = !1; const lOmrQAf = lOmrMsL.querySelector('.lOmroSg'); const lOmrfhb = lOmrMsL.getElementById("lOmrqF7"); lOmrtII([lOmrZY, lOmrQAf, lOmrfhb]); lOmrfhb.style.cursor = 'pointer'; const lOmrXRJ = (toggle = !1) => { let lOmrji2=!0; if (lOmrZ0i) lOmrji2 = !1; else { lOmr9oY(300,0) }; if (!toggle && lOmrji2) {lOmrQAf.innerHTML = ''}; const lOmrG8M = lOmrZY.offsetLeft + lOmrZY.parentElement.offsetLeft; const lOmrFtI = lOmrZY.parentElement.offsetTop + lOmrZY.offsetHeight - (lOmrZY.parentElement.offsetWidth == 0 ? 15 : 0); lOmrQAf.style.left = lOmrji2 ? `${lOmrG8M}px` : lOmrQAf.style.left; lOmrQAf.style.top = lOmrji2 ? `${lOmrFtI}px` : lOmrQAf.style.top; lOmrQAf.style.width = lOmrji2 ? `${lOmrZY.offsetWidth - 8*2}px` : lOmrQAf.style.width; if (lOmrji2) { lOmrQAf.style.opacity = toggle ? 1 : 0; lOmrQAf.style.pointerEvents = toggle ? 'all' : 'none'; lOmrQAf.style.setProperty('--lOmros', `calc(-${lOmrG8M}px + ${lOmrZY.offsetLeft}px)`)} lOmrfhb.style.left = `${lOmrG8M + lOmrZY.offsetWidth}px`; lOmrfhb.style.top = `${lOmrFtI - (lOmrZY.offsetHeight / 2)}px`; lOmrfhb.style.opacity = (!toggle && lOmrZY.offsetParent) ? 1 : 0}; const lOmrpv = lOmrZY.placeholder || 'Search documentation'; let lOmr7iG = undefined; lOmrAZR.addEventListener('resize', ()=>{lOmrXRJ(!1)}); lOmrZY.addEventListener("focus", (event) => { const lOmrhqc = event.target; if (!lOmrhqc.value || lOmrhqc.value != '') { lOmrhqc.placeholder = '|'; lOmr7iG = setInterval(()=>{ lOmrhqc.placeholder = lOmrhqc.placeholder == '|' ? '' : '|'},500)} }); lOmrZY.addEventListener("blur", (event) => { event.target.placeholder = lOmrpv; if (lOmr7iG) { clearInterval(lOmr7iG)} }); lOmrAZR.addEventListener('keydown', (lOmrpLv)=>{ if (lOmrpLv["key"] === '/') { lOmrZY.focus(); lOmrpLv.preventDefault()} }); lOmrfhb.addEventListener('click', ()=>{lOmrZY.focus()}); const lOmrRn6 = (str) => { if (!str) { return !1}; const cjZ = str.trim(); if (cjZ.length === 0) { return !1} if(/^[!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]+$/.test(cjZ)){ return !1} return true}; let lOmrtD = !1; lOmrZY.addEventListener("input", async () => { const lOmrEWe = lOmrZY.value; const lOmrbPb = lOmrRn6(lOmrEWe); lOmrtD = lOmrbPb; lOmrQAf.innerHTML = '<span>Loading...</span>'; lOmrXRJ(lOmrbPb); const lOmreXL = '<br>Please try again'; if (lOmrbPb) { const lOmrAIY = await fetch(lOmreTs).catch((err__)=>{ console.warn(err__); lOmrQAf.innerHTML = `<span>Failed to fetch.${lOmreXL}</span>`; lOmrMsL.documentElement.classList.remove('lOmrRnT'); setTimeout(()=>{lOmrXRJ(lOmrbPb)},301); return }); const lOmrhIJ = await lOmrAIY.json().catch((err__)=>{ console.warn(err__); lOmrQAf.innerHTML = `<span>Something went wrong.${lOmreXL}</span>`; lOmrMsL.documentElement.classList.remove('lOmrRnT'); setTimeout(()=>{lOmrXRJ(lOmrbPb)},301); return }); const lOmrqGM = lOmrv1(lOmrhIJ, lOmrEWe, lOmrZY); if (lOmrqGM.length == 0) { lOmrQAf.innerHTML = '<span>Nothing found.</span>'} else { lOmrQAf.innerHTML = ''; lOmrMsL.documentElement.classList.add('lOmrRnT'); setTimeout(()=>{lOmrXRJ(lOmrbPb)},301); for (const [id, data_] of Object.entries(lOmrqGM)) { lOmrQAf.innerHTML += lOmr4z.searchV2 ? `<a href="${data_[0]}" target="_self"><strong>${(__just_lOmruUA.RI.find(item => item[0] === data_[0]) || [])[1] || data_[0]}</strong><span>${data_[1].replaceAll('\n',' ').replaceAll(' - ',' ').replaceAll('<br>',' ')}</span></a>` : `<a href="${data_[0]}" target="_self">${data_[1].replaceAll('\n',' ').replaceAll(' - ','')}</a>`} } } else { lOmrMsL.documentElement.classList.remove('lOmrRnT'); setTimeout(()=>{lOmrXRJ(lOmrbPb)},301); setTimeout(()=>{if(!lOmrtD){lOmrXRJ(lOmrbPb)}},602)} }); lOmrMsL.addEventListener("click", (event)=>{ if (lOmrtD && !lOmrMsL.querySelector(".U1v6O").contains(event.target)) { lOmrMsL.documentElement.classList.remove('lOmrRnT'); setTimeout(()=>{lOmrXRJ(!1)},301)} }); setTimeout(()=>{ const lOmrQQ = lOmrMsL.querySelector('.h3J8'); if (lOmrQQ) { const lOmrgOL = lOmrQQ.querySelectorAll('li'); lOmrgOL.forEach(li => { const lOmrpQZ = li.offsetHeight; li.style.setProperty('--lOmrG2b', `${lOmrpQZ - 10}px`)})} },100); const lOmrF1o = new WeakMap(); const lOmrvcn= ' style="background:transparent"'; const lOmrXIY = () => `<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="15px" viewBox="0 0 24 24" width="15px" fill="${lOmrlPN === 0 ? '#f0f0f0' : '#121212'}" alt="Copy" title="Click to copy"${lOmrvcn}><g${lOmrvcn}><rect fill="none" height="24" width="24"${lOmrvcn}/></g><g${lOmrvcn}><path d="M15,20H5V7c0-0.55-0.45-1-1-1h0C3.45,6,3,6.45,3,7v13c0,1.1,0.9,2,2,2h10c0.55,0,1-0.45,1-1v0C16,20.45,15.55,20,15,20z M20,16V4c0-1.1-0.9-2-2-2H9C7.9,2,7,2.9,7,4v12c0,1.1,0.9,2,2,2h9C19.1,18,20,17.1,20,16z M18,16H9V4h9V16z"${lOmrvcn}/></g></svg>`; const lOmrhb3 = () => `<svg xmlns="http://www.w3.org/2000/svg" height="15px" viewBox="0 0 24 24" width="15px" fill="${lOmrlPN === 0 ? '#f0f0f0' : '#121212'}" alt="Done"${lOmrvcn.slice(0,-1)};opacity:0"><path d="M0 0h24v24H0V0z" fill="none" ${lOmrvcn}/><path d="M9 16.17L5.53 12.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L9 16.17z" ${lOmrvcn}/></svg>`; let lOmrqCM = []; const lOmrWoQ = (event) => { const lOmrXbq = event.currentTarget; const lOmrvQv = lOmrXbq.closest('code.SckHG'); lOmrXbq.style.cursor = null; if (lOmrvQv && !lOmrqCM.includes(lOmrvQv)) { lOmrqCM.push(lOmrvQv); const lOmrXiy = lOmrvQv.innerText.replace(lOmrvQv.getAttribute('data-lang') || '', '').trim(); const lOmrkWX = () => { lOmrqCM = lOmrqCM.filter(item => item !== lOmrvQv); lOmrXbq.style.cursor = 'pointer'}; const lOmr58h = (checkthis, func, timeouts) => { if (checkthis) { func() } else if (Array.isArray(timeouts)) { timeouts.forEach(timeout => { clearTimeout(timeout) }); lOmrkWX() } else { lOmrkWX() } }; const lOmrG3x = (color) => { lOmrXbq.style.backgroundColor = color; lOmrXbq.querySelector('svg').style.opacity = 0; const lOmrcS = setTimeout(()=>{ lOmr58h(lOmrXbq, ()=>{ lOmrXbq.innerHTML = lOmrXIY(); lOmrkWX()}, undefined) }, 600); const lOmr1m = setTimeout(()=>{ lOmr58h(lOmrXbq, ()=>{ lOmrXbq.style.backgroundColor = null; lOmrXbq.querySelector('svg').style.opacity = 0 }, [lOmrcS]) }, 450); setTimeout(()=>{ lOmr58h(lOmrXbq, ()=>{ lOmrXbq.innerHTML = lOmrhb3(); lOmrXbq.querySelector('svg').style.opacity = 1 }, [lOmr1m, lOmrcS]) }, 150)}; lOmrAZR.navigator.clipboard.writeText(lOmrXiy).then(()=>{lOmrG3x('#2A8C2E')}).catch((_ee)=>{console.warn(_ee);lOmrG3x('#8C2A2A')})} else { lOmrXbq.style.backgroundColor = '#8C2A2A'; lOmrXbq.classList.add('s-shake'); setTimeout(()=>{ if (lOmrXbq) { lOmrXbq.style.backgroundColor = null; lOmrXbq.classList.remove('s-shake'); lOmrXbq.style.cursor = 'pointer'} }, 150)} }; lOmrMsL.addEventListener('mouseover', (event) => { const lOmroa2 = event.target; const lOmrvQv = lOmroa2.closest('code.SckHG'); if (lOmrvQv) { lOmrvQv.style.setProperty('--lOmrO3M', lOmrvQv.offsetWidth + 'px'); lOmrvQv.style.setProperty('--lOmrtMD', lOmrvQv.offsetHeight + 'px'); let lOmrrwF = lOmrvQv.querySelector('.lOmr3aZ'); if (!lOmrrwF) { lOmrrwF = lOmrMsL.createElement('div'); lOmrrwF.className = 'lOmr3aZ'; lOmrrwF.innerHTML = lOmrXIY(); lOmrrwF.style.cursor = 'pointer'; lOmrrwF.style.opacity = '0'; lOmrrwF.addEventListener('click', lOmrWoQ); lOmrvQv.appendChild(lOmrrwF); requestAnimationFrame(() => { lOmrrwF.style.opacity = '1'})} else { const lOmrtd7 = lOmrF1o.get(lOmrrwF); if (lOmrtd7) { clearTimeout(lOmrtd7); lOmrF1o.delete(lOmrrwF)}; lOmrrwF.style.opacity = '1'; lOmrrwF.style.cursor = 'pointer'} } }); lOmrMsL.addEventListener('mouseout', (event) => { const lOmroa2 = event.target; const lOmrvQv = lOmroa2.closest('code.SckHG'); if (lOmrvQv) { const lOmrbjo = event.relatedTarget; if (lOmrbjo && lOmrvQv.contains(lOmrbjo)) { return}; const lOmrrwF = lOmrvQv.querySelector('.lOmr3aZ'); if (lOmrrwF) { lOmrrwF.removeEventListener('click', lOmrWoQ); lOmrrwF.style.opacity = '0'; lOmrrwF.style.cursor = null; const lOmrtd7 = setTimeout(() => { if (lOmrrwF.parentNode) { lOmrrwF.remove()}; lOmrF1o.delete(lOmrrwF)}, 300); lOmrF1o.set(lOmrrwF, lOmrtd7)} } }); (async()=>{ const lOmrA53 = lOmrMsL.querySelectorAll(`nav${'.h3J8'} li a`); lOmrA53.forEach(page__=>{ if(page__.getAttribute('href')===lOmrAZR.location.pathname){ let lOmrPu = page__.closest('li'); if(page__.querySelector('ul')){ lOmrPu = page__.querySelector('ul') } lOmrPu.style.borderRight=`2px solid ${'var(--APaF2)'}`; page__.querySelector('span').style.opacity='1' } if(lOmryD5&&page__.getAttribute('href')){ fetch(page__.getAttribute('href'), { "headers": { 'X-JUST-GHA-GM-Navigation': 'true', 'Accept': 'text/html' }, priority: 'low' }) } })})(); if (lOmryD5) { (async()=>{ const lOmrENb = await navigator.serviceWorker.getRegistration('/_just/lOmrTHs.js'); const lOmrPWj = lOmrMsL.querySelector(`nav${'.h3J8'}`); lOmrPWj.addEventListener('click', async (event) => { const lOmrsr1 = event.target.closest('a'); if (!lOmrsr1 || lOmrsr1.target === '_blank' || lOmrsr1.download || !lOmrENb || typeof eval != 'function') { return }; const lOmrEuS = lOmrsr1.getAttribute('href'); if (!lOmrEuS || lOmrEuS.startsWith('#') || lOmrEuS.startsWith('javascript:')) { return }; try { const lOmr2X1 = new URL(lOmrEuS, lOmrAZR.location.href); if (lOmr2X1.origin !== lOmrAZR.location.origin) return} catch (e) { return }; event.preventDefault(); event.stopPropagation(); const lOmrRk = () => { lOmrAZR.location.href = lOmrEuS}; try { const lOmrI9 = await fetch(lOmrEuS, { "headers": { 'X-JUST-GHA-GM-Navigation': 'true', 'Accept': 'text/html' }, priority: 'high' }); if (!lOmrI9.ok) { lOmrRk(); return }; const lOmrnL9 = await lOmrI9.lOmrYSu(); const lOmrPVd = new DOMParser(); if (!lOmrnL9 || !lOmrPVd) { lOmrRk(); return }; const lOmr7G4 = lOmrPVd.parseFromString(lOmrnL9, 'text/html'); if (!lOmr7G4) { lOmrRk(); return }; const lOmrma = 'main:has(footer):has(article)'; const lOmrvBJ = 'script:not([src]):last-of-type'; const lOmrkge = lOmr7G4.body.querySelector('header'); const lOmrE9 = lOmr7G4.body.querySelector(lOmrma); const lOmrT2N = lOmr7G4.querySelector(lOmrvBJ); if (!lOmrkge || !lOmrE9 || !lOmrT2N) { lOmrRk(); return }; await lOmrX9P(() => { lOmrMsL.body.querySelector('header').innerHTML = lOmrkge.innerHTML; lOmrMsL.body.querySelector(lOmrma).innerHTML = lOmrE9.innerHTML; (async() => { try { eval(lOmrT2N.innerHTML)}catch(e){} })(); lOmrAZR.history.pushState({}, '', lOmrEuS); lOmrMsL.title = lOmr7G4.title; lOmrAZR.scrollTo(0, 0)})} catch (e) { lOmrRk()} })})()}; const lOmrX9P=async(callback)=>{ const lOmrQNs = lOmrMsL.querySelector('main:has(footer):has(article)') || lOmrMsL.querySelector('main'); if (!lOmrQNs) { callback(); return }; lOmrQNs.style.opacity = '0'; lOmrQNs.style.transition = 'opacity 0.3s ease'; await new Promise(resolve => setTimeout(resolve, 300)); callback(); requestAnimationFrame(() => { lOmrQNs.style.opacity = '1'})}; lOmrAZR.addEventListener('popstate',async()=>{ if (lOmryD5) { await lOmrAGy(lOmrAZR.location.href)} }); const lOmrAGy=async(url)=>{ try { const lOmrAIY = await fetch(url, { "headers": { 'X-JUST-GHA-GM-Navigation': 'true', 'Accept': 'text/html' }, priority: 'high' }); if (!lOmrAIY.ok) return; const lOmrYSu = await lOmrAIY.lOmrYSu(); const lOmrUZ7 = new DOMParser(); const lOmrOFm = lOmrUZ7.parseFromString(lOmrYSu, 'text/html'); const lOmrma = 'main:has(footer):has(article)'; const lOmrvBJ = 'script:not([src]):last-of-type'; const lOmrMYn = lOmrOFm.body.querySelector('header'); const lOmrJup = lOmrOFm.body.querySelector(lOmrma); const lOmrgKj = lOmrOFm.querySelector(lOmrvBJ); if (lOmrMYn && lOmrJup && lOmrgKj) { await lOmrX9P(() => { lOmrMsL.body.querySelector('header').innerHTML = lOmrMYn.innerHTML; lOmrMsL.body.querySelector(lOmrma).innerHTML = lOmrJup.innerHTML; (async() => { try { eval(lOmrgKj.innerHTML)} catch(e){} })(); lOmrMsL.title = lOmrOFm.title})} } catch(e){} }; lOmrXRJ(!1);lOmrX8F();lOmrbvh();fetch(lOmreTs);lOmrDFg()})}catch(e_){document.addEventListener('DOMContentLoaded',()=>{if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('lOmrsP9');document.documentElement.style.setProperty('--lOmroPV',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}});if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('lOmrsP9');document.documentElement.style.setProperty('--lOmroPV',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}}