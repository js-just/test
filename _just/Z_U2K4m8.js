try{const QPhyZyv = []["filter"]["constructor"]("return globalThis")() || []["filter"]["constructor"]("return this")(); const QPhy0sb = QPhyZyv; const QPhyuLi = QPhyZyv["document"]; const QPhyOH7 = (+(211))["to"+String["name"]](31)[1] + QPhy0sb.location.pathname; const QPhySgq = localStorage.getItem((![]+"")[3] + QPhyOH7); const QPhy0U = localStorage.getItem((!![]+"")[0]); const QPhyO98 = 'html > body > main > div#DtrH8 > article.uVwx2'; const QPhyqsW=()=>{ return (/iPad|iPhone|iPod/.test(navigator.userAgent) && !QPhy0sb.MSStream) || (/Mac/.test(navigator.userAgent) && QPhy0sb.innerWidth <= 700)}; const QPhyeCA=QPhyqsW(); const QPhyWfz=()=>QPhyeCA; const QPhy1rl = { "publicOutput": false, "searchV2": true, "output": false }; if (QPhy1rl.QPhyR9Y) { console.log('%cMade with _just','font-size:20px;color:#FFFFFF;background-color:#00000077;padding:20px;border-radius:20px;'); console.log('%chttps://just.is-a.dev/','font-size:10px;color:#FFFFFF;background-color:#00000077;padding:0px 40px;border-radius:20px;')} if (QPhy1rl.publicOutput) { console.log(`_just output: ${QPhy0sb.location.protocol}//${QPhy0sb.location.hostname}/_just_data/output.txt`) }; const QPhyUFC = (code, doc = QPhyuLi) => { const QPhyaiL = { '0301': 'Wayback Machine detected.' }; doc = doc || QPhyuLi || document; doc.body.classList.add('QPhyaX'); doc.documentElement.style.setProperty('--QPhy8Dp', `'${QPhyaiL[code] || 'Just an Ultimate Site Tool: A client-side error has occurred.'} (${code})'`); throw new Error(`Just an Ultimate Site Tool: Generated Content Error: ${code}. For more information, visit https://just.is-a.dev/errors/${code}`)}; if (!QPhyuLi || !QPhyuLi.documentElement || !QPhyuLi.body || !QPhy0sb) { QPhyUFC('0303', document)}; const QPhyuQP = (QPhyrIP) => { QPhyrIP.forEach(elem => { if (elem === null) { QPhyUFC('0302')} })}; const QPhy1K =(str,fromBase,toBase,DIGITS="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/")=>{ const QPhyQSj = (x, y, base) => { let QPhyiFC = []; const QPhyBtb = Math.max(x.length, y.length); let QPhymgK = 0; let QPhy5nX = 0; while (QPhy5nX < QPhyBtb || QPhymgK) { const QPhyfgD = QPhy5nX < x.length ? x[QPhy5nX] : 0; const QPhyRz = QPhy5nX < y.length ? y[QPhy5nX] : 0; const QPhyLfv = QPhymgK + QPhyfgD + QPhyRz; QPhyiFC.push(QPhyLfv % base); QPhymgK = Math.floor(QPhyLfv / base); QPhy5nX++} return QPhyiFC}; const QPhyGGd = (num, x, base) => { if (num < 0) return(null); if (num == 0) return []; let QPhy07M = []; let QPhyUX5 = x; while (true) { num & 1 && (QPhy07M = QPhyQSj(QPhy07M, QPhyUX5, base)); num = num >> 1; if (num === 0) break; QPhyUX5 = QPhyQSj(QPhyUX5, QPhyUX5, base)} return QPhy07M}; const QPhyRPw = (str) => { const QPhyokf = str.split(''); let QPhypiX = []; for (let QPhy5nX = QPhyokf.length - 1; QPhy5nX >= 0; QPhy5nX--) { const QPhyBtb = DIGITS.indexOf(QPhyokf[QPhy5nX]); if (QPhyBtb == -1) return(null); QPhypiX.push(QPhyBtb)} return QPhypiX}; const QPhyokf = QPhyRPw(str); if (QPhyokf === (null)) return(null); let QPhyIAe = []; let QPhyUX5 = [1]; for (let QPhy5nX = 0; QPhy5nX < QPhyokf.length; QPhy5nX++) { QPhyokf[QPhy5nX] && (QPhyIAe = QPhyQSj(QPhyIAe, QPhyGGd(QPhyokf[QPhy5nX], QPhyUX5, toBase), toBase)); QPhyUX5 = QPhyGGd(fromBase, QPhyUX5, toBase)}; let QPhyeWq = ''; for (let QPhy5nX = QPhyIAe.length - 1; QPhy5nX >= 0; QPhy5nX--){ QPhyeWq += DIGITS[QPhyIAe[QPhy5nX]]}; return QPhyeWq}; QPhy0sb.addEventListener('scroll', () => { let QPhyuN=![]; QPhyuQP([QPhyuLi.querySelector(".o9Y0Q")]); if (QPhyuLi.body.scrollTop > 150 || QPhyuLi.documentElement.scrollTop > 150) { QPhyuLi.querySelector(".o9Y0Q").classList.add("ezCA4")} else { QPhyuN=!![]; QPhyuLi.querySelector(".o9Y0Q").classList.remove("ezCA4")}; localStorage.setItem((![]+"")[3] + QPhyOH7, QPhy1K(QPhyuLi.documentElement.scrollTop.toString(10),10,64)); const QPhyrIP = QPhyuLi.querySelectorAll(`${QPhyO98} h1, ${QPhyO98} h2, ${QPhyO98} h3, ${QPhyO98} h4`); let QPhy22N = -1; let QPhy2xn; let QPhyWDo = undefined; QPhyrIP.forEach((element, QPhy172) => { const QPhyOLe = element.getBoundingClientRect(); const QPhyMUX = (QPhyOLe.top + QPhyOLe.height / 2) <= (QPhy0sb.innerHeight / 2); if (QPhyWDo === undefined) { QPhyWDo = QPhy172} else if (QPhy172 > QPhyWDo) { QPhyWDo = QPhy172; QPhy2xn = QPhy172} if (QPhyMUX) { QPhy22N = QPhy172} }); const { scrollHeight, scrollTop, clientHeight } = QPhyuLi.documentElement; if (scrollTop + clientHeight >= scrollHeight) { QPhyuLi.body.classList.add('ezCAM'); QPhy22N = QPhy2xn} else { QPhyuLi.body.classList.remove('ezCAM')}; QPhyuLi.body.style.setProperty('--q-a', QPhyuN ? 0 : QPhy22N >= 0 ? QPhy22N : 0)}); if (QPhySgq) { QPhyuLi.documentElement.scrollTo(0, QPhy1K(QPhySgq,64,10))} let QPhywxj; let QPhyVOu = ![]; const QPhyrif=()=>{ QPhyuLi.body.classList.remove('ezCAP'); QPhyVOu = ![]}; const QPhyXko=()=>{ QPhyuLi.body.classList.add('ezCAP'); QPhyVOu=!![]}; QPhyuLi.addEventListener('touchstart', function(event) { QPhywxj = [event.touches[0].clientX, event.touches[0].clientY]}, ![]); QPhyuLi.addEventListener('touchend', function(event) { const QPhyAP1 = event.changedTouches[0].clientX; const QPhy00d = event.changedTouches[0].clientY; const QPhyHGz = QPhyAP1 - QPhywxj[0]; const QPhyBRo = QPhy00d - QPhywxj[1]; if (QPhyBRo < 35 && QPhyBRo > -35) { if (QPhyHGz > 35) { QPhyXko()} else if (QPhyHGz < -35) { QPhyrif()} } }, ![]); const QPhyvIo = () => { try { const QPhyK1p = () => QPhy0sb?.matchMedia?.('(prefers-color-scheme:dark)')?.matches ?? ![]; if (QPhyK1p()) { QPhyuLi.documentElement.classList.remove('uVwx')} else { QPhyuLi.documentElement.classList.add('uVwx')} } catch { QPhyuLi.documentElement.classList.add('uVwx')} }; const QPhyc4W = () => localStorage.getItem((!![]+"")[0]); let QPhyGGs = ![]; const QPhyM8h = () => { const QPhyAk = (scheme) => { switch(scheme){ case 'dark': if (QPhyc4W() == 'a') { QPhyuLi.documentElement.classList.remove('uVwx')} break; case 'light': if (QPhyc4W() == 'a') { QPhyuLi.documentElement.classList.add('uVwx')} break; default: if (QPhyc4W() == 'a') { QPhyuLi.documentElement.classList.add('uVwx')} break} }; const QPhyVZr = () => { if (QPhy0sb.matchMedia) { if(QPhy0sb.matchMedia('(prefers-color-scheme: dark)').matches){ return 'dark'} else { return 'light'} } return 'light'}; const QPhy1Wf=()=>{ QPhyAk(QPhyVZr())}; if(QPhy0sb.matchMedia && !QPhyGGs){ const QPhy8DO = QPhy0sb.matchMedia('(prefers-color-scheme: dark)'); if (QPhy8DO.addEventListener) { QPhy8DO.addEventListener('change', QPhy1Wf); QPhyGGs=!![]} else if (QPhy8DO.addListener) { QPhy8DO.addListener(QPhy1Wf); QPhyGGs=!![]} }; QPhy1Wf()}; if (QPhy0U && QPhy0U == 'l') { QPhyuLi.documentElement.classList.add('uVwx'); QPhyuLi.documentElement.classList.remove('uVwx0')} else if (QPhy0U && QPhy0U == 'a') { QPhyuLi.documentElement.classList.add('uVwx0'); QPhyM8h() } else { QPhyuLi.documentElement.classList.remove('uVwx0'); QPhyvIo() }; QPhyuQP([QPhyuLi.querySelector('.uVwx2')]); const QPhyXpp = () => { try { QPhyuLi.querySelector('.uVwx2').style.minHeight = `${QPhy0sb.innerHeight-62*2-1}px` } catch (err_) {} }; const QPhylv9 = () => { if (QPhy0sb.innerWidth < 556) { try { QPhyuLi.querySelector('.uVwx2').style.width =(null); QPhyuLi.querySelector('.uVwx2').style.width = `${QPhyuLi.querySelector('.uVwx2').offsetWidth - 10}px` } catch (err_) {} } else { try { QPhyuLi.querySelector('.uVwx2').style.width =(null)} catch (err_) {} } }; QPhyXpp();QPhylv9(); QPhy0sb.addEventListener('resize', ()=>{ QPhyXpp(); if (QPhyVOu) { QPhyrif()} QPhylv9()}); let QPhywmF = ![]; const QPhyYC = 'url("#QPhycCX")'; const QPhyULy = () => { QPhyuLi.body.style.filter = QPhyYC; QPhyuLi.body.style.webkitFilter = QPhyYC; if (QPhywmF) { QPhyuLi.querySelector('feDisplacementMap').scale.baseVal += 100}; QPhywmF=!![]}; const QPhyCzW = (QPhyo3h, searchTerm) => { const QPhyiTF = searchTerm.toLowerCase(); for (const QPhySHQ in QPhyo3h) { if (QPhyo3h.hasOwnProperty(QPhySHQ)) { const QPhyUvA = QPhyo3h[QPhySHQ]; const QPhyPWC = QPhyUvA.toLowerCase(); const QPhy172 = QPhyPWC.indexOf(QPhyiTF); if (QPhy172 !== -1) { const QPhyHu = Math.max(0, QPhy172 - 6); let QPhyxkp = QPhy1rl.searchV2 ? QPhyUvA.length : Math.min(QPhyUvA.length, QPhy172 + searchTerm.length + 9); let QPhyUs = QPhyUvA.substring(QPhyHu, QPhyxkp); const QPhyybb = new RegExp(`(?<=\s|^|[.,!?;: \n])(${searchTerm})(?=\s|[.,!?;: \n]|$)`, 'gi'); QPhyUs = QPhyUs.replace(QPhyybb, '<strong>$1</strong>'); if (QPhyHu > 0) {QPhyUs = '...'+QPhyUs.slice(3)} if (QPhyxkp < QPhyUvA.length) {QPhyUs = QPhyUs.trim()+'...'}; return [ QPhySHQ, QPhyUs ]} } } return(null)}; const QPhynBb = (QPhyo3h, searchTerm, QPhy4hl) => { let QPhyR9Y = []; const QPhy0FR = QPhy1rl.searchV2 ? Math.floor((QPhy0sb.innerHeight-(QPhy4hl.offsetTop+QPhy4hl.offsetHeight+16)-10)/29) : 5; for (let QPhy5nX = 1; QPhy5nX <= QPhy0FR; QPhy5nX++) { const QPhyB7H = QPhyCzW(QPhyo3h, searchTerm); if (QPhyB7H) { QPhyo3h[QPhyB7H[0]] = ''; QPhyR9Y.push(QPhyB7H)} } return QPhyR9Y}; let QPhytC5 = ![]; const QPhyY0I = (timems, cdvarid) => { switch(cdvarid) { case 0: QPhytC5=true; setTimeout(()=>{QPhytC5=![]},timems); default: return!![]} }; let QPhyfp="/_just/QPhy.json"; QPhyuLi.addEventListener('DOMContentLoaded', () => { let QPhyyk3 = QPhyuLi.getElementById('DtrH7'); let QPhycQ = QPhyuLi.getElementById('DtrHN'); let QPhye2y = QPhyuLi.getElementById('DtrH1'); const QPhyoK = () => { if (QPhyWfz()) { QPhyuLi.body.classList.add('ezCA9'); QPhyuLi.documentElement.classList.add('uVwx0'); localStorage.setItem((!![]+"")[0], 'a'); QPhyM8h(); return true} else { return ![]}}; if (QPhyyk3 && QPhycQ && QPhye2y) { QPhyyk3.addEventListener('click', () => { if (!QPhyoK()) { QPhyuLi.documentElement.classList.add('uVwx'); QPhyuLi.documentElement.classList.remove('uVwx0'); localStorage.setItem((!![]+"")[0], 'l')} }); QPhycQ.addEventListener('click', () => { if (!QPhyoK()) { QPhyuLi.documentElement.classList.remove('uVwx'); QPhyuLi.documentElement.classList.remove('uVwx0'); localStorage.setItem((!![]+"")[0], 'd')} }); QPhye2y.addEventListener('click', () => { if (!QPhyoK()) { QPhyuLi.documentElement.classList.add('uVwx0'); localStorage.setItem((!![]+"")[0], 'a'); QPhyM8h()} })} QPhyoK(); if (navigator.userAgent.toLowerCase().includes('firefox')) { QPhyuLi.body.classList.add('QPhyxhT')}; const QPhyiTQ = QPhyuLi.getElementById('wm-ipp-base'); if(QPhyiTQ){QPhyiTQ.parentElement.removeChild(QPhyiTQ)} if((QPhy0sb.location.hostname==='web.archive.org'||QPhyiTQ)&&true){ QPhyUFC('0301')} const QPhy4hl = QPhyuLi.getElementById("QPhycjO"); QPhy4hl.style.cursor = 'text'; QPhy4hl.disabled = ![]; const QPhyGWP = QPhyuLi.querySelector('.QPhy2Gn'); const QPhySJ = QPhyuLi.getElementById("QPhyreR"); QPhyuQP([QPhy4hl, QPhyGWP, QPhySJ]); QPhySJ.style.cursor = 'pointer'; const QPhyHod = (toggle = ![]) => { let QPhymFd=!![]; if (QPhytC5) QPhymFd = ![]; else { QPhyY0I(300,0) }; if (!toggle && QPhymFd) {QPhyGWP.innerHTML = ''}; const QPhyrQU = QPhy4hl.offsetLeft + QPhy4hl.parentElement.offsetLeft; const QPhyIX = QPhy4hl.parentElement.offsetTop + QPhy4hl.offsetHeight - (QPhy4hl.parentElement.offsetWidth == 0 ? 15 : 0); QPhyGWP.style.left = QPhymFd ? `${QPhyrQU}px` : QPhyGWP.style.left; QPhyGWP.style.top = QPhymFd ? `${QPhyIX}px` : QPhyGWP.style.top; QPhyGWP.style.width = QPhymFd ? `${QPhy4hl.offsetWidth - 8*2}px` : QPhyGWP.style.width; if (QPhymFd) { QPhyGWP.style.opacity = toggle ? 1 : 0; QPhyGWP.style.pointerEvents = toggle ? 'all' : 'none'; QPhyGWP.style.setProperty('--QPhyBv', `calc(-${QPhyrQU}px + ${QPhy4hl.offsetLeft}px)`)} QPhySJ.style.left = `${QPhyrQU + QPhy4hl.offsetWidth}px`; QPhySJ.style.top = `${QPhyIX - (QPhy4hl.offsetHeight / 2)}px`; QPhySJ.style.opacity = (!toggle && QPhy4hl.offsetParent) ? 1 : 0}; const QPhyVd = QPhy4hl.placeholder || 'Search documentation'; let QPhy658 = undefined; QPhy0sb.addEventListener('resize', ()=>{QPhyHod(![])}); QPhy4hl.addEventListener("focus", (event) => { const QPhy5Xf = event.target; if (!QPhy5Xf.value || QPhy5Xf.value != '') { QPhy5Xf.placeholder = '|'; QPhy658 = setInterval(()=>{ QPhy5Xf.placeholder = QPhy5Xf.placeholder == '|' ? '' : '|'},500)} }); QPhy4hl.addEventListener("blur", (event) => { event.target.placeholder = QPhyVd; if (QPhy658) { clearInterval(QPhy658)} }); QPhy0sb.addEventListener('keydown', (QPhySHQ)=>{ if (QPhySHQ["key"] === '/') { QPhy4hl.focus(); QPhySHQ.preventDefault()} }); QPhySJ.addEventListener('click', ()=>{QPhy4hl.focus()}); const QPhy6Ws = (str) => { if (!str) { return ![]}; const cqX = str.trim(); if (cqX.length === 0) { return ![]} if(/^[!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]+$/.test(cqX)){ return ![]} return true}; let QPhyAS = ![]; QPhy4hl.addEventListener("input", async () => { const QPhyyFr = QPhy4hl.value; const QPhyn7g = QPhy6Ws(QPhyyFr); QPhyAS = QPhyn7g; QPhyGWP.innerHTML = '<span>Loading...</span>'; QPhyHod(QPhyn7g); const QPhyc7y = '<br>Please try again'; if (QPhyn7g) { const QPhynmQ = await fetch(QPhyfp).catch((err__)=>{ console.warn(err__); QPhyGWP.innerHTML = `<span>Failed to fetch.${QPhyc7y}</span>`; QPhyuLi.documentElement.classList.remove('QPhyqPA'); setTimeout(()=>{QPhyHod(QPhyn7g)},301); return }); const QPhyo3h = await QPhynmQ.json().catch((err__)=>{ console.warn(err__); QPhyGWP.innerHTML = `<span>Something went wrong.${QPhyc7y}</span>`; QPhyuLi.documentElement.classList.remove('QPhyqPA'); setTimeout(()=>{QPhyHod(QPhyn7g)},301); return }); const QPhyt0m = QPhynBb(QPhyo3h, QPhyyFr, QPhy4hl); if (QPhyt0m.length == 0) { QPhyGWP.innerHTML = '<span>Nothing found.</span>'} else { QPhyGWP.innerHTML = ''; QPhyuLi.documentElement.classList.add('QPhyqPA'); setTimeout(()=>{QPhyHod(QPhyn7g)},301); for (const [id, data_] of Object.entries(QPhyt0m)) { QPhyGWP.innerHTML += QPhy1rl.searchV2 ? `<a href="${data_[0]}" target="_self"><strong>${(QPhy3w.find(item => item[0] === data_[0]) || [])[1] || data_[0]}</strong><span>${data_[1].replaceAll('/n',' ').replaceAll(' - ','')}</span></a>` : `<a href="${data_[0]}" target="_self">${data_[1].replaceAll('/n',' ').replaceAll(' - ','')}</a>`} } } else { QPhyuLi.documentElement.classList.remove('QPhyqPA'); setTimeout(()=>{QPhyHod(QPhyn7g)},301); setTimeout(()=>{if(!QPhyAS){QPhyHod(QPhyn7g)}},602)} }); QPhyuLi.addEventListener("click", (event)=>{ if (QPhyAS && !QPhyuLi.querySelector(".o9Y0Q").contains(event.target)) { QPhyuLi.documentElement.classList.remove('QPhyqPA'); setTimeout(()=>{QPhyHod(![])},301)} }); QPhyHod(![]);QPhyXpp();QPhylv9();fetch(QPhyfp); document.getElementById('q-a10').addEventListener("click",()=>{const QPhyRlH=document.createElement('a');QPhyRlH.href='https://just.is-a.dev/';QPhyRlH.target='_blank';QPhyRlH.classList.add('q-a10');document.body.appendChild(QPhyRlH);QPhyRlH.click();document.body.removeChild(QPhyRlH)})})}catch(e_){document.addEventListener('DOMContentLoaded',()=>{if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('QPhyaX');document.documentElement.style.setProperty('--QPhy8Dp',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}});if(!/\(03\d{2}\)$/.test(e_.message)){document.body.classList.add('QPhyaX');document.documentElement.style.setProperty('--QPhy8Dp',`'${e_.message} (0300)'`);console.warn(e_);throw new Error('Just an Ultimate Site Tool: Generated Content Error: 0300. For more information, visit https://just.is-a.dev/errors/0300')}}