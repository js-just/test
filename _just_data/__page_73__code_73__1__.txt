&lt;h1&gt;MIT License&lt;/h1&gt;
&lt;h1&gt;# Copyright (c) 2025 JustStudio. &lt;a href=<span class="hljs-string">&quot;https://juststudio.is-a.dev/&quot;</span> target=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;rGbS9&quot;</span>&gt;https://juststudio.is-a.dev/&lt;/a&gt;&lt;/h1&gt;
&lt;h1&gt;# Permission is hereby granted, free of charge, to any person obtaining a copy&lt;/h1&gt;
&lt;h1&gt;of this software and associated documentation files (the <span class="hljs-string">&quot;Software&quot;</span>), to deal&lt;/h1&gt;
&lt;h1&gt;<span class="hljs-keyword">in</span> the Software without restriction, including without limitation the rights&lt;/h1&gt;
&lt;h1&gt;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&lt;/h1&gt;
&lt;h1&gt;copies of the Software, and to permit persons to whom the Software is&lt;/h1&gt;
&lt;h1&gt;furnished to <span class="hljs-keyword">do</span> so, subject to the following conditions:&lt;/h1&gt;
&lt;h1&gt;# The above copyright notice and this permission notice shall be included <span class="hljs-keyword">in</span> all&lt;/h1&gt;
&lt;h1&gt;copies or substantial portions of the Software.&lt;/h1&gt;
&lt;h1&gt;# THE SOFTWARE IS PROVIDED <span class="hljs-string">&quot;AS IS&quot;</span>, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&lt;/h1&gt;
&lt;h1&gt;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&lt;/h1&gt;
&lt;h1&gt;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&lt;/h1&gt;
&lt;h1&gt;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&lt;/h1&gt;
&lt;h1&gt;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&lt;/h1&gt;
&lt;h1&gt;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&lt;/h1&gt;
&lt;h1&gt;SOFTWARE.&lt;/h1&gt;
&lt;h1&gt;Modify Deployment&lt;/h1&gt;
<span class="hljs-built_in">source</span> <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/modules/errmsg.sh
<span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;deploy/_just&quot;</span> ]; <span class="hljs-keyword">then</span>
  <span class="hljs-built_in">local</span> ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;postprocessor/modify_deployment.sh&quot;</span> <span class="hljs-string">&quot;0103&quot;</span>)
  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
<span class="hljs-keyword">fi</span>
<span class="hljs-built_in">mkdir</span> -p deploy/_just/

<span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;_just/dangerously-insert-files/_just&quot;</span> ]; <span class="hljs-keyword">then</span>
  <span class="hljs-built_in">local</span> ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;postprocessor/modify_deployment.sh&quot;</span> <span class="hljs-string">&quot;0104&quot;</span>)
  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
<span class="hljs-keyword">fi</span>
<span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;_just/dangerously-insert-files/_next&quot;</span> ]; <span class="hljs-keyword">then</span>
  <span class="hljs-built_in">local</span> ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;postprocessor/modify_deployment.sh&quot;</span> <span class="hljs-string">&quot;0105&quot;</span>)
  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
<span class="hljs-keyword">fi</span>

<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;&amp;#110;----------------&amp;#110;&amp;#110;_just Chunks:&amp;#110;&quot;</span>

<span class="hljs-built_in">source</span> <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/modules/string.sh

<span class="hljs-built_in">mkdir</span> -p _just/dangerously-insert-files/_just/
merged_data=($(generate_strings 1 16))
merged_name=<span class="hljs-variable">${merged_data[0]}</span>
<span class="hljs-built_in">mkdir</span> -p _just/dangerously-insert-files/_just/<span class="hljs-variable">$merged_name</span>/
merged_file=<span class="hljs-string">&quot;_just/dangerously-insert-files/_just/<span class="hljs-variable">$merged_name</span>/merged.js&quot;</span>
&lt;blockquote&gt;<span class="hljs-string">&quot;<span class="hljs-variable">$merged_file</span>&quot;</span>&lt;/blockquote&gt;
<span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> _just/js/*; <span class="hljs-keyword">do</span>
  file_size=$(<span class="hljs-built_in">stat</span> -c%s <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)
  <span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$file_size</span> -gt 51200 ]]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$merged_file</span>&quot;</span>

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;&amp;#110;&quot;</span> &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$merged_file</span>&quot;</span>
  <span class="hljs-keyword">fi</span>
<span class="hljs-keyword">done</span>

<span class="hljs-keyword">while</span> [[ $(<span class="hljs-built_in">stat</span> -c%s <span class="hljs-string">&quot;<span class="hljs-variable">$merged_file</span>&quot;</span>) -lt 131072 ]]; <span class="hljs-keyword">do</span>
  largest_file=$(<span class="hljs-built_in">ls</span> -S _just/js/* | <span class="hljs-built_in">head</span> -n 1)
  <span class="hljs-keyword">if</span> [[ -z <span class="hljs-string">&quot;<span class="hljs-variable">$largest_file</span>&quot;</span> ]]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">break</span>
  <span class="hljs-keyword">fi</span>
  <span class="hljs-keyword">if</span> grep -q <span class="hljs-string">&quot;<span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$largest_file</span>&quot;</span>)</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$merged_file</span>&quot;</span>; <span class="hljs-keyword">then</span>

 sed -i <span class="hljs-string">&quot;/<span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$largest_file</span>&quot;</span>)</span>/d&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$merged_file</span>&quot;</span>
  <span class="hljs-keyword">else</span>

 <span class="hljs-built_in">break</span>
  <span class="hljs-keyword">fi</span>
<span class="hljs-keyword">done</span>

<span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> _just/js/*; <span class="hljs-keyword">do</span>
  first_line=$(<span class="hljs-built_in">head</span> -n 1 <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)
  <span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$first_line</span> == <span class="hljs-string">&quot;// _just ignore&quot;</span>* ]]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">continue</span>
  <span class="hljs-keyword">fi</span>
  <span class="hljs-keyword">if</span> [[ ! -f <span class="hljs-string">&quot;<span class="hljs-variable">$merged_file</span>&quot;</span> || $(<span class="hljs-built_in">stat</span> -c%s <span class="hljs-string">&quot;<span class="hljs-variable">$merged_file</span>&quot;</span>) -lt 131072 ]]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> <span class="hljs-string">&quot;_just/js/<span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)</span>&quot;</span>
  <span class="hljs-keyword">fi</span>
<span class="hljs-keyword">done</span>

<span class="hljs-built_in">mkdir</span> -p _just_data/_just/

TOTAL_FILES_JS=0
<span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> _just/js/*; <span class="hljs-keyword">do</span>
  TOTAL_FILES_JS=$((TOTAL_FILES_JS + <span class="hljs-number">1</span>))
<span class="hljs-keyword">done</span>
random_strings_js=($(generate_strings <span class="hljs-variable">$TOTAL_FILES_JS</span> 14))
FILE_ID=1
<span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> _just/js/*; <span class="hljs-keyword">do</span>
  first_line=$(<span class="hljs-built_in">head</span> -n 1 <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)
  <span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$first_line</span> == <span class="hljs-string">&quot;// _just ignore&quot;</span>* ]]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">continue</span>
  <span class="hljs-keyword">fi</span>
  FILE_ID_M1=$((FILE_ID - <span class="hljs-number">1</span>))
  FILE_NAME=<span class="hljs-variable">${random_strings_js[$FILE_ID_M1]}</span>
  <span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> <span class="hljs-string">&quot;deploy/_just/<span class="hljs-variable">${FILE_NAME}</span><span class="hljs-variable">${FILE_ID}</span>.js&quot;</span>
  <span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> <span class="hljs-string">&quot;_just_data/_just/<span class="hljs-variable">${FILE_NAME}</span><span class="hljs-variable">${FILE_ID}</span>.js&quot;</span>
  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;_just/<span class="hljs-variable">${FILE_NAME}</span><span class="hljs-variable">${FILE_ID}</span>.js&quot;</span>
  FILE_ID=$((FILE_ID + <span class="hljs-number">1</span>))
<span class="hljs-keyword">done</span>

TOTAL_FILES_CSS=0
<span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> _just/style/*; <span class="hljs-keyword">do</span>
  TOTAL_FILES_CSS=$((TOTAL_FILES_CSS + <span class="hljs-number">1</span>))
<span class="hljs-keyword">done</span>
random_strings_css=($(generate_strings <span class="hljs-variable">$TOTAL_FILES_CSS</span> 14))
FILE_ID=1
<span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> _just/style/*; <span class="hljs-keyword">do</span>
  FILE_ID_M1=$((FILE_ID - <span class="hljs-number">1</span>))
  FILE_NAME=<span class="hljs-variable">${random_strings_css[$FILE_ID_M1]}</span>
  <span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> <span class="hljs-string">&quot;deploy/_just/<span class="hljs-variable">${FILE_NAME}</span><span class="hljs-variable">${FILE_ID}</span>.css&quot;</span>
  <span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> <span class="hljs-string">&quot;_just_data/_just/<span class="hljs-variable">${FILE_NAME}</span><span class="hljs-variable">${FILE_ID}</span>.css&quot;</span>
  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;_just/<span class="hljs-variable">${FILE_NAME}</span><span class="hljs-variable">${FILE_ID}</span>.css&quot;</span>
  FILE_ID=$((FILE_ID + <span class="hljs-number">1</span>))
<span class="hljs-keyword">done</span>

<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;&amp;#110;End _just Chunks&amp;#110;&quot;</span>
<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;----------------&amp;#110;&quot;</span>
<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;&amp;#110;----------------&amp;#110;&amp;#110;Dangerously Inserted Files:&amp;#110;&quot;</span>

find _just/dangerously-insert-files/ -<span class="hljs-built_in">type</span> f | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> -r file; <span class="hljs-keyword">do</span>
  relative_path=<span class="hljs-string">&quot;<span class="hljs-variable">${file#_just/dangerously-insert-files/}</span>&quot;</span>
  target_dir=<span class="hljs-string">&quot;deploy/<span class="hljs-subst">$(dirname <span class="hljs-string">&quot;<span class="hljs-variable">$relative_path</span>&quot;</span>)</span>&quot;</span>
  target_dir2=<span class="hljs-string">&quot;_just_data/<span class="hljs-subst">$(dirname <span class="hljs-string">&quot;<span class="hljs-variable">$relative_path</span>&quot;</span>)</span>&quot;</span>
  <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$target_dir</span>&quot;</span>
  <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$target_dir2</span>&quot;</span>
  <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$target_dir</span>/<span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)</span>&quot;</span> ]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Warning: Failed to insert file &amp;#34;<span class="hljs-variable">$target_dir</span>/<span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)</span>&amp;#34;.&quot;</span>
  <span class="hljs-keyword">fi</span>
  <span class="hljs-keyword">if</span> [ ! -f <span class="hljs-string">&quot;<span class="hljs-variable">$target_dir</span>/<span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)</span>&quot;</span> ]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$target_dir</span>/<span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)</span>&quot;</span>

 <span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$target_dir2</span>/<span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)</span>&quot;</span>

 <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$target_dir</span>/<span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>)</span>&quot;</span>
  <span class="hljs-keyword">fi</span>
<span class="hljs-keyword">done</span>

<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;&amp;#110;End Dangerously Inserted Files&amp;#110;&quot;</span>
<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;----------------&amp;#110;&quot;</span>

