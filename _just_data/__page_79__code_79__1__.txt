&lt;h1&gt;MIT License&lt;/h1&gt;
&lt;h1&gt;# Copyright (c) 2025 JustStudio. &lt;a href=<span class="hljs-string">&quot;https://juststudio.is-a.dev/&quot;</span> target=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;rGbS9&quot;</span>&gt;https://juststudio.is-a.dev/&lt;/a&gt;&lt;/h1&gt;
&lt;h1&gt;# Permission is hereby granted, free of charge, to any person obtaining a copy&lt;/h1&gt;
&lt;h1&gt;of this software and associated documentation files (the <span class="hljs-string">&quot;Software&quot;</span>), to deal&lt;/h1&gt;
&lt;h1&gt;<span class="hljs-keyword">in</span> the Software without restriction, including without limitation the rights&lt;/h1&gt;
&lt;h1&gt;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&lt;/h1&gt;
&lt;h1&gt;copies of the Software, and to permit persons to whom the Software is&lt;/h1&gt;
&lt;h1&gt;furnished to <span class="hljs-keyword">do</span> so, subject to the following conditions:&lt;/h1&gt;
&lt;h1&gt;# The above copyright notice and this permission notice shall be included <span class="hljs-keyword">in</span> all&lt;/h1&gt;
&lt;h1&gt;copies or substantial portions of the Software.&lt;/h1&gt;
&lt;h1&gt;# THE SOFTWARE IS PROVIDED <span class="hljs-string">&quot;AS IS&quot;</span>, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&lt;/h1&gt;
&lt;h1&gt;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&lt;/h1&gt;
&lt;h1&gt;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&lt;/h1&gt;
&lt;h1&gt;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&lt;/h1&gt;
&lt;h1&gt;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&lt;/h1&gt;
&lt;h1&gt;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&lt;/h1&gt;
&lt;h1&gt;SOFTWARE.&lt;/h1&gt;
<span class="hljs-comment">#!/bin/bash</span>
ERRORS_FILE=<span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/data/codes.json&quot;</span>
CONFIG_FILE=<span class="hljs-string">&quot;just.config.js&quot;</span>
CONFIG_DATA=<span class="hljs-string">&quot;just.config.json&quot;</span>
<span class="hljs-built_in">source</span> <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/modules/errmsg.sh
<span class="hljs-built_in">source</span> <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/modules/color.sh
<span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_PATH</span>&quot;</span> == <span class="hljs-string">&quot;&quot;</span>]; <span class="hljs-keyword">then</span>
  INPUT_PATH=<span class="hljs-string">&quot;.&quot;</span>
<span class="hljs-keyword">elif</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_PATH</span>&quot;</span> ]; <span class="hljs-keyword">then</span>
  INPUT_PATH=<span class="hljs-string">&quot;.&quot;</span>
<span class="hljs-keyword">fi</span>

VERSION=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>&quot;</span> | grep -oP <span class="hljs-string">&#x27;(?&lt;=/v)[0-9]+&amp;#46;[0-9]+&amp;#46;[0-9]+(-[a-zA-Z0-9]+)?&#x27;</span> || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_SHA</span>&quot;</span>)
<span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$VERSION</span>&quot;</span> != <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_SHA</span>&quot;</span> &amp;&amp; <span class="hljs-string">&quot;<span class="hljs-variable">$VERSION</span>&quot;</span> != v* ]]; <span class="hljs-keyword">then</span>
  VERSION=<span class="hljs-string">&quot;v<span class="hljs-variable">$VERSION</span>&quot;</span>
<span class="hljs-keyword">fi</span>
msg1=$(_justMessage <span class="hljs-string">&quot;<span class="hljs-variable">$_BLUE</span> Running<span class="hljs-variable">$_LIGHTPURPLE</span> Just an Ultimate Site Tool<span class="hljs-variable">$_RESET</span> <span class="hljs-variable">$VERSION</span>&quot;</span>)
msg2=$(_justMessage <span class="hljs-string">&quot;<span class="hljs-variable">$_BLUE</span> Installing Node.js<span class="hljs-variable">$_RESET</span>...&quot;</span>)
msg3=$(_justMessage <span class="hljs-string">&quot;<span class="hljs-variable">$_BLUE</span> Installed Node.js<span class="hljs-variable">$_RESET</span>&quot;</span>)
msg4=$(_justMessage <span class="hljs-string">&quot;<span class="hljs-variable">$_GREEN</span> Postprocessing completed<span class="hljs-variable">$_RESET</span>&quot;</span>)
msg5=$(_justMessage <span class="hljs-string">&quot;<span class="hljs-variable">$_GREEN</span> Generating completed<span class="hljs-variable">$_RESET</span>&quot;</span>)
msg6=$(_justMessage <span class="hljs-string">&quot;<span class="hljs-variable">$_GREEN</span> Compressing completed<span class="hljs-variable">$_RESET</span>&quot;</span>)
msg9=$(_justMessage <span class="hljs-string">&quot;<span class="hljs-variable">$_GREEN</span> Generating completed<span class="hljs-variable">$_RESET</span>&quot;</span>)
<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$msg1</span>&quot;</span>

<span class="hljs-built_in">chmod</span> +x <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.py&quot;</span> <span class="hljs-comment"># use python to get current time in ms cuz yes</span>
TIME0=$(python3 <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.py&quot;</span>)
<span class="hljs-function"><span class="hljs-title">installNodejs</span></span>() {

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$msg2</span>&quot;</span>

 <span class="hljs-built_in">local</span> TIME1=$(python3 <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.py&quot;</span>)

 <span class="hljs-keyword">if</span> ! <span class="hljs-built_in">command</span> -v node &gt; /dev/null; <span class="hljs-keyword">then</span> <span class="hljs-comment"># attempt 0: nodejs installed before running _just</span>

    <span class="hljs-comment"># attempt 1: install via curl</span>

    <span class="hljs-built_in">sudo</span> apt-get remove -y nodejs npm &gt; /dev/null 2&gt;&amp;1 || <span class="hljs-literal">true</span>

    <span class="hljs-built_in">sudo</span> apt-get update -qq &gt; /dev/null 2&gt;&amp;1

    curl -fsSL https://deb.nodesource.com/setup_20.x | <span class="hljs-built_in">sudo</span> -E bash - &gt; /dev/null 2&gt;&amp;1

    <span class="hljs-built_in">sudo</span> apt-get install -y nodejs &gt; /dev/null 2&gt;&amp;1

    <span class="hljs-keyword">if</span> ! <span class="hljs-built_in">command</span> -v node &gt; /dev/null; <span class="hljs-keyword">then</span>

        <span class="hljs-comment"># attempt 2: install via curl with logs</span>

        <span class="hljs-built_in">local</span> ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0207&quot;</span>)

        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span>

        <span class="hljs-built_in">sudo</span> apt-get remove -y nodejs npm || <span class="hljs-literal">true</span>

        <span class="hljs-built_in">sudo</span> apt-get update -qq

        curl -fsSL https://deb.nodesource.com/setup_20.x | <span class="hljs-built_in">sudo</span> -E bash -

        <span class="hljs-built_in">sudo</span> apt-get install -y nodejs

        <span class="hljs-keyword">if</span> ! <span class="hljs-built_in">command</span> -v node &gt; /dev/null; <span class="hljs-keyword">then</span>

            <span class="hljs-comment"># attempt 3: install via sudo apt install</span>

            <span class="hljs-built_in">local</span> ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0208&quot;</span>)

            <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span>

            <span class="hljs-built_in">sudo</span> apt update -qq &amp;&amp; <span class="hljs-built_in">sudo</span> apt install -y nodejs npm &gt; /dev/null 2&gt;&amp;1

            <span class="hljs-keyword">if</span> [ $? -ne 0 ]; <span class="hljs-keyword">then</span>

                <span class="hljs-comment"># attempt 4: install via sudo apt install with logs</span>

                <span class="hljs-built_in">local</span> ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0205&quot;</span>)

                <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span>

                <span class="hljs-built_in">sudo</span> apt update

                <span class="hljs-built_in">sudo</span> apt install -y nodejs npm

            <span class="hljs-keyword">fi</span>

        <span class="hljs-keyword">fi</span>

    <span class="hljs-keyword">fi</span>

 <span class="hljs-keyword">fi</span>

 <span class="hljs-built_in">local</span> TIME2=$(python3 <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.py&quot;</span>)

 NODEVERSION=$(node --version)

 NODESECONDS=$(node <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.js&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME1</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME2</span>&quot;</span>) <span class="hljs-comment"># use js to get nodejs installing duration cuz yes</span>

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$msg3</span> <span class="hljs-variable">$NODEVERSION</span> (<span class="hljs-variable">$NODESECONDS</span>)&quot;</span>
}

<span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$CONFIG_DATA</span>&quot;</span> ]; <span class="hljs-keyword">then</span>

 ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0113&quot;</span>)

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
<span class="hljs-keyword">fi</span>

<span class="hljs-keyword">if</span> [ ! -f <span class="hljs-string">&quot;<span class="hljs-variable">$CONFIG_FILE</span>&quot;</span> ]; <span class="hljs-keyword">then</span>

 ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0108&quot;</span>)

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
<span class="hljs-keyword">fi</span>

CONFIG_JSON=$(node -e <span class="hljs-string">&quot;console.log(JSON.stringify(require(&#x27;./just.config.js&#x27;)));&quot;</span>)
<span class="hljs-keyword">if</span> [ $? -ne 0 ]; <span class="hljs-keyword">then</span>

 ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0109&quot;</span>)

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
<span class="hljs-keyword">fi</span>
<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Parsed just.config.js module.exports: <span class="hljs-variable">$CONFIG_JSON</span>&quot;</span> <span class="hljs-comment"># debug</span>
<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$CONFIG_JSON</span>&quot;</span> &gt; <span class="hljs-string">&quot;<span class="hljs-variable">$CONFIG_DATA</span>&quot;</span>

<span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-subst">$(echo <span class="hljs-string">&quot;<span class="hljs-variable">$CONFIG_JSON</span>&quot;</span> | jq -r &#x27;.module.exports&#x27;)</span>&quot;</span> ]; <span class="hljs-keyword">then</span>

 ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0112&quot;</span>)

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
<span class="hljs-keyword">fi</span>

TYPE=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$CONFIG_JSON</span>&quot;</span> | jq -r <span class="hljs-string">&#x27;.type&#x27;</span>)
<span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> ]; <span class="hljs-keyword">then</span>

 ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0110&quot;</span>)

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
<span class="hljs-keyword">fi</span>

<span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> != <span class="hljs-string">&quot;postprocessor&quot;</span> &amp;&amp; <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> != <span class="hljs-string">&quot;redirect&quot;</span> &amp;&amp; <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> != <span class="hljs-string">&quot;compress&quot;</span> &amp;&amp; <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> != <span class="hljs-string">&quot;docs&quot;</span> ]]; <span class="hljs-keyword">then</span>

 ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0111&quot;</span>)

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
<span class="hljs-keyword">fi</span>

_just_d=<span class="hljs-string">&quot;no&quot;</span> &amp;&amp; 
<span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> != <span class="hljs-string">&quot;compress&quot;</span> &amp;&amp; ! ( <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> == <span class="hljs-string">&quot;docs&quot;</span> &amp;&amp; <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_PATH</span>&quot;</span> != <span class="hljs-string">&quot;.&quot;</span> ) ]]; <span class="hljs-keyword">then</span>

 <span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;deploy&quot;</span> ]; <span class="hljs-keyword">then</span>

    ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;important_dirs&quot;</span> <span class="hljs-string">&quot;0106&quot;</span>)

    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1

 <span class="hljs-keyword">fi</span>

 <span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;_just_data&quot;</span> ]; <span class="hljs-keyword">then</span>

    ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;important_dirs&quot;</span> <span class="hljs-string">&quot;0107&quot;</span>)

    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1

 <span class="hljs-keyword">fi</span>

 <span class="hljs-built_in">mkdir</span> -p deploy

 <span class="hljs-built_in">mkdir</span> -p _just_data
<span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> == <span class="hljs-string">&quot;docs&quot;</span> ]; <span class="hljs-keyword">then</span>

 JDD=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_PATH</span>/_just_data&quot;</span> | sed <span class="hljs-string">&#x27;s#//*#/#g&#x27;</span>)

 _just_dir=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_PATH</span>/_just&quot;</span> | sed <span class="hljs-string">&#x27;s#//*#/#g&#x27;</span>)

 <span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;<span class="hljs-variable">$JDD</span>&quot;</span> ]; <span class="hljs-keyword">then</span>

    ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;important_dirs&quot;</span> <span class="hljs-string">&quot;0125&quot;</span>)

    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1

 <span class="hljs-keyword">fi</span>

 <span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;<span class="hljs-variable">$_just_dir</span>&quot;</span> ]; <span class="hljs-keyword">then</span>

    ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;important_dirs&quot;</span> <span class="hljs-string">&quot;0125&quot;</span>)

    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1

 <span class="hljs-keyword">fi</span>

 <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$JDD</span>&quot;</span>

 <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$_just_dir</span>&quot;</span>

 _just_d=<span class="hljs-string">&quot;yes&quot;</span>
<span class="hljs-keyword">fi</span>

<span class="hljs-function"><span class="hljs-title">jserr</span></span>() {

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-subst">$(cat <span class="hljs-string">&quot;_just_data/e.txt&quot;</span>)</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1
}
HLJSCSS=<span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/documentation/templates/hljs-themes&quot;</span>
<span class="hljs-function"><span class="hljs-title">hljsstyles</span></span>() {

 <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(node $GITHUB_ACTION_PATH/src/documentation/hljscss.js <span class="hljs-string">&quot;<span class="hljs-subst">$(cat <span class="hljs-string">&quot;<span class="hljs-variable">$HLJSCSS</span>/_just_default_light.css&quot;</span>)</span>&quot;</span>)</span>&quot;</span>
}

<span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> == <span class="hljs-string">&quot;postprocessor&quot;</span> ]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">set</span> -e

 postprocessor_checks=$(bash <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/postprocessor/checks.sh 2&gt;&amp;1) || {

    error_code=$?

    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$error_code</span> -eq 1 ]; <span class="hljs-keyword">then</span>

        ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;postprocessor/checks.sh&quot;</span> <span class="hljs-string">&quot;0100&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$postprocessor_checks</span>&quot;</span>)

        <span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$postprocessor_checks</span>&quot;</span> == <span class="hljs-string">&quot;0101&quot;</span> ]; <span class="hljs-keyword">then</span> 

            ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;postprocessor/checks.sh&quot;</span> <span class="hljs-string">&quot;0101&quot;</span>)

        <span class="hljs-keyword">fi</span>

        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1

    <span class="hljs-keyword">fi</span>

 } &amp;&amp; 

 bash <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/postprocessor/prepare_deployment.sh &amp;&amp; 

 bash <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/postprocessor/create_api_endpoints.sh &amp;&amp; 

 bash <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/postprocessor/modify_deployment.sh &amp;&amp; 

 bash <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/postprocessor/override_deployment.sh &amp;&amp; 

 installNodejs &amp;&amp; 

 node <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/compress.js <span class="hljs-string">&quot;deploy&quot;</span> &amp;&amp; 

 bash <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/postprocessor/build_map.sh &amp;&amp; 

 TIME3=$(python3 <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.py&quot;</span>) &amp;&amp; 

 DONEIN=$(node <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.js&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME0</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME3</span>&quot;</span>) &amp;&amp; 

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$msg4</span> (<span class="hljs-variable">$DONEIN</span>)&quot;</span>
<span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> == <span class="hljs-string">&quot;redirect&quot;</span> ]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">mkdir</span> -p deploy/_just &amp;&amp; 

 installNodejs &amp;&amp; 

 bash <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/redirect/checks.sh &amp;&amp; 

 node <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/redirect/index.js &amp;&amp; 

 TIME3=$(python3 <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.py&quot;</span>) &amp;&amp; 

 DONEIN=$(node <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.js&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME0</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME3</span>&quot;</span>) &amp;&amp; 

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$msg5</span> (<span class="hljs-variable">$DONEIN</span>)&quot;</span>
<span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> == <span class="hljs-string">&quot;compress&quot;</span> ]; <span class="hljs-keyword">then</span>

 <span class="hljs-built_in">mkdir</span> -p deploy &amp;&amp; 

 installNodejs &amp;&amp; 

 node <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/compress.js <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_PATH</span>&quot;</span> &amp;&amp; 

 TIME3=$(python3 <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.py&quot;</span>) &amp;&amp; 

 DONEIN=$(node <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.js&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME0</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME3</span>&quot;</span>) &amp;&amp; 

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$msg6</span> (<span class="hljs-variable">$DONEIN</span>)&quot;</span>
<span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$TYPE</span>&quot;</span> == <span class="hljs-string">&quot;docs&quot;</span> ]; <span class="hljs-keyword">then</span>

 HTML=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/documentation/templates/page.html&quot;</span>) &amp;&amp; 

 CSS=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/documentation/templates/base.css&quot;</span>) &amp;&amp; 

 JS=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/documentation/templates/page.js&quot;</span>) &amp;&amp; 

 HIGHLIGHTCSS=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$HLJSCSS</span>/_just_default_dark.css&quot;</span>) &amp;&amp; 

 HIGHLIGHTJSON=$(hljsstyles) &amp;&amp; 

 BUTTONSCSS=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/documentation/templates/buttons.css&quot;</span>) &amp;&amp; 

 SEARCHCSS=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/documentation/templates/search.css&quot;</span>) &amp;&amp; 

 CUSTOMCSS=<span class="hljs-literal">false</span> &amp;&amp; 

 CUSTOMCSSPATH=<span class="hljs-string">&quot;just.config.css&quot;</span> &amp;&amp; 

 <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$CUSTOMCSSPATH</span>&quot;</span> ]; <span class="hljs-keyword">then</span>

    CUSTOMCSS=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$CUSTOMCSSPATH</span>&quot;</span>)

 <span class="hljs-keyword">fi</span> &amp;&amp; 

 <span class="hljs-keyword">if</span> [[ -d <span class="hljs-string">&quot;_just&quot;</span> &amp;&amp; <span class="hljs-string">&quot;<span class="hljs-variable">$_just_d</span>&quot;</span> == <span class="hljs-string">&quot;no&quot;</span> ]]; <span class="hljs-keyword">then</span>

    ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;important_dirs&quot;</span> <span class="hljs-string">&quot;0121&quot;</span>)

    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1

 <span class="hljs-keyword">fi</span> &amp;&amp; 

 <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;_just_error&quot;</span> ]; <span class="hljs-keyword">then</span> 

    ERROR_MESSAGE=$(ErrorMessage <span class="hljs-string">&quot;run.sh&quot;</span> <span class="hljs-string">&quot;0127&quot;</span>)

    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;::error::<span class="hljs-variable">$ERROR_MESSAGE</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1

 <span class="hljs-keyword">fi</span> &amp;&amp; 

 <span class="hljs-built_in">mkdir</span> -p _just &amp;&amp; 

 <span class="hljs-built_in">mkdir</span> -p deploy &amp;&amp; 

 installNodejs &amp;&amp; 

 bash <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/documentation/checks.sh &amp;&amp; 

 INDEXJS0=<span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/documentation/index.js&quot;</span>

 INDEXJS1=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$INDEXJS0</span>&quot;</span>) &amp;&amp; 

 INDEXJS2=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/line.js&quot;</span>) &amp;&amp; 

 <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$INDEXJS2</span>&quot;</span> &gt; <span class="hljs-string">&quot;<span class="hljs-variable">$INDEXJS0</span>&quot;</span> &amp;&amp; 

 INDEXJS3=$(node <span class="hljs-string">&quot;<span class="hljs-variable">$INDEXJS0</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$INDEXJS1</span>&quot;</span>) &amp;&amp; 

 <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$INDEXJS3</span>&quot;</span> &gt; <span class="hljs-string">&quot;<span class="hljs-variable">$INDEXJS0</span>&quot;</span> &amp;&amp; 

 HLJSLANGS=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/data/hljslangs.json&quot;</span>) &amp;&amp; 

 LANGS=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/data/langs.json&quot;</span>) &amp;&amp; 

 LANGSTEXT=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/data/langstext.json&quot;</span>) &amp;&amp; 

 node <span class="hljs-string">&quot;<span class="hljs-variable">$INDEXJS0</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$HTML</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$CSS</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$JS</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_PATH</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_REPOSITORY</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_REPOSITORY_OWNER</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$CUSTOMCSS</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$HLJSLANGS</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$LANGS</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$HIGHLIGHTCSS</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$LANGSTEXT</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$VERSION</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$BUTTONSCSS</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$SEARCHCSS</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$HIGHLIGHTJSON</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_FIXPATH</span>&quot;</span> || jserr &amp;&amp; 

 node <span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/compress.js <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_PATH</span>&quot;</span> &amp;&amp; 

 node <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/documentation/logs.js&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$INPUT_PATH</span>&quot;</span> &amp;&amp; 

 TIME3=$(python3 <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.py&quot;</span>) &amp;&amp; 

 DONEIN=$(node <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_ACTION_PATH</span>/src/time.js&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME0</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$TIME3</span>&quot;</span>) &amp;&amp; 

 <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$msg9</span> (<span class="hljs-variable">$DONEIN</span>)&quot;</span>
<span class="hljs-keyword">fi</span>

