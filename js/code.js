 const APIURL = 'https://test.just.is-a.dev/data/codes.json'; function animateTyping(elementId, text, speed = 100, callback = null) { const element = document.getElementById(elementId); if (!element) { return}; let index = 0; element.innerHTML = ''; function type() { if (index >= text.length) { if (callback) callback(); return}; if (text.charAt(index) === '<') { let endIdx = -1; const openTagMatch = text.substring(index).match(/^<([a-zA-Z0-9]+)[^>]*>/); if (openTagMatch) { const tagName = openTagMatch[1]; const closeTagStr = `</${tagName}>`; const closeIdx = text.indexOf(closeTagStr, index); if (closeIdx !== -1) { endIdx = closeIdx + closeTagStr.length; const fullTagBlock = text.substring(index, endIdx); element.innerHTML += fullTagBlock; index = endIdx} else { element.innerHTML += '<'; index++} } else { element.innerHTML += '<'; index++} } else { element.innerHTML += text.charAt(index); index++}; setTimeout(type, speed)}; type()}; function checkFirstLetterCase(text) { if (!text || typeof text !== 'string') { return undefined} const firstChar = text.charAt(0); if (firstChar === firstChar.toUpperCase() && firstChar !== firstChar.toLowerCase()) { return true} else if (firstChar === firstChar.toLowerCase() && firstChar !== firstChar.toUpperCase()) { return false} else { return null} }; (async()=>{ async function getCodes() { const responce = await fetch(APIURL).then((r)=>{ return r.json()}); let[data,nums]=[[],[]]; for (const[key,val]of Object.entries(responce)) { if (key !== 'README') { val.forEach((item)=>{ data.push(item); nums.push(item.code)})} }; data = data.filter(item=>item.data); return { data,nums:nums.filter((item)=>{ let output = false; data.forEach((code)=>{ output=!output?code.code===item:output}); return output}) } } function getCodeData(code, data) { let output = null; data.forEach((item)=>{ if (item.code === code) { output = item} }); return output} const params = new URLSearchParams(window.location.search); const code = params.get('c'); const codes = await getCodes(); if (code != null && codes.nums.includes(code)) { const codedata = getCodeData(code, codes.data); const elem = (id) => document.getElementById(id); if (codedata.crashed || code.startsWith('03')) { elem('a').classList.add('error')} else if (code.startsWith('02')) { elem('a').classList.add('warn')} else { elem('a').classList.add('ok')}; const info = codedata.data.i||''; const check = checkFirstLetterCase(info); animateTyping('a', code, 200, ()=>{ animateTyping('b', !codedata.data.mg?codedata.message:'', 50, ()=>{ if (check===true) { elem('c').classList.add('info')} else { elem('c').classList.add('tip')} animateTyping('c', check===false?`To fix it, ${info}.`:check===true?info:''||'', 50, ()=>{ animateTyping('d', 'Do you want to redirect to the docs? (y/n)')})})})} })()