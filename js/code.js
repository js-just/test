 const APIURL = 'https://test.just.is-a.dev/data/codes.json'; function animateTyping(elementId, text, speed = 100, callback = null) { const element = document.getElementById(elementId); if (!element) { return}; let index = 0; element.innerHTML = ''; function type() { if (index < text.length) { const char = text.charAt(index); if (char=='<') { let tag = ''; let two = false; while (char != '>' && !two) { tag += char; if (char == '>') { two = true} } element.innerHTML += tag; index=index+tag.length} else { element.innerHTML += char; index++}; setTimeout(type, speed)} else { if (callback) callback()} }; type()}; (async()=>{ async function getCodes() { const responce = await fetch(APIURL).then((r)=>{ return r.json()}); let[data,nums]=[[],[]]; for (const[key,val]of Object.entries(responce)) { if (key !== 'README') { val.forEach((item)=>{ data.push(item); nums.push(item.code)})} }; data = data.filter(item=>item.data); return { data,nums:nums.filter((item)=>{ let output = false; data.forEach((code)=>{ output=!output?code.code===item:output}); return output}) } } function getCodeData(code, data) { let output = null; data.forEach((item)=>{ if (item.code === code) { output = item} }); return output} const params = new URLSearchParams(window.location.search); const code = params.get('c'); const codes = await getCodes(); if (code != null && codes.nums.includes(code)) { const codedata = getCodeData(code, codes.data); const elem = (id) => document.getElementById(id); if (codedata.crashed || code.startsWith('03')) { elem('a').classList.add('error')} else if (code.startsWith('02')) { elem('a').classList.add('warn')} else { elem('a').classList.add('ok')}; animateTyping('a', code, 100, ()=>{ animateTyping('b', !codedata.data.mg?codedata.message:'', 100, ()=>{ animateTyping('c', codedata.data.i||'', 100, ()=>{ animateTyping('d', 'Do you want to redirect to the docs? (y/n)')})})})} })()