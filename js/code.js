 const APIURL = 'https://test.just.is-a.dev/data/codes.json'; function animateTyping(elementId, text, speed = 100, callback = null) { const element = document.getElementById(elementId); if (!element) { return}; let index = 0; element.innerHTML = ''; function type() { if (index < text.length) { element.innerHTML += text.charAt(index); index++; setTimeout(type, speed)} else { if (callback) callback()} }; type()}; (async()=>{ async function getCodes() { const responce = await fetch(APIURL).then((r)=>{ return r.json()}); let[data,nums]=[[],[]]; for (const[key,val]of Object.entries(responce)) { if (key !== 'README') { val.forEach((item)=>{ data.push(item); nums.push(item.code)})} }; data = data.filter(item=>item.data); return { data,nums:nums.filter((item)=>{ let output = false; data.forEach((code)=>{ output=!output?code.code===item:output}); return output}) } } function getCodeData(code, data) { let output = null; data.forEach((item)=>{ if (item.code === code) { output = item} }); return output} const params = new URLSearchParams(window.location.search); const code = params.get('c'); const codes = await getCodes(); if (code != null && codes.nums.includes(code)) { const codedata = getCodeData(code, codes.data); const elem = (id) => document.getElementById(id); animateTyping(elem('a'), code, 100, ()=>{ animateTyping(elem('b'), !codedata.data.mg?codedata.message:'', 100, ()=>{ animateTyping(elem('c'), codedata.data.i||'', 100, ()=>{ animateTyping(elem('d'), 'Do you want to redirect to the docs? (y/n)')})})})} })()